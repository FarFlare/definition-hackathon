{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Pool",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao_token",
          "type": "address"
        }
      ],
      "name": "NewDao",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "initiator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_initiator",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pool_id",
          "type": "uint256"
        }
      ],
      "name": "new_dao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pool_id",
          "type": "uint256"
        }
      ],
      "name": "get_dao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Pool\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao_token\",\"type\":\"address\"}],\"name\":\"NewDao\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pool_id\",\"type\":\"uint256\"}],\"name\":\"get_dao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool_id\",\"type\":\"uint256\"}],\"name\":\"new_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_initiator\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol\":{\"keccak256\":\"0x3c76445862dce4d7552059aac3033ec048409b1fc23d46fcbd96b35451363bb1\",\"urls\":[\"bzz-raw://c3c9770eadad99951f081a87428efb44b8560ca9fddf37bdbf248d28b4b7e99c\",\"dweb:/ipfs/Qmc6kBo3AtWs2EupwBrC79YVkNTzsmbZGF62KXvdtH2v6W\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol\":{\"keccak256\":\"0x08e78c126225c0f24f976c2b19e690fdbf316ba30e03211fd271878c362d2ca1\",\"urls\":[\"bzz-raw://1acdf87f4d4fcf57a074b8714ada6beac3fd6a1311353017830aa2a6462d5f88\",\"dweb:/ipfs/QmR2TMPGrt6VeMTRrWFRbf2cw7Uwb8qfrMxkbD8QY8gc2z\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":{\"keccak256\":\"0x36c4a039313580e38bc080274407b14a28d06974555e10324939420f5766b0ed\",\"urls\":[\"bzz-raw://787b9015504a88eb6bc6fc30a4b0e3120e2c1021911af548b9c7baf357c0ce87\",\"dweb:/ipfs/QmYPGaiCoKttuUefE2F1Z8ryetWgEHCccidpAwbgbs2k49\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol\":{\"keccak256\":\"0xdc611aea44ecb2095d6c214fa48039d1f2c44e65b27ed366f04839e00be5bff2\",\"urls\":[\"bzz-raw://136cada0e342acdc30400ce51a9ef4cb59239fba1d7b20cb4e5df6470bff2cb5\",\"dweb:/ipfs/QmWWjbFMsgtbhgUQ56edNhKVZs4TjJuE1i55ug44KBYrYg\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80631672100f146200006f57806316f0115b14620000a55780635c39fcc114620000c757806366d3820314620000e95780638da5cb5b1462000109578063e31dff13146200012b575b600080fd5b6200008d60048036038101906200008791906200077d565b6200014b565b6040516200009c91906200086f565b60405180910390f35b620000af62000188565b604051620000be91906200088c565b60405180910390f35b620000d1620001ae565b604051620000e091906200086f565b60405180910390f35b620001076004803603810190620001019190620006de565b620001d2565b005b62000113620002a6565b6040516200012291906200086f565b60405180910390f35b620001496004803603810190620001439190620007a9565b620002cc565b005b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200022d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620002a357806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200032557600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639215d96f846040518263ffffffff1660e01b81526004016200038591906200097c565b60006040518083038186803b1580156200039e57600080fd5b505afa158015620003b3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620003de91906200070a565b915091506000828286600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620004189062000622565b62000427949392919062000921565b604051809103906000f08015801562000444573d6000803e3d6000fd5b50905060008382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200049d9062000630565b620004ac9493929190620008cd565b604051809103906000f080158015620004c9573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87a2ae0205f28cf6777eb213e867569f69e687e4b090364233360729fb68392d866040516200052b9190620008a9565b60405180910390a3806003600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f9530108683856040518463ffffffff1660e01b8152600401620005e69392919062000999565b600060405180830381600087803b1580156200060157600080fd5b505af115801562000616573d6000803e3d6000fd5b50505050505050505050565b611d048062000bc083390190565b61355a80620028c483390190565b6000620006556200064f84620009ff565b620009d6565b9050828152602081018484840111156200066e57600080fd5b6200067b84828562000adf565b509392505050565b600081359050620006948162000b8b565b92915050565b600082601f830112620006ac57600080fd5b8151620006be8482602086016200063e565b91505092915050565b600081359050620006d88162000ba5565b92915050565b600060208284031215620006f157600080fd5b6000620007018482850162000683565b91505092915050565b600080604083850312156200071e57600080fd5b600083015167ffffffffffffffff8111156200073957600080fd5b62000747858286016200069a565b925050602083015167ffffffffffffffff8111156200076557600080fd5b62000773858286016200069a565b9150509250929050565b6000602082840312156200079057600080fd5b6000620007a084828501620006c7565b91505092915050565b60008060408385031215620007bd57600080fd5b6000620007cd85828601620006c7565b9250506020620007e085828601620006c7565b9150509250929050565b620007f58162000a51565b82525050565b620008068162000a8f565b82525050565b620008178162000ab7565b82525050565b60006200082a8262000a35565b62000836818562000a40565b93506200084881856020860162000adf565b620008538162000b7a565b840191505092915050565b620008698162000a85565b82525050565b6000602082019050620008866000830184620007ea565b92915050565b6000602082019050620008a360008301846200080c565b92915050565b60006020820190508181036000830152620008c581846200081d565b905092915050565b60006080820190508181036000830152620008e981876200081d565b9050620008fa6020830186620007fb565b6200090960408301856200080c565b620009186060830184620007ea565b95945050505050565b600060808201905081810360008301526200093d81876200081d565b905081810360208301526200095381866200081d565b90506200096460408301856200085e565b620009736060830184620007ea565b95945050505050565b60006020820190506200099360008301846200085e565b92915050565b6000606082019050620009b060008301866200085e565b620009bf6020830185620007ea565b620009ce6040830184620007fb565b949350505050565b6000620009e2620009f5565b9050620009f0828262000b15565b919050565b6000604051905090565b600067ffffffffffffffff82111562000a1d5762000a1c62000b4b565b5b62000a288262000b7a565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600062000a5e8262000a65565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000a9c8262000aa3565b9050919050565b600062000ab08262000a65565b9050919050565b600062000ac48262000acb565b9050919050565b600062000ad88262000a65565b9050919050565b60005b8381101562000aff57808201518184015260208101905062000ae2565b8381111562000b0f576000848401525b50505050565b62000b208262000b7a565b810181811067ffffffffffffffff8211171562000b425762000b4162000b4b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000b968162000a51565b811462000ba257600080fd5b50565b62000bb08162000a85565b811462000bbc57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001d0438038062001d0483398181016040528101906200003791906200038f565b83838160039080519060200190620000519291906200023f565b5080600490805190602001906200006a9291906200023f565b505050620000a98162000082620000b360201b60201c565b600a620000909190620005cc565b846200009d919062000709565b620000bc60201b60201c565b505050506200095f565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001269062000465565b60405180910390fd5b62000143600083836200023560201b60201c565b806002600082825462000157919062000514565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001ae919062000514565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000215919062000487565b60405180910390a362000231600083836200023a60201b60201c565b5050565b505050565b505050565b8280546200024d90620007eb565b90600052602060002090601f016020900481019282620002715760008555620002bd565b82601f106200028c57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bc5782518255916020019190600101906200029f565b5b509050620002cc9190620002d0565b5090565b5b80821115620002eb576000816000905550600101620002d1565b5090565b6000620003066200030084620004cd565b620004a4565b9050828152602081018484840111156200031f57600080fd5b6200032c848285620007b5565b509392505050565b60008151905062000345816200092b565b92915050565b600082601f8301126200035d57600080fd5b81516200036f848260208601620002ef565b91505092915050565b600081519050620003898162000945565b92915050565b60008060008060808587031215620003a657600080fd5b600085015167ffffffffffffffff811115620003c157600080fd5b620003cf878288016200034b565b945050602085015167ffffffffffffffff811115620003ed57600080fd5b620003fb878288016200034b565b93505060406200040e8782880162000378565b9250506060620004218782880162000334565b91505092959194509250565b60006200043c601f8362000503565b9150620004498262000902565b602082019050919050565b6200045f816200079e565b82525050565b6000602082019050818103600083015262000480816200042d565b9050919050565b60006020820190506200049e600083018462000454565b92915050565b6000620004b0620004c3565b9050620004be828262000821565b919050565b6000604051905090565b600067ffffffffffffffff821115620004eb57620004ea620008b5565b5b620004f682620008e4565b9050602081019050919050565b600082825260208201905092915050565b600062000521826200079e565b91506200052e836200079e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000566576200056562000857565b5b828201905092915050565b6000808291508390505b6001851115620005c3578086048111156200059b576200059a62000857565b5b6001851615620005ab5780820291505b8081029050620005bb85620008f5565b94506200057b565b94509492505050565b6000620005d9826200079e565b9150620005e683620007a8565b9250620006157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200061d565b905092915050565b6000826200062f576001905062000702565b816200063f576000905062000702565b8160018114620006585760028114620006635762000699565b600191505062000702565b60ff84111562000678576200067762000857565b5b8360020a91508482111562000692576200069162000857565b5b5062000702565b5060208310610133831016604e8410600b8410161715620006d35782820a905083811115620006cd57620006cc62000857565b5b62000702565b620006e2848484600162000571565b92509050818404811115620006fc57620006fb62000857565b5b81810290505b9392505050565b600062000716826200079e565b915062000723836200079e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200075f576200075e62000857565b5b828202905092915050565b600062000777826200077e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620007d5578082015181840152602081019050620007b8565b83811115620007e5576000848401525b50505050565b600060028204905060018216806200080457607f821691505b602082108114156200081b576200081a62000886565b5b50919050565b6200082c82620008e4565b810181811067ffffffffffffffff821117156200084e576200084d620008b5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000936816200076a565b81146200094257600080fd5b50565b62000950816200079e565b81146200095c57600080fd5b50565b611395806200096f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea2646970667358221220803b65279b0b99b4cd4975d10e0ed53cdf622d5e45acf757e61245c7c8bec42a64736f6c6343000804003360806040523480156200001157600080fd5b506040516200355a3803806200355a833981810160405281019062000037919062000283565b83600190805190602001906200004f9291906200011c565b50826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000522565b8280546200012a90620003f9565b90600052602060002090601f0160209004810192826200014e57600085556200019a565b82601f106200016957805160ff19168380011785556200019a565b828001600101855582156200019a579182015b82811115620001995782518255916020019190600101906200017c565b5b509050620001a99190620001ad565b5090565b5b80821115620001c8576000816000905550600101620001ae565b5090565b6000620001e3620001dd8462000331565b62000308565b905082815260208101848484011115620001fc57600080fd5b62000209848285620003c3565b509392505050565b6000815190506200022281620004d4565b92915050565b6000815190506200023981620004ee565b92915050565b600081519050620002508162000508565b92915050565b600082601f8301126200026857600080fd5b81516200027a848260208601620001cc565b91505092915050565b600080600080608085870312156200029a57600080fd5b600085015167ffffffffffffffff811115620002b557600080fd5b620002c38782880162000256565b9450506020620002d68782880162000228565b9350506040620002e9878288016200023f565b9250506060620002fc8782880162000211565b91505092959194509250565b60006200031462000327565b90506200032282826200042f565b919050565b6000604051905090565b600067ffffffffffffffff8211156200034f576200034e62000494565b5b6200035a82620004c3565b9050602081019050919050565b60006200037482620003a3565b9050919050565b6000620003888262000367565b9050919050565b60006200039c8262000367565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003e3578082015181840152602081019050620003c6565b83811115620003f3576000848401525b50505050565b600060028204905060018216806200041257607f821691505b6020821081141562000429576200042862000465565b5b50919050565b6200043a82620004c3565b810181811067ffffffffffffffff821117156200045c576200045b62000494565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620004df8162000367565b8114620004eb57600080fd5b50565b620004f9816200037b565b81146200050557600080fd5b50565b62000513816200038f565b81146200051f57600080fd5b50565b61302880620005326000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063561f4a6a116100975780637acb7757116100665780637acb7757146102c1578063c9d27afe146102dd578063e4dd26cf146102f9578063e9a4b6911461031557610100565b8063561f4a6a146102395780635c39fcc114610255578063688e1d3114610273578063698839fd1461029157610100565b806317eb2f09116100d357806317eb2f091461019f578063379607f5146101cf5780633eda5200146101eb578063528f9d551461021b57610100565b806306fdde03146101055780630f9e4fb51461012357806310b1939f1461013f578063150b7a021461016f575b600080fd5b61010d610331565b60405161011a91906128e3565b60405180910390f35b61013d600480360381019061013891906121dd565b6103bf565b005b6101596004803603810190610154919061236c565b610738565b6040516101669190612870565b60405180910390f35b6101896004803603810190610184919061215d565b6108dc565b60405161019691906128ad565b60405180910390f35b6101b960048036038101906101b4919061236c565b6108f1565b6040516101c69190612892565b60405180910390f35b6101e960048036038101906101e4919061236c565b610941565b005b6102056004803603810190610200919061236c565b610af3565b60405161021291906129a5565b60405180910390f35b610223610df0565b60405161023091906129c7565b60405180910390f35b610253600480360381019061024e91906123be565b610df6565b005b61025d610f22565b60405161026a91906127cc565b60405180910390f35b61027b610f48565b60405161028891906128c8565b60405180910390f35b6102ab60048036038101906102a6919061210b565b610f6c565b6040516102b891906129c7565b60405180910390f35b6102db60048036038101906102d691906123be565b610fb5565b005b6102f760048036038101906102f291906123fa565b611220565b005b610313600480360381019061030e9190612242565b611503565b005b61032f600480360381019061032a91906122d9565b611840565b005b6001805461033e90612d0a565b80601f016020809104026020016040519081016040528092919081815260200182805461036a90612d0a565b80156103b75780601f1061038c576101008083540402835291602001916103b7565b820191906000526020600020905b81548152906001019060200180831161039a57829003601f168201915b505050505081565b60001515600460000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90612965565b60405180910390fd5b6000811461061b5760008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016104c391906129c7565b60206040518083038186803b1580156104db57600080fd5b505afa1580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190612134565b73ffffffffffffffffffffffffffffffffffffffff1614610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090612985565b60405180910390fd5b600460010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050506106c8565b600460020160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505b6001600460000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60606000821415610805576004600101805480602002602001604051908101604052809291908181526020016000905b828210156107fa57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610768565b5050505090506108d7565b60018214156108d0576004600201805480602002602001604051908101604052809291908181526020016000905b828210156108c557838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610833565b5050505090506108d7565b6060809150505b919050565b600063150b7a0260e01b905095945050505050565b6108f9611d60565b60405180604001604052806008600085815260200190815260200160002060060154815260200160086000858152602001908152602001600020600701548152509050919050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a405760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109e8929190612847565b602060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190612219565b50610aef565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a9b929190612847565b602060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190612219565b505b5050565b610afb611d82565b60086000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff166002811115610b65577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610b9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182018054610bb190612d0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdd90612d0a565b8015610c2a5780601f10610bff57610100808354040283529160200191610c2a565b820191906000526020600020905b815481529060010190602001808311610c0d57829003601f168201915b50505050508152602001600282018054610c4390612d0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6f90612d0a565b8015610cbc5780601f10610c9157610100808354040283529160200191610cbc565b820191906000526020600020905b815481529060010190602001808311610c9f57829003601f168201915b50505050508152602001600382018054610cd590612d0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0190612d0a565b8015610d4e5780601f10610d2357610100808354040283529160200191610d4e565b820191906000526020600020905b815481529060010190602001808311610d3157829003601f168201915b50505050508152602001600482016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200160068201548152602001600782015481526020016008820154815250509050919050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630856040518463ffffffff1660e01b8152600401610e7593929190612810565b602060405180830381600087803b158015610e8f57600080fd5b505af1158015610ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec79190612219565b5081600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f179190612b18565b925050819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b81526004016110119291906127e7565b60206040518083038186803b15801561102957600080fd5b505afa15801561103d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110619190612395565b10156111165760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b81526004016110c2929190612847565b602060405180830381600087803b1580156110dc57600080fd5b505af11580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111149190612219565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161117393929190612810565b602060405180830381600087803b15801561118d57600080fd5b505af11580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c59190612219565b5081600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112159190612b18565b925050819055505050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156112a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129a90612905565b60405180910390fd5b600015156009600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133e90612925565b60405180910390fd5b6001151581151514156113c557600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546008600084815260200190815260200160002060060160008282546113b99190612b18565b92505081905550611432565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460086000848152602001908152602001600020600701600082825461142a9190612b18565b925050819055505b60006008600084815260200190815260200160002060070154600860008581526020019081526020016000206006015461146c9190612b18565b905060016009600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600860008481526020019081526020016000206008015481106114fe576114fd83611b02565b5b505050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157d90612945565b60405180910390fd5b6001600260008282546115999190612b18565b925050819055506000604051806101000160405280600060028111156115e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018581526020018481526020018381526020016040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525081526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116a757600080fd5b505afa1580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df9190612395565b60036116eb9190612b9f565b6116f59190612b6e565b81525090508060086000600254815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611761577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001019080519060200190611782929190611e05565b50604082015181600201908051906020019061179f929190611e05565b5060608201518160030190805190602001906117bc929190611e8b565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050565b6001600260008282546118539190612b18565b925050819055506060600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481525090506000604051806101000160405280600060028111156118d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018881526020018781526020018481526020018381526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561196657600080fd5b505afa15801561197a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199e9190612395565b60036119aa9190612b9f565b6119b49190612b6e565b81525090508060086000600254815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611a20577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001019080519060200190611a41929190611e05565b506040820151816002019080519060200190611a5e929190611e05565b506060820151816003019080519060200190611a7b929190611e8b565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050505050565b600860008281526020019081526020016000206007015460086000838152602001908152602001600020600601541115611cf75760016008600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611b96577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600073ffffffffffffffffffffffffffffffffffffffff166008600083815260200190815260200160002060040160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cf25760006008600083815260200190815260200160002060040160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd30600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660086000878152602001908152602001600020600401600101546040518463ffffffff1660e01b8152600401611cbe93929190612810565b600060405180830381600087803b158015611cd857600080fd5b505af1158015611cec573d6000803e3d6000fd5b50505050505b611d5d565b60026008600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611d57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6040518060400160405280600290602082028036833780820191505090505090565b60405180610100016040528060006002811115611dc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001606081526020016060815260200160608152602001611dea611f11565b81526020016000815260200160008152602001600081525090565b828054611e1190612d0a565b90600052602060002090601f016020900481019282611e335760008555611e7a565b82601f10611e4c57805160ff1916838001178555611e7a565b82800160010185558215611e7a579182015b82811115611e79578251825591602001919060010190611e5e565b5b509050611e879190611f41565b5090565b828054611e9790612d0a565b90600052602060002090601f016020900481019282611eb95760008555611f00565b82601f10611ed257805160ff1916838001178555611f00565b82800160010185558215611f00579182015b82811115611eff578251825591602001919060010190611ee4565b5b509050611f0d9190611f41565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115611f5a576000816000905550600101611f42565b5090565b6000611f71611f6c84612a07565b6129e2565b905082815260208101848484011115611f8957600080fd5b611f94848285612cc8565b509392505050565b6000611faf611faa84612a38565b6129e2565b905082815260208101848484011115611fc757600080fd5b611fd2848285612cc8565b509392505050565b600081359050611fe981612f96565b92915050565b600081519050611ffe81612f96565b92915050565b60008135905061201381612fad565b92915050565b60008151905061202881612fad565b92915050565b60008083601f84011261204057600080fd5b8235905067ffffffffffffffff81111561205957600080fd5b60208301915083600182028301111561207157600080fd5b9250929050565b600082601f83011261208957600080fd5b8135612099848260208601611f5e565b91505092915050565b6000813590506120b181612fc4565b92915050565b600082601f8301126120c857600080fd5b81356120d8848260208601611f9c565b91505092915050565b6000813590506120f081612fdb565b92915050565b60008151905061210581612fdb565b92915050565b60006020828403121561211d57600080fd5b600061212b84828501611fda565b91505092915050565b60006020828403121561214657600080fd5b600061215484828501611fef565b91505092915050565b60008060008060006080868803121561217557600080fd5b600061218388828901611fda565b955050602061219488828901611fda565b94505060406121a5888289016120e1565b935050606086013567ffffffffffffffff8111156121c257600080fd5b6121ce8882890161202e565b92509250509295509295909350565b600080604083850312156121f057600080fd5b60006121fe85828601611fda565b925050602061220f858286016120e1565b9150509250929050565b60006020828403121561222b57600080fd5b600061223984828501612019565b91505092915050565b60008060006060848603121561225757600080fd5b600084013567ffffffffffffffff81111561227157600080fd5b61227d868287016120b7565b935050602084013567ffffffffffffffff81111561229a57600080fd5b6122a6868287016120b7565b925050604084013567ffffffffffffffff8111156122c357600080fd5b6122cf86828701612078565b9150509250925092565b600080600080608085870312156122ef57600080fd5b600085013567ffffffffffffffff81111561230957600080fd5b612315878288016120b7565b945050602085013567ffffffffffffffff81111561233257600080fd5b61233e878288016120b7565b935050604061234f878288016120a2565b9250506060612360878288016120e1565b91505092959194509250565b60006020828403121561237e57600080fd5b600061238c848285016120e1565b91505092915050565b6000602082840312156123a757600080fd5b60006123b5848285016120f6565b91505092915050565b600080604083850312156123d157600080fd5b60006123df858286016120e1565b92505060206123f085828601611fda565b9150509250929050565b6000806040838503121561240d57600080fd5b600061241b858286016120e1565b925050602061242c85828601612004565b9150509250929050565b600061244283836126c0565b60408301905092915050565b600061245a83836127ae565b60208301905092915050565b61246f81612bf9565b82525050565b61247e81612bf9565b82525050565b600061248f82612a83565b6124998185612ac9565b93506124a483612a69565b8060005b838110156124d55781516124bc8882612436565b97506124c783612aaf565b9250506001810190506124a8565b5085935050505092915050565b6124eb81612a8e565b6124f58184612ada565b925061250082612a79565b8060005b83811015612531578151612518878261244e565b965061252383612abc565b925050600181019050612504565b505050505050565b61254281612c17565b82525050565b600061255382612a99565b61255d8185612ae5565b935061256d818560208601612cd7565b61257681612e58565b840191505092915050565b61258a81612c92565b82525050565b61259981612cb6565b82525050565b60006125aa82612aa4565b6125b48185612af6565b93506125c4818560208601612cd7565b6125cd81612e58565b840191505092915050565b60006125e382612aa4565b6125ed8185612b07565b93506125fd818560208601612cd7565b61260681612e58565b840191505092915050565b600061261e602b83612b07565b915061262982612e69565b604082019050919050565b6000612641601b83612b07565b915061264c82612eb8565b602082019050919050565b6000612664603c83612b07565b915061266f82612ee1565b604082019050919050565b6000612687601c83612b07565b915061269282612f30565b602082019050919050565b60006126aa601783612b07565b91506126b582612f59565b602082019050919050565b6040820160008201516126d66000850182612466565b5060208201516126e960208501826127ae565b50505050565b6000610120830160008301516127086000860182612590565b5060208301518482036020860152612720828261259f565b9150506040830151848203604086015261273a828261259f565b915050606083015184820360608601526127548282612548565b915050608083015161276960808601826126c0565b5060a083015161277c60c08601826127ae565b5060c083015161278f60e08601826127ae565b5060e08301516127a36101008601826127ae565b508091505092915050565b6127b781612c88565b82525050565b6127c681612c88565b82525050565b60006020820190506127e16000830184612475565b92915050565b60006040820190506127fc6000830185612475565b6128096020830184612475565b9392505050565b60006060820190506128256000830186612475565b6128326020830185612475565b61283f60408301846127bd565b949350505050565b600060408201905061285c6000830185612475565b61286960208301846127bd565b9392505050565b6000602082019050818103600083015261288a8184612484565b905092915050565b60006040820190506128a760008301846124e2565b92915050565b60006020820190506128c26000830184612539565b92915050565b60006020820190506128dd6000830184612581565b92915050565b600060208201905081810360008301526128fd81846125d8565b905092915050565b6000602082019050818103600083015261291e81612611565b9050919050565b6000602082019050818103600083015261293e81612634565b9050919050565b6000602082019050818103600083015261295e81612657565b9050919050565b6000602082019050818103600083015261297e8161267a565b9050919050565b6000602082019050818103600083015261299e8161269d565b9050919050565b600060208201905081810360008301526129bf81846126ef565b905092915050565b60006020820190506129dc60008301846127bd565b92915050565b60006129ec6129fd565b90506129f88282612d3c565b919050565b6000604051905090565b600067ffffffffffffffff821115612a2257612a21612e29565b5b612a2b82612e58565b9050602081019050919050565b600067ffffffffffffffff821115612a5357612a52612e29565b5b612a5c82612e58565b9050602081019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612b2382612c88565b9150612b2e83612c88565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b6357612b62612d6d565b5b828201905092915050565b6000612b7982612c88565b9150612b8483612c88565b925082612b9457612b93612d9c565b5b828204905092915050565b6000612baa82612c88565b9150612bb583612c88565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612bee57612bed612d6d565b5b828202905092915050565b6000612c0482612c68565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000612c4e82612bf9565b9050919050565b6000819050612c6382612f82565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612c9d82612ca4565b9050919050565b6000612caf82612c68565b9050919050565b6000612cc182612c55565b9050919050565b82818337600083830152505050565b60005b83811015612cf5578082015181840152602081019050612cda565b83811115612d04576000848401525b50505050565b60006002820490506001821680612d2257607f821691505b60208210811415612d3657612d35612dfa565b5b50919050565b612d4582612e58565b810181811067ffffffffffffffff82111715612d6457612d63612e29565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f20766f7465000000000000000000000000000000000000000000602082015250565b7f5468697320757365722068617320616c726561647920766f7465640000000000600082015250565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f206372656174652061206e65772070726f706f73616c00000000602082015250565b7f5468697320617373657420697320616c7265616479206c6f636b656400000000600082015250565b7f546869732061737365742069736e2774206c6f636b6564000000000000000000600082015250565b60038110612f9357612f92612dcb565b5b50565b612f9f81612bf9565b8114612faa57600080fd5b50565b612fb681612c0b565b8114612fc157600080fd5b50565b612fcd81612c43565b8114612fd857600080fd5b50565b612fe481612c88565b8114612fef57600080fd5b5056fea264697066735822122030a1fc95ad1c049f934c27326d75415845e17cceff05e9be165841a59ae8655764736f6c63430008040033a2646970667358221220e4dca616026555e78ed41f506460f5cbfa218043fb3d745c1deef286901d579264736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1431:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:11",
                "type": ""
              }
            ],
            "src": "7:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "232:93:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "242:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "257:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "251:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "242:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "313:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Pool_$1381",
                      "nodeType": "YulIdentifier",
                      "src": "273:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "273:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "273:46:11"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Pool_$1381_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "210:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "218:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "226:5:11",
                "type": ""
              }
            ],
            "src": "156:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "438:359:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "484:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "493:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "496:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "486:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "486:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "486:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "459:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "455:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "455:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "480:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "451:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "448:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "510:141:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "525:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "539:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "529:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "554:87:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "613:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "624:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "609:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "609:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "633:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Pool_$1381_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "564:44:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "564:77:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "554:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "661:129:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "676:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "690:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "680:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "706:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "752:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "763:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "748:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "748:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "772:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "716:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "716:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "706:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Pool_$1381t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "400:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "411:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "423:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "431:6:11",
                "type": ""
              }
            ],
            "src": "331:466:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "848:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "858:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "887:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "869:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "869:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "858:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "830:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "840:7:11",
                "type": ""
              }
            ],
            "src": "803:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "963:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "973:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1002:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "984:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "973:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Pool_$1381",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "945:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "955:7:11",
                "type": ""
              }
            ],
            "src": "905:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1065:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1075:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1090:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1097:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1086:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1075:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1047:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1057:7:11",
                "type": ""
              }
            ],
            "src": "1020:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1195:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1252:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1261:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1264:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1254:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1254:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1254:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1218:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1243:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1225:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1225:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1215:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1215:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1208:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1205:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1188:5:11",
                "type": ""
              }
            ],
            "src": "1152:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1336:92:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1406:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1415:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1418:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1408:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1408:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1408:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1359:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1397:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Pool_$1381",
                              "nodeType": "YulIdentifier",
                              "src": "1366:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1366:37:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1356:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1356:48:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1349:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1349:56:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1346:2:11"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Pool_$1381",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1329:5:11",
                "type": ""
              }
            ],
            "src": "1280:148:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_Pool_$1381_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Pool_$1381(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Pool_$1381t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Pool_$1381_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Pool_$1381(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Pool_$1381(value) {\n        if iszero(eq(value, cleanup_t_contract$_Pool_$1381(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9334:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:259:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "137:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "121:15:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "203:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "210:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "196:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "248:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "230:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "303:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "272:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "268:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "286:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "265:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "338:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "343:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "348:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "316:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:39:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:11",
                "type": ""
              }
            ],
            "src": "7:354:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "451:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "438:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "429:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "494:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "467:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "467:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "397:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "405:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "413:5:11",
                "type": ""
              }
            ],
            "src": "367:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "599:215:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "648:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "657:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "660:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "650:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "650:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "650:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "627:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "635:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "623:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "623:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "642:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "619:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "609:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "673:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "687:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "687:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "677:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "709:99:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "789:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "796:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "804:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "718:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:90:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "709:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "577:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "585:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "593:5:11",
                "type": ""
              }
            ],
            "src": "526:288:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "872:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "882:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "904:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "891:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "882:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "947:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "920:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "920:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "850:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "858:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "866:5:11",
                "type": ""
              }
            ],
            "src": "820:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1031:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1077:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1052:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1061:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1048:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1073:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1041:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1103:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1118:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1122:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1147:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1182:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1193:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1178:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1178:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1157:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1147:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1012:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1024:6:11",
                "type": ""
              }
            ],
            "src": "965:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1347:538:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1393:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1402:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1395:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1395:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1368:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1364:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1364:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1389:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1357:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:224:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:38:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1458:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1469:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1454:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1454:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1448:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1448:24:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1519:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1528:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1531:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1521:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1521:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1521:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1488:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1488:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1485:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1549:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1605:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1616:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1601:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1601:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1559:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1559:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1549:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1653:225:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1668:39:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1692:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1703:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1688:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1688:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1682:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:25:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1672:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1754:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1763:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1766:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1756:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1756:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1756:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1726:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1734:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1720:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1784:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1840:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1851:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1836:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1836:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1860:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1794:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1784:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1309:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1320:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1332:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1340:6:11",
                "type": ""
              }
            ],
            "src": "1233:652:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1957:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2003:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2012:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2015:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2005:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2005:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2005:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1978:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1987:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1974:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1999:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1970:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1967:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2029:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2044:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2058:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2048:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2073:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2108:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2119:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2104:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2104:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2128:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2083:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2083:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2073:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1927:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1938:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1950:6:11",
                "type": ""
              }
            ],
            "src": "1891:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2242:324:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2288:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2297:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2300:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2290:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2290:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2290:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2263:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2272:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2259:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2259:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2284:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2255:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2255:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2252:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2314:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2329:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2343:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2333:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2358:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2393:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2404:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2389:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2389:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2413:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2368:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2368:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2358:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2486:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2521:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2532:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2517:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2517:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2541:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2496:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2496:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2486:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2204:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2215:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2227:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2235:6:11",
                "type": ""
              }
            ],
            "src": "2159:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2637:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2654:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2677:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2659:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2659:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2647:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2647:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2647:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2625:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2632:3:11",
                "type": ""
              }
            ],
            "src": "2572:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2776:81:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2793:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2844:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$2005_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2798:45:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2798:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2786:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2786:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2786:65:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$2005_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2764:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2771:3:11",
                "type": ""
              }
            ],
            "src": "2696:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2941:79:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2958:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3007:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Pool_$1381_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2963:43:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2963:50:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2951:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2951:63:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Pool_$1381_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2929:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2936:3:11",
                "type": ""
              }
            ],
            "src": "2863:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3118:272:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3128:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3175:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3142:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3142:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3132:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3190:78:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3256:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3261:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3197:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:71:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3190:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3303:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3310:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3299:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3299:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3317:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3322:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3277:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3277:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3338:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3349:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3376:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3354:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3354:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3345:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3345:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3338:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3099:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3106:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3114:3:11",
                "type": ""
              }
            ],
            "src": "3026:364:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3461:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3478:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3501:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3483:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3483:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3471:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3471:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3471:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3449:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3456:3:11",
                "type": ""
              }
            ],
            "src": "3396:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3618:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3628:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3640:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3651:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3636:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3636:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3628:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3708:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3721:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3732:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3717:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3717:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3664:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3664:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3664:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3590:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3602:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3613:4:11",
                "type": ""
              }
            ],
            "src": "3520:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3859:137:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3869:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3881:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3892:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3877:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3877:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3869:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3962:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3975:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3986:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3971:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3971:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$1381_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3905:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:84:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3905:84:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Pool_$1381__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3831:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3843:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3854:4:11",
                "type": ""
              }
            ],
            "src": "3748:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4120:195:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4130:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4142:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4153:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4138:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4130:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4177:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4188:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4173:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4173:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4196:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4202:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4192:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4192:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4166:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4166:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4166:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4222:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4294:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4303:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4230:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4222:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4092:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4104:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4115:4:11",
                "type": ""
              }
            ],
            "src": "4002:313:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4551:470:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4561:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4573:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4584:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4569:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4569:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4561:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4609:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4620:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4605:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4605:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4628:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4634:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4624:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4624:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4598:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4598:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4598:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4654:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4726:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4735:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4662:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4662:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4654:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4809:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4822:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4833:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4818:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4818:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$2005_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4750:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4750:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4750:87:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4904:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4917:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4928:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4913:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4913:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$1381_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4847:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4847:85:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4847:85:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4986:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4999:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5010:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4995:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4995:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4942:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4942:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4942:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$2005_t_contract$_Pool_$1381_t_address__to_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4499:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4511:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4519:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4527:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4535:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4546:4:11",
                "type": ""
              }
            ],
            "src": "4321:700:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5249:513:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5259:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5271:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5282:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5267:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5267:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5259:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5307:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5318:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5303:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5303:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5326:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5332:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5322:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5322:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5296:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5296:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5296:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5352:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5424:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5433:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5360:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5360:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5352:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5459:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5470:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5455:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5455:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5479:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5485:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5475:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5475:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5448:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5448:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5448:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5505:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5577:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5586:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5513:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5513:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5505:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5645:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5658:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5669:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5654:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5654:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5601:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5601:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5601:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5727:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5740:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5751:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5736:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5736:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5683:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5683:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5683:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5197:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5209:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5217:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5225:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5233:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5244:4:11",
                "type": ""
              }
            ],
            "src": "5027:735:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5866:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5876:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5888:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5899:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5884:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5884:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5876:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5956:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5969:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5980:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5965:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5965:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5912:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5912:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5912:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5838:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5850:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5861:4:11",
                "type": ""
              }
            ],
            "src": "5768:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6165:303:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6175:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6187:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6198:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6183:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6183:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6175:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6255:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6268:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6279:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6264:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6264:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6211:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6211:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6211:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6336:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6349:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6360:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6345:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6345:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6292:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6292:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6292:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6433:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6446:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6457:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6442:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6442:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$2005_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6374:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6374:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6374:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_contract$_IERC20_$2005__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6121:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6133:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6141:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6149:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6160:4:11",
                "type": ""
              }
            ],
            "src": "5996:472:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6515:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6525:30:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "6535:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6535:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6525:6:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6584:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6592:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "6564:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6564:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6564:33:11"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6499:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6508:6:11",
                "type": ""
              }
            ],
            "src": "6474:129:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6649:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6659:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6675:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6669:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6669:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6659:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6642:6:11",
                "type": ""
              }
            ],
            "src": "6609:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6757:241:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6862:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6864:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6864:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6864:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6834:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6842:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6831:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6831:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6828:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6894:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6924:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6902:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6902:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6894:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6968:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6980:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6986:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6976:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6976:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6968:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6741:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6752:4:11",
                "type": ""
              }
            ],
            "src": "6690:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7063:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7074:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7090:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7084:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7084:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7074:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7046:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7056:6:11",
                "type": ""
              }
            ],
            "src": "7004:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7205:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7222:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7227:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7215:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7215:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7215:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7243:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7262:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7267:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7258:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7258:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7243:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7177:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7182:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7193:11:11",
                "type": ""
              }
            ],
            "src": "7109:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7329:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7339:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7368:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7350:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7350:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7339:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7311:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7321:7:11",
                "type": ""
              }
            ],
            "src": "7284:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7431:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7441:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7456:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7463:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7452:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7452:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7441:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7413:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7423:7:11",
                "type": ""
              }
            ],
            "src": "7386:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7563:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7573:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7584:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7573:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7545:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7555:7:11",
                "type": ""
              }
            ],
            "src": "7518:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7676:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7686:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7745:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$2005_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7699:45:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7699:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7686:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$2005_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7656:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7666:9:11",
                "type": ""
              }
            ],
            "src": "7601:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7838:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7848:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7879:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7861:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7861:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7848:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$2005_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7818:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7828:9:11",
                "type": ""
              }
            ],
            "src": "7763:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7970:79:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7980:63:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8037:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Pool_$1381_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7993:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7993:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7980:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1381_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7950:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7960:9:11",
                "type": ""
              }
            ],
            "src": "7897:152:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8128:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8138:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8169:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8151:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8151:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8138:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1381_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8108:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8118:9:11",
                "type": ""
              }
            ],
            "src": "8055:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8236:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8246:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8255:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8250:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8315:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8340:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8345:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8336:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8336:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8359:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8364:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8355:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8355:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8349:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8349:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8329:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8329:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8329:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8276:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8279:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8273:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8273:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8287:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8289:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8298:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8301:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8294:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8294:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8289:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8269:3:11",
                    "statements": []
                  },
                  "src": "8265:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8412:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8462:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8467:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8458:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8458:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8476:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8451:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8451:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8451:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8393:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8396:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8390:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8390:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8387:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8218:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8223:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8228:6:11",
                "type": ""
              }
            ],
            "src": "8187:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8543:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8553:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "8575:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "8605:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "8583:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8583:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8571:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8571:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8557:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8722:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8724:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8724:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8724:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8665:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8677:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8662:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8662:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8701:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8713:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8698:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8698:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8659:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8659:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8656:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8760:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8764:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8753:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8753:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8753:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8529:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8537:4:11",
                "type": ""
              }
            ],
            "src": "8500:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8815:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8832:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8835:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8825:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8825:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8825:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8929:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8932:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8922:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8922:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8922:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8953:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8956:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8946:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8946:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8946:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8787:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9021:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9031:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9049:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9056:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9045:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9045:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9065:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9061:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9061:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9041:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9041:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "9031:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9004:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "9014:6:11",
                "type": ""
              }
            ],
            "src": "8973:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9124:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9181:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9190:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9193:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9183:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9183:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9183:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9147:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9172:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "9154:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9154:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9144:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9144:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9137:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9137:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "9134:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9117:5:11",
                "type": ""
              }
            ],
            "src": "9081:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9252:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9309:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9318:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9321:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9311:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9311:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9311:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9275:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9300:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9282:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9282:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9272:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9272:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9265:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9265:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "9262:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9245:5:11",
                "type": ""
              }
            ],
            "src": "9209:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$2005_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$2005_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Pool_$1381_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Pool_$1381_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Pool_$1381__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Pool_$1381_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$2005_t_contract$_Pool_$1381_t_address__to_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_IERC20_$2005_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_Pool_$1381_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_contract$_IERC20_$2005__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IERC20_$2005_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$2005_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$2005_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$2005_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1381_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Pool_$1381_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1381_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "207:1480:2:-:0;;;619:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;681:10;673:5;;:18;;;;;;;;;;;;;;;;;;713:10;701:9;;:22;;;;;;;;;;;;;;;;;;740:5;733:4;;:12;;;;;;;;;;;;;;;;;;619:133;;207:1480;;7:143:11;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:169::-;226:5;257:6;251:13;242:22;;273:46;313:5;273:46;:::i;:::-;232:93;;;;:::o;331:466::-;423:6;431;480:2;468:9;459:7;455:23;451:32;448:2;;;496:1;493;486:12;448:2;539:1;564:77;633:7;624:6;613:9;609:22;564:77;:::i;:::-;554:87;;510:141;690:2;716:64;772:7;763:6;752:9;748:22;716:64;:::i;:::-;706:74;;661:129;438:359;;;;;:::o;803:96::-;840:7;869:24;887:5;869:24;:::i;:::-;858:35;;848:51;;;:::o;905:109::-;955:7;984:24;1002:5;984:24;:::i;:::-;973:35;;963:51;;;:::o;1020:126::-;1057:7;1097:42;1090:5;1086:54;1075:65;;1065:81;;;:::o;1152:122::-;1225:24;1243:5;1225:24;:::i;:::-;1218:5;1215:35;1205:2;;1264:1;1261;1254:12;1205:2;1195:79;:::o;1280:148::-;1366:37;1397:5;1366:37;:::i;:::-;1359:5;1356:48;1346:2;;1418:1;1415;1408:12;1346:2;1336:92;:::o;207:1480:2:-;;;;;;;",
  "deployedSourceMap": "207:1480:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;758:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;284:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:639;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1568:116;1621:7;1655:11;:21;1667:8;1655:21;;;;;;;;;;;;;;;;;;;;;1640:37;;1568:116;;;:::o;353:16::-;;;;;;;;;;;;;:::o;231:24::-;;;;;;;;;;;;:::o;758:159::-;456:5;;;;;;;;;;;442:19;;:10;:19;;;434:28;;;;;;854:3:::1;828:30;;:14;:30;;;824:87;;886:14;874:9;::::0;:26:::1;;;;;;;;;;;;;;;;;;824:87;758:159:::0;:::o;284:20::-;;;;;;;;;;;;;:::o;923:639::-;518:9;;;;;;;;;;504:23;;:10;:23;;;496:32;;;;;;1044:24:::1;1070:21:::0;1095:4:::1;;;;;;;;;;;:25;;;1121:8;1095:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1043:87;;;;1140:16;1172:10;1184:6;1192:14;1216:4;;;;;;;;;;;1159:63;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1140:82;;1272:7;1290:10;1302:9;1313:4;;;;;;;;;;;1319:9;::::0;::::1;;;;;;;;1282:47;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1272:57;;1385:9;1344:52;;1371:3;1344:52;;;1351:10;1344:52;;;;;;:::i;:::-;;;;;;;;1430:3;1406:11;:21;1418:8;1406:21;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1494:4;;;;;;;;;;;:26;;;1521:8;1539:3;1545:9;1494:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;530:1;;;;923:639:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:354:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:139::-;413:5;451:6;438:20;429:29;;467:33;494:5;467:33;:::i;:::-;419:87;;;;:::o;526:288::-;593:5;642:3;635:4;627:6;623:17;619:27;609:2;;660:1;657;650:12;609:2;693:6;687:13;718:90;804:3;796:6;789:4;781:6;777:17;718:90;:::i;:::-;709:99;;599:215;;;;;:::o;820:139::-;866:5;904:6;891:20;882:29;;920:33;947:5;920:33;:::i;:::-;872:87;;;;:::o;965:262::-;1024:6;1073:2;1061:9;1052:7;1048:23;1044:32;1041:2;;;1089:1;1086;1079:12;1041:2;1132:1;1157:53;1202:7;1193:6;1182:9;1178:22;1157:53;:::i;:::-;1147:63;;1103:117;1031:196;;;;:::o;1233:652::-;1332:6;1340;1389:2;1377:9;1368:7;1364:23;1360:32;1357:2;;;1405:1;1402;1395:12;1357:2;1469:1;1458:9;1454:17;1448:24;1499:18;1491:6;1488:30;1485:2;;;1531:1;1528;1521:12;1485:2;1559:74;1625:7;1616:6;1605:9;1601:22;1559:74;:::i;:::-;1549:84;;1419:224;1703:2;1692:9;1688:18;1682:25;1734:18;1726:6;1723:30;1720:2;;;1766:1;1763;1756:12;1720:2;1794:74;1860:7;1851:6;1840:9;1836:22;1794:74;:::i;:::-;1784:84;;1653:225;1347:538;;;;;:::o;1891:262::-;1950:6;1999:2;1987:9;1978:7;1974:23;1970:32;1967:2;;;2015:1;2012;2005:12;1967:2;2058:1;2083:53;2128:7;2119:6;2108:9;2104:22;2083:53;:::i;:::-;2073:63;;2029:117;1957:196;;;;:::o;2159:407::-;2227:6;2235;2284:2;2272:9;2263:7;2259:23;2255:32;2252:2;;;2300:1;2297;2290:12;2252:2;2343:1;2368:53;2413:7;2404:6;2393:9;2389:22;2368:53;:::i;:::-;2358:63;;2314:117;2470:2;2496:53;2541:7;2532:6;2521:9;2517:22;2496:53;:::i;:::-;2486:63;;2441:118;2242:324;;;;;:::o;2572:118::-;2659:24;2677:5;2659:24;:::i;:::-;2654:3;2647:37;2637:53;;:::o;2696:161::-;2798:52;2844:5;2798:52;:::i;:::-;2793:3;2786:65;2776:81;;:::o;2863:157::-;2963:50;3007:5;2963:50;:::i;:::-;2958:3;2951:63;2941:79;;:::o;3026:364::-;3114:3;3142:39;3175:5;3142:39;:::i;:::-;3197:71;3261:6;3256:3;3197:71;:::i;:::-;3190:78;;3277:52;3322:6;3317:3;3310:4;3303:5;3299:16;3277:52;:::i;:::-;3354:29;3376:6;3354:29;:::i;:::-;3349:3;3345:39;3338:46;;3118:272;;;;;:::o;3396:118::-;3483:24;3501:5;3483:24;:::i;:::-;3478:3;3471:37;3461:53;;:::o;3520:222::-;3613:4;3651:2;3640:9;3636:18;3628:26;;3664:71;3732:1;3721:9;3717:17;3708:6;3664:71;:::i;:::-;3618:124;;;;:::o;3748:248::-;3854:4;3892:2;3881:9;3877:18;3869:26;;3905:84;3986:1;3975:9;3971:17;3962:6;3905:84;:::i;:::-;3859:137;;;;:::o;4002:313::-;4115:4;4153:2;4142:9;4138:18;4130:26;;4202:9;4196:4;4192:20;4188:1;4177:9;4173:17;4166:47;4230:78;4303:4;4294:6;4230:78;:::i;:::-;4222:86;;4120:195;;;;:::o;4321:700::-;4546:4;4584:3;4573:9;4569:19;4561:27;;4634:9;4628:4;4624:20;4620:1;4609:9;4605:17;4598:47;4662:78;4735:4;4726:6;4662:78;:::i;:::-;4654:86;;4750:87;4833:2;4822:9;4818:18;4809:6;4750:87;:::i;:::-;4847:85;4928:2;4917:9;4913:18;4904:6;4847:85;:::i;:::-;4942:72;5010:2;4999:9;4995:18;4986:6;4942:72;:::i;:::-;4551:470;;;;;;;:::o;5027:735::-;5244:4;5282:3;5271:9;5267:19;5259:27;;5332:9;5326:4;5322:20;5318:1;5307:9;5303:17;5296:47;5360:78;5433:4;5424:6;5360:78;:::i;:::-;5352:86;;5485:9;5479:4;5475:20;5470:2;5459:9;5455:18;5448:48;5513:78;5586:4;5577:6;5513:78;:::i;:::-;5505:86;;5601:72;5669:2;5658:9;5654:18;5645:6;5601:72;:::i;:::-;5683;5751:2;5740:9;5736:18;5727:6;5683:72;:::i;:::-;5249:513;;;;;;;:::o;5768:222::-;5861:4;5899:2;5888:9;5884:18;5876:26;;5912:71;5980:1;5969:9;5965:17;5956:6;5912:71;:::i;:::-;5866:124;;;;:::o;5996:472::-;6160:4;6198:2;6187:9;6183:18;6175:26;;6211:71;6279:1;6268:9;6264:17;6255:6;6211:71;:::i;:::-;6292:72;6360:2;6349:9;6345:18;6336:6;6292:72;:::i;:::-;6374:87;6457:2;6446:9;6442:18;6433:6;6374:87;:::i;:::-;6165:303;;;;;;:::o;6474:129::-;6508:6;6535:20;;:::i;:::-;6525:30;;6564:33;6592:4;6584:6;6564:33;:::i;:::-;6515:88;;;:::o;6609:75::-;6642:6;6675:2;6669:9;6659:19;;6649:35;:::o;6690:308::-;6752:4;6842:18;6834:6;6831:30;6828:2;;;6864:18;;:::i;:::-;6828:2;6902:29;6924:6;6902:29;:::i;:::-;6894:37;;6986:4;6980;6976:15;6968:23;;6757:241;;;:::o;7004:99::-;7056:6;7090:5;7084:12;7074:22;;7063:40;;;:::o;7109:169::-;7193:11;7227:6;7222:3;7215:19;7267:4;7262:3;7258:14;7243:29;;7205:73;;;;:::o;7284:96::-;7321:7;7350:24;7368:5;7350:24;:::i;:::-;7339:35;;7329:51;;;:::o;7386:126::-;7423:7;7463:42;7456:5;7452:54;7441:65;;7431:81;;;:::o;7518:77::-;7555:7;7584:5;7573:16;;7563:32;;;:::o;7601:156::-;7666:9;7699:52;7745:5;7699:52;:::i;:::-;7686:65;;7676:81;;;:::o;7763:128::-;7828:9;7861:24;7879:5;7861:24;:::i;:::-;7848:37;;7838:53;;;:::o;7897:152::-;7960:9;7993:50;8037:5;7993:50;:::i;:::-;7980:63;;7970:79;;;:::o;8055:126::-;8118:9;8151:24;8169:5;8151:24;:::i;:::-;8138:37;;8128:53;;;:::o;8187:307::-;8255:1;8265:113;8279:6;8276:1;8273:13;8265:113;;;8364:1;8359:3;8355:11;8349:18;8345:1;8340:3;8336:11;8329:39;8301:2;8298:1;8294:10;8289:15;;8265:113;;;8396:6;8393:1;8390:13;8387:2;;;8476:1;8467:6;8462:3;8458:16;8451:27;8387:2;8236:258;;;;:::o;8500:281::-;8583:27;8605:4;8583:27;:::i;:::-;8575:6;8571:40;8713:6;8701:10;8698:22;8677:18;8665:10;8662:34;8659:62;8656:2;;;8724:18;;:::i;:::-;8656:2;8764:10;8760:2;8753:22;8543:238;;;:::o;8787:180::-;8835:77;8832:1;8825:88;8932:4;8929:1;8922:15;8956:4;8953:1;8946:15;8973:102;9014:6;9065:2;9061:7;9056:2;9049:5;9045:14;9041:28;9031:38;;9021:54;;;:::o;9081:122::-;9154:24;9172:5;9154:24;:::i;:::-;9147:5;9144:35;9134:2;;9193:1;9190;9183:12;9134:2;9124:79;:::o;9209:122::-;9282:24;9300:5;9282:24;:::i;:::-;9275:5;9272:35;9262:2;;9321:1;9318;9311:12;9262:2;9252:79;:::o",
  "source": "pragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./Pool.sol\";\nimport \"./DaoToken.sol\";\nimport \"./Dao.sol\";\n\ncontract Factory {\n\n    address public initiator;  // Offchain initiator\n    address public owner;  // Will allow to setup offchain initiator\n    Pool public pool;\n    mapping(uint => Dao) pool_to_dao;\n\n    modifier ownerOnly {require(msg.sender == owner); _;}\n    modifier initiatorOnly {require(msg.sender == initiator); _;}\n\n    event NewDao(string name, address indexed dao, address indexed dao_token);\n\n    constructor(Pool _pool, address _initiator) {\n        owner = msg.sender;\n        initiator = _initiator;\n        pool = _pool;\n    }\n\n    function setup(address _new_initiator) public ownerOnly {\n        if (_new_initiator != address(0x0)) {\n            initiator = _new_initiator;\n        }\n    }\n\n    function new_dao(uint _shares_amount, uint _pool_id) public initiatorOnly {\n        //  Setting up the emission\n        (string memory party_name, string memory  ticker) = pool.get_pool_description(_pool_id);\n        IERC20 dao_token = new DaoToken(party_name, ticker, _shares_amount, address(pool));\n        //  Building the brand new DAO.\n        Dao dao = new Dao(party_name, dao_token, pool, initiator);\n        emit NewDao(party_name, address(dao), address(dao_token));\n        pool_to_dao[_pool_id] = dao;\n        //  Sending tokens to Dao for distribution\n        pool.distribute_dao_tokens(_pool_id, address(dao), dao_token);\n    }\n\n    function get_dao(uint _pool_id) public view returns (address) {\n        return address(pool_to_dao[_pool_id]);\n    }\n\n}\n",
  "sourcePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        2186
      ],
      "Dao": [
        677
      ],
      "DaoToken": [
        709
      ],
      "ERC20": [
        1927
      ],
      "Factory": [
        891
      ],
      "IERC165": [
        2198
      ],
      "IERC20": [
        2005
      ],
      "IERC20Metadata": [
        2030
      ],
      "IERC721": [
        2146
      ],
      "Pool": [
        1381
      ]
    },
    "id": 892,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 711,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 2006,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 713,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 2147,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 1382,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 710,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 678,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          677,
          709
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 891,
        "linearizedBaseContracts": [
          891
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 718,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 717,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 720,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 719,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 723,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1381",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 722,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 721,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1381,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1381,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1381",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 728,
            "mutability": "mutable",
            "name": "pool_to_dao",
            "nameLocation": "396:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "375:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
              "typeString": "mapping(uint256 => contract Dao)"
            },
            "typeName": {
              "id": 727,
              "keyType": {
                "id": 724,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "383:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "375:20:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
                "typeString": "mapping(uint256 => contract Dao)"
              },
              "valueType": {
                "id": 726,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 725,
                  "name": "Dao",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 677,
                  "src": "391:3:2"
                },
                "referencedDeclaration": 677,
                "src": "391:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Dao_$677",
                  "typeString": "contract Dao"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "433:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 731,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "442:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "442:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 733,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 720,
                          "src": "456:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "442:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "434:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "434:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "434:28:2"
                },
                {
                  "id": 737,
                  "nodeType": "PlaceholderStatement",
                  "src": "464:1:2"
                }
              ]
            },
            "id": 739,
            "name": "ownerOnly",
            "nameLocation": "423:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:2"
            },
            "src": "414:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "495:38:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 742,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "504:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "504:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 744,
                          "name": "initiator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "518:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "504:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "496:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "496:32:2"
                },
                {
                  "id": 748,
                  "nodeType": "PlaceholderStatement",
                  "src": "530:1:2"
                }
              ]
            },
            "id": 750,
            "name": "initiatorOnly",
            "nameLocation": "481:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:0:2"
            },
            "src": "472:61:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 758,
            "name": "NewDao",
            "nameLocation": "545:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "559:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "552:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "581:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "565:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "602:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "586:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "551:61:2"
            },
            "src": "539:74:2"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "663:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 766,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "673:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 767,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "681:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "681:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "673:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "673:18:2"
                },
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 771,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "701:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 772,
                      "name": "_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "713:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "701:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "701:22:2"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 775,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "733:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1381",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 776,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "740:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1381",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "733:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1381",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "733:12:2"
                }
              ]
            },
            "id": 780,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "636:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "631:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1381",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 759,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1381,
                      "src": "631:4:2"
                    },
                    "referencedDeclaration": 1381,
                    "src": "631:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1381",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "_initiator",
                  "nameLocation": "651:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "643:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:32:2"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:2"
            },
            "scope": 891,
            "src": "619:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "814:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 787,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "828:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "854:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "846:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "846:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "846:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "828:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 798,
                  "nodeType": "IfStatement",
                  "src": "824:87:2",
                  "trueBody": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "860:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 793,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "874:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 794,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "886:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "874:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 796,
                        "nodeType": "ExpressionStatement",
                        "src": "874:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 785,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 784,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 739,
                  "src": "804:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "804:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "767:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "781:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "773:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:24:2"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:2"
            },
            "scope": 891,
            "src": "758:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "997:565:2",
              "statements": [
                {
                  "assignments": [
                    810,
                    812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "1058:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1044:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1044:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 812,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1085:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1070:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 811,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1070:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 815,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "1121:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 813,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1095:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1185,
                      "src": "1095:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1043:87:2"
                },
                {
                  "assignments": [
                    820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 820,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1147:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1140:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2005",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 818,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2005,
                          "src": "1140:6:2"
                        },
                        "referencedDeclaration": 2005,
                        "src": "1140:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 832,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 824,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "1172:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 825,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "1184:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 826,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "1192:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 829,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "1216:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1381",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1381",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1208:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 827,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1208:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1208:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1159:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$709_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 822,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 821,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "1163:8:2"
                        },
                        "referencedDeclaration": 709,
                        "src": "1163:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$709",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$709",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1140:82:2"
                },
                {
                  "assignments": [
                    835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 835,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1276:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1272:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$677",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 834,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 833,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 677,
                          "src": "1272:3:2"
                        },
                        "referencedDeclaration": 677,
                        "src": "1272:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 839,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "1290:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 840,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1302:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 841,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1313:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        }
                      },
                      {
                        "id": 842,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "1319:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1282:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$2005_$_t_contract$_Pool_$1381_$_t_address_$returns$_t_contract$_Dao_$677_$",
                        "typeString": "function (string memory,contract IERC20,contract Pool,address) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 837,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 836,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 677,
                          "src": "1286:3:2"
                        },
                        "referencedDeclaration": 677,
                        "src": "1286:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$677",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1272:57:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 846,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "1351:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 849,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 835,
                            "src": "1371:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1363:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 847,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1363:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1363:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 853,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "1385:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2005",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2005",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1377:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 851,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1377:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1377:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 845,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "1344:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "EmitStatement",
                  "src": "1339:57:2"
                },
                {
                  "expression": {
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 857,
                        "name": "pool_to_dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "1406:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
                          "typeString": "mapping(uint256 => contract Dao)"
                        }
                      },
                      "id": 859,
                      "indexExpression": {
                        "id": 858,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "1418:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1406:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$677",
                        "typeString": "contract Dao"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 860,
                      "name": "dao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "1430:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$677",
                        "typeString": "contract Dao"
                      }
                    },
                    "src": "1406:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$677",
                      "typeString": "contract Dao"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 866,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "1521:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 869,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 835,
                            "src": "1539:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1531:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 867,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1531:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1531:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 871,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1545:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 863,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1494:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1348,
                      "src": "1494:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$2005_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20) external"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1494:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "1494:61:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 806,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 750,
                  "src": "983:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "983:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "932:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "945:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "940:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "966:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "961:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:36:2"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:2"
            },
            "scope": 891,
            "src": "923:639:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "1630:54:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 884,
                          "name": "pool_to_dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "1655:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
                            "typeString": "mapping(uint256 => contract Dao)"
                          }
                        },
                        "id": 886,
                        "indexExpression": {
                          "id": 885,
                          "name": "_pool_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "1667:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1655:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      ],
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1647:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 882,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1647:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 881,
                  "id": 888,
                  "nodeType": "Return",
                  "src": "1640:37:2"
                }
              ]
            },
            "functionSelector": "1672100f",
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_dao",
            "nameLocation": "1577:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "1590:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "1585:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:15:2"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "1621:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1620:9:2"
            },
            "scope": 891,
            "src": "1568:116:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 892,
        "src": "207:1480:2",
        "usedErrors": []
      }
    ],
    "src": "0:1688:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        2186
      ],
      "Dao": [
        677
      ],
      "DaoToken": [
        709
      ],
      "ERC20": [
        1927
      ],
      "Factory": [
        891
      ],
      "IERC165": [
        2198
      ],
      "IERC20": [
        2005
      ],
      "IERC20Metadata": [
        2030
      ],
      "IERC721": [
        2146
      ],
      "Pool": [
        1381
      ]
    },
    "id": 892,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 711,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 2006,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 713,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 2147,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 1382,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 710,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 892,
        "sourceUnit": 678,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          677,
          709
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 891,
        "linearizedBaseContracts": [
          891
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 718,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 717,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 720,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 719,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 723,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1381",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 722,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 721,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1381,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1381,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1381",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 728,
            "mutability": "mutable",
            "name": "pool_to_dao",
            "nameLocation": "396:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 891,
            "src": "375:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
              "typeString": "mapping(uint256 => contract Dao)"
            },
            "typeName": {
              "id": 727,
              "keyType": {
                "id": 724,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "383:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "375:20:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
                "typeString": "mapping(uint256 => contract Dao)"
              },
              "valueType": {
                "id": 726,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 725,
                  "name": "Dao",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 677,
                  "src": "391:3:2"
                },
                "referencedDeclaration": 677,
                "src": "391:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Dao_$677",
                  "typeString": "contract Dao"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "433:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 731,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "442:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "442:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 733,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 720,
                          "src": "456:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "442:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "434:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "434:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "434:28:2"
                },
                {
                  "id": 737,
                  "nodeType": "PlaceholderStatement",
                  "src": "464:1:2"
                }
              ]
            },
            "id": 739,
            "name": "ownerOnly",
            "nameLocation": "423:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:2"
            },
            "src": "414:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "495:38:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 742,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "504:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "504:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 744,
                          "name": "initiator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "518:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "504:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "496:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "496:32:2"
                },
                {
                  "id": 748,
                  "nodeType": "PlaceholderStatement",
                  "src": "530:1:2"
                }
              ]
            },
            "id": 750,
            "name": "initiatorOnly",
            "nameLocation": "481:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:0:2"
            },
            "src": "472:61:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 758,
            "name": "NewDao",
            "nameLocation": "545:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "559:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "552:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "581:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "565:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "602:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "586:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "551:61:2"
            },
            "src": "539:74:2"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "663:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 766,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "673:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 767,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "681:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "681:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "673:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "673:18:2"
                },
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 771,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "701:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 772,
                      "name": "_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "713:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "701:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "701:22:2"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 775,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "733:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1381",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 776,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "740:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1381",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "733:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1381",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "733:12:2"
                }
              ]
            },
            "id": 780,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "636:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "631:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1381",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 759,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1381,
                      "src": "631:4:2"
                    },
                    "referencedDeclaration": 1381,
                    "src": "631:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1381",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "_initiator",
                  "nameLocation": "651:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "643:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:32:2"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:2"
            },
            "scope": 891,
            "src": "619:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "814:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 787,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "828:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "854:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "846:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "846:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "846:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "828:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 798,
                  "nodeType": "IfStatement",
                  "src": "824:87:2",
                  "trueBody": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "860:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 793,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "874:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 794,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "886:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "874:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 796,
                        "nodeType": "ExpressionStatement",
                        "src": "874:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 785,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 784,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 739,
                  "src": "804:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "804:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "767:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "781:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "773:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:24:2"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:2"
            },
            "scope": 891,
            "src": "758:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "997:565:2",
              "statements": [
                {
                  "assignments": [
                    810,
                    812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "1058:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1044:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1044:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 812,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1085:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1070:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 811,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1070:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 815,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "1121:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 813,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1095:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1185,
                      "src": "1095:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1043:87:2"
                },
                {
                  "assignments": [
                    820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 820,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1147:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1140:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2005",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 818,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2005,
                          "src": "1140:6:2"
                        },
                        "referencedDeclaration": 2005,
                        "src": "1140:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 832,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 824,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "1172:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 825,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "1184:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 826,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "1192:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 829,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "1216:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1381",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1381",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1208:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 827,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1208:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1208:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1159:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$709_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 822,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 821,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "1163:8:2"
                        },
                        "referencedDeclaration": 709,
                        "src": "1163:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$709",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$709",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1140:82:2"
                },
                {
                  "assignments": [
                    835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 835,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1276:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 874,
                      "src": "1272:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$677",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 834,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 833,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 677,
                          "src": "1272:3:2"
                        },
                        "referencedDeclaration": 677,
                        "src": "1272:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 839,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "1290:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 840,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1302:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 841,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1313:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        }
                      },
                      {
                        "id": 842,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "1319:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1282:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$2005_$_t_contract$_Pool_$1381_$_t_address_$returns$_t_contract$_Dao_$677_$",
                        "typeString": "function (string memory,contract IERC20,contract Pool,address) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 837,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 836,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 677,
                          "src": "1286:3:2"
                        },
                        "referencedDeclaration": 677,
                        "src": "1286:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$677",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1272:57:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 846,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "1351:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 849,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 835,
                            "src": "1371:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1363:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 847,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1363:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1363:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 853,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "1385:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2005",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2005",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1377:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 851,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1377:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1377:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 845,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "1344:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "EmitStatement",
                  "src": "1339:57:2"
                },
                {
                  "expression": {
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 857,
                        "name": "pool_to_dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "1406:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
                          "typeString": "mapping(uint256 => contract Dao)"
                        }
                      },
                      "id": 859,
                      "indexExpression": {
                        "id": 858,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "1418:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1406:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$677",
                        "typeString": "contract Dao"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 860,
                      "name": "dao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "1430:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$677",
                        "typeString": "contract Dao"
                      }
                    },
                    "src": "1406:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$677",
                      "typeString": "contract Dao"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 866,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "1521:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 869,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 835,
                            "src": "1539:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$677",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1531:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 867,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1531:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1531:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 871,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1545:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2005",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 863,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1494:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1381",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1348,
                      "src": "1494:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$2005_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20) external"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1494:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "1494:61:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 806,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 750,
                  "src": "983:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "983:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "932:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "945:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "940:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "966:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 875,
                  "src": "961:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:36:2"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:2"
            },
            "scope": 891,
            "src": "923:639:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "1630:54:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 884,
                          "name": "pool_to_dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "1655:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Dao_$677_$",
                            "typeString": "mapping(uint256 => contract Dao)"
                          }
                        },
                        "id": 886,
                        "indexExpression": {
                          "id": 885,
                          "name": "_pool_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "1667:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1655:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Dao_$677",
                          "typeString": "contract Dao"
                        }
                      ],
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1647:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 882,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1647:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 881,
                  "id": 888,
                  "nodeType": "Return",
                  "src": "1640:37:2"
                }
              ]
            },
            "functionSelector": "1672100f",
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_dao",
            "nameLocation": "1577:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "1590:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "1585:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:15:2"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "1621:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1620:9:2"
            },
            "scope": 891,
            "src": "1568:116:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 892,
        "src": "207:1480:2",
        "usedErrors": []
      }
    ],
    "src": "0:1688:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xfc0B796D7A56B4CA112F48D17d1989892717dc77",
      "transactionHash": "0x7526472f8ad49404ce50f549fb336ce79d4aba83b0fcd0d92a012406e1071a10"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-26T12:30:49.103Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}