{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Pool",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao_token",
          "type": "address"
        }
      ],
      "name": "NewDao",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "initiator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_initiator",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pool_id",
          "type": "uint256"
        }
      ],
      "name": "new_dao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Pool\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao_token\",\"type\":\"address\"}],\"name\":\"NewDao\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"initiator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool_id\",\"type\":\"uint256\"}],\"name\":\"new_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_initiator\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol\":{\"keccak256\":\"0x3a028ed88fb80c5fdb12f8bdc2cad2e6d7b483136008b3c192e6fddc2ea7ba52\",\"urls\":[\"bzz-raw://8a5f263e34453f027f9b0b157768ecf2853ec7ed622c1617795b6768e1660fcf\",\"dweb:/ipfs/QmZdKnm2XVzTkAJiuyzdSS9RMgqa76WF1NibWXEpZ39gi5\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol\":{\"keccak256\":\"0x08e78c126225c0f24f976c2b19e690fdbf316ba30e03211fd271878c362d2ca1\",\"urls\":[\"bzz-raw://1acdf87f4d4fcf57a074b8714ada6beac3fd6a1311353017830aa2a6462d5f88\",\"dweb:/ipfs/QmR2TMPGrt6VeMTRrWFRbf2cw7Uwb8qfrMxkbD8QY8gc2z\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":{\"keccak256\":\"0xa6da3d064faae509a648e6eb20644da0e88efae83016bb49b9cae5fd80f0ee2b\",\"urls\":[\"bzz-raw://1f4ad4c4b0dec8a2c590a1d761216ca488afcf75aae270f85121d108e7e80935\",\"dweb:/ipfs/QmW8J9ZJY92gCmjsBcraWfAd5FxRTR6v2WgnkWKRcDK3JQ\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol\":{\"keccak256\":\"0xbafc52e7823e079797dfb4bd796c49f3dbf216f7cda298730f9de1e4f8df3e46\",\"urls\":[\"bzz-raw://55a7ce8d6e775dfd964b304bed2f07c51243253ebc68a7a3c4f4adae4e355737\",\"dweb:/ipfs/QmWn5Vz3JAXwPKq5Tva8biqAMnpBt8zv1PsPJuYLtxkuoK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162005b0838038062005b0883398181016040528101906100349190610111565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610195565b60008151905061010b8161017e565b92915050565b60006020828403121561012357600080fd5b6000610131848285016100fc565b91505092915050565b60006101458261015e565b9050919050565b60006101578261013a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101878161014c565b811461019257600080fd5b50565b61596380620001a56000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806316f0115b14620000635780635c39fcc1146200008557806366d3820314620000a75780638da5cb5b14620000c7578063e31dff1314620000e9575b600080fd5b6200006d62000109565b6040516200007c91906200076f565b60405180910390f35b6200008f6200012f565b6040516200009e919062000752565b60405180910390f35b620000c56004803603810190620000bf9190620005ed565b62000153565b005b620000d162000227565b604051620000e0919062000752565b60405180910390f35b6200010760048036038101906200010191906200068c565b6200024d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200022457806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002a857600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639215d96f846040518263ffffffff1660e01b81526004016200030891906200084f565b60006040518083038186803b1580156200032157600080fd5b505afa15801562000336573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019062000361919062000619565b915091506000828286600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200039b9062000531565b620003aa9493929190620007f4565b604051809103906000f080158015620003c7573d6000803e3d6000fd5b50905060008382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620003ff906200053f565b6200040d93929190620007b0565b604051809103906000f0801580156200042a573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87a2ae0205f28cf6777eb213e867569f69e687e4b090364233360729fb68392d866040516200048c91906200078c565b60405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f9530108683856040518463ffffffff1660e01b8152600401620004f5939291906200086c565b600060405180830381600087803b1580156200051057600080fd5b505af115801562000525573d6000803e3d6000fd5b50505050505050505050565b611d048062000a9383390190565b613197806200279783390190565b6000620005646200055e84620008d2565b620008a9565b9050828152602081018484840111156200057d57600080fd5b6200058a848285620009b2565b509392505050565b600081359050620005a38162000a5e565b92915050565b600082601f830112620005bb57600080fd5b8151620005cd8482602086016200054d565b91505092915050565b600081359050620005e78162000a78565b92915050565b6000602082840312156200060057600080fd5b6000620006108482850162000592565b91505092915050565b600080604083850312156200062d57600080fd5b600083015167ffffffffffffffff8111156200064857600080fd5b6200065685828601620005a9565b925050602083015167ffffffffffffffff8111156200067457600080fd5b6200068285828601620005a9565b9150509250929050565b60008060408385031215620006a057600080fd5b6000620006b085828601620005d6565b9250506020620006c385828601620005d6565b9150509250929050565b620006d88162000924565b82525050565b620006e98162000962565b82525050565b620006fa816200098a565b82525050565b60006200070d8262000908565b62000719818562000913565b93506200072b818560208601620009b2565b620007368162000a4d565b840191505092915050565b6200074c8162000958565b82525050565b6000602082019050620007696000830184620006cd565b92915050565b6000602082019050620007866000830184620006ef565b92915050565b60006020820190508181036000830152620007a8818462000700565b905092915050565b60006060820190508181036000830152620007cc818662000700565b9050620007dd6020830185620006de565b620007ec6040830184620006ef565b949350505050565b6000608082019050818103600083015262000810818762000700565b9050818103602083015262000826818662000700565b905062000837604083018562000741565b620008466060830184620006cd565b95945050505050565b600060208201905062000866600083018462000741565b92915050565b600060608201905062000883600083018662000741565b620008926020830185620006cd565b620008a16040830184620006de565b949350505050565b6000620008b5620008c8565b9050620008c38282620009e8565b919050565b6000604051905090565b600067ffffffffffffffff821115620008f057620008ef62000a1e565b5b620008fb8262000a4d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620009318262000938565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006200096f8262000976565b9050919050565b6000620009838262000938565b9050919050565b600062000997826200099e565b9050919050565b6000620009ab8262000938565b9050919050565b60005b83811015620009d2578082015181840152602081019050620009b5565b83811115620009e2576000848401525b50505050565b620009f38262000a4d565b810181811067ffffffffffffffff8211171562000a155762000a1462000a1e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000a698162000924565b811462000a7557600080fd5b50565b62000a838162000958565b811462000a8f57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001d0438038062001d0483398181016040528101906200003791906200038f565b83838160039080519060200190620000519291906200023f565b5080600490805190602001906200006a9291906200023f565b505050620000a98162000082620000b360201b60201c565b600a620000909190620005cc565b846200009d919062000709565b620000bc60201b60201c565b505050506200095f565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001269062000465565b60405180910390fd5b62000143600083836200023560201b60201c565b806002600082825462000157919062000514565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001ae919062000514565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000215919062000487565b60405180910390a362000231600083836200023a60201b60201c565b5050565b505050565b505050565b8280546200024d90620007eb565b90600052602060002090601f016020900481019282620002715760008555620002bd565b82601f106200028c57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bc5782518255916020019190600101906200029f565b5b509050620002cc9190620002d0565b5090565b5b80821115620002eb576000816000905550600101620002d1565b5090565b6000620003066200030084620004cd565b620004a4565b9050828152602081018484840111156200031f57600080fd5b6200032c848285620007b5565b509392505050565b60008151905062000345816200092b565b92915050565b600082601f8301126200035d57600080fd5b81516200036f848260208601620002ef565b91505092915050565b600081519050620003898162000945565b92915050565b60008060008060808587031215620003a657600080fd5b600085015167ffffffffffffffff811115620003c157600080fd5b620003cf878288016200034b565b945050602085015167ffffffffffffffff811115620003ed57600080fd5b620003fb878288016200034b565b93505060406200040e8782880162000378565b9250506060620004218782880162000334565b91505092959194509250565b60006200043c601f8362000503565b9150620004498262000902565b602082019050919050565b6200045f816200079e565b82525050565b6000602082019050818103600083015262000480816200042d565b9050919050565b60006020820190506200049e600083018462000454565b92915050565b6000620004b0620004c3565b9050620004be828262000821565b919050565b6000604051905090565b600067ffffffffffffffff821115620004eb57620004ea620008b5565b5b620004f682620008e4565b9050602081019050919050565b600082825260208201905092915050565b600062000521826200079e565b91506200052e836200079e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000566576200056562000857565b5b828201905092915050565b6000808291508390505b6001851115620005c3578086048111156200059b576200059a62000857565b5b6001851615620005ab5780820291505b8081029050620005bb85620008f5565b94506200057b565b94509492505050565b6000620005d9826200079e565b9150620005e683620007a8565b9250620006157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200061d565b905092915050565b6000826200062f576001905062000702565b816200063f576000905062000702565b8160018114620006585760028114620006635762000699565b600191505062000702565b60ff84111562000678576200067762000857565b5b8360020a91508482111562000692576200069162000857565b5b5062000702565b5060208310610133831016604e8410600b8410161715620006d35782820a905083811115620006cd57620006cc62000857565b5b62000702565b620006e2848484600162000571565b92509050818404811115620006fc57620006fb62000857565b5b81810290505b9392505050565b600062000716826200079e565b915062000723836200079e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200075f576200075e62000857565b5b828202905092915050565b600062000777826200077e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620007d5578082015181840152602081019050620007b8565b83811115620007e5576000848401525b50505050565b600060028204905060018216806200080457607f821691505b602082108114156200081b576200081a62000886565b5b50919050565b6200082c82620008e4565b810181811067ffffffffffffffff821117156200084e576200084d620008b5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000936816200076a565b81146200094257600080fd5b50565b62000950816200079e565b81146200095c57600080fd5b50565b611395806200096f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea2646970667358221220803b65279b0b99b4cd4975d10e0ed53cdf622d5e45acf757e61245c7c8bec42a64736f6c6343000804003360806040523480156200001157600080fd5b50604051620031973803806200319783398181016040528101906200003791906200022a565b82600190805190602001906200004f929190620000da565b50816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000499565b828054620000e8906200038a565b90600052602060002090601f0160209004810192826200010c576000855562000158565b82601f106200012757805160ff191683800117855562000158565b8280016001018555821562000158579182015b82811115620001575782518255916020019190600101906200013a565b5b5090506200016791906200016b565b5090565b5b80821115620001865760008160009055506001016200016c565b5090565b6000620001a16200019b84620002c2565b62000299565b905082815260208101848484011115620001ba57600080fd5b620001c784828562000354565b509392505050565b600081519050620001e08162000465565b92915050565b600081519050620001f7816200047f565b92915050565b600082601f8301126200020f57600080fd5b8151620002218482602086016200018a565b91505092915050565b6000806000606084860312156200024057600080fd5b600084015167ffffffffffffffff8111156200025b57600080fd5b6200026986828701620001fd565b93505060206200027c86828701620001cf565b92505060406200028f86828701620001e6565b9150509250925092565b6000620002a5620002b8565b9050620002b38282620003c0565b919050565b6000604051905090565b600067ffffffffffffffff821115620002e057620002df62000425565b5b620002eb8262000454565b9050602081019050919050565b6000620003058262000334565b9050919050565b60006200031982620002f8565b9050919050565b60006200032d82620002f8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200037457808201518184015260208101905062000357565b8381111562000384576000848401525b50505050565b60006002820490506001821680620003a357607f821691505b60208210811415620003ba57620003b9620003f6565b5b50919050565b620003cb8262000454565b810181811067ffffffffffffffff82111715620003ed57620003ec62000425565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000470816200030c565b81146200047c57600080fd5b50565b6200048a8162000320565b81146200049657600080fd5b50565b612cee80620004a96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063528f9d55116100975780637acb7757116100665780637acb775714610298578063c9d27afe146102b4578063e4dd26cf146102d0578063e9a4b691146102ec576100f5565b8063528f9d5514610210578063561f4a6a1461022e578063688e1d311461024a578063698839fd14610268576100f5565b8063150b7a02116100d3578063150b7a021461016457806317eb2f0914610194578063379607f5146101c45780633eda5200146101e0576100f5565b806306fdde03146100fa5780630f9e4fb51461011857806310b1939f14610134575b600080fd5b610102610308565b60405161010f91906125f2565b60405180910390f35b610132600480360381019061012d9190611f2a565b610396565b005b61014e600480360381019061014991906120b9565b61070f565b60405161015b919061257f565b60405180910390f35b61017e60048036038101906101799190611eaa565b6108b3565b60405161018b91906125bc565b60405180910390f35b6101ae60048036038101906101a991906120b9565b6108c8565b6040516101bb91906125a1565b60405180910390f35b6101de60048036038101906101d991906120b9565b610918565b005b6101fa60048036038101906101f591906120b9565b610aca565b6040516102079190612694565b60405180910390f35b610218610dc7565b60405161022591906126b6565b60405180910390f35b6102486004803603810190610243919061210b565b610dcd565b005b610252610ef9565b60405161025f91906125d7565b60405180910390f35b610282600480360381019061027d9190611e58565b610f1d565b60405161028f91906126b6565b60405180910390f35b6102b260048036038101906102ad919061210b565b610f66565b005b6102ce60048036038101906102c99190612147565b6111d1565b005b6102ea60048036038101906102e59190611f8f565b6113a7565b005b61030660048036038101906103019190612026565b6116e4565b005b60018054610315906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610341906129f9565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b505050505081565b60001515600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff1615151461043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043490612654565b60405180910390fd5b600081146105f25760008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161049a91906126b6565b60206040518083038186803b1580156104b257600080fd5b505afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea9190611e81565b73ffffffffffffffffffffffffffffffffffffffff1614610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790612674565b60405180910390fd5b600360010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505061069f565b600360020160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505b6001600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b606060008214156107dc576003600101805480602002602001604051908101604052809291908181526020016000905b828210156107d157838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061073f565b5050505090506108ae565b60018214156108a7576003600201805480602002602001604051908101604052809291908181526020016000905b8282101561089c57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061080a565b5050505090506108ae565b6060809150505b919050565b600063150b7a0260e01b905095945050505050565b6108d0611aad565b60405180604001604052806007600085815260200190815260200160002060060154815260200160076000858152602001908152602001600020600701548152509050919050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a175760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109bf929190612556565b602060405180830381600087803b1580156109d957600080fd5b505af11580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190611f66565b50610ac6565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a72929190612556565b602060405180830381600087803b158015610a8c57600080fd5b505af1158015610aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac49190611f66565b505b5050565b610ad2611acf565b60076000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff166002811115610b3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610b74577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182018054610b88906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb4906129f9565b8015610c015780601f10610bd657610100808354040283529160200191610c01565b820191906000526020600020905b815481529060010190602001808311610be457829003601f168201915b50505050508152602001600282018054610c1a906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c46906129f9565b8015610c935780601f10610c6857610100808354040283529160200191610c93565b820191906000526020600020905b815481529060010190602001808311610c7657829003601f168201915b50505050508152602001600382018054610cac906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd8906129f9565b8015610d255780601f10610cfa57610100808354040283529160200191610d25565b820191906000526020600020905b815481529060010190602001808311610d0857829003601f168201915b50505050508152602001600482016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200160068201548152602001600782015481526020016008820154815250509050919050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630856040518463ffffffff1660e01b8152600401610e4c9392919061251f565b602060405180830381600087803b158015610e6657600080fd5b505af1158015610e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9e9190611f66565b5081600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eee9190612807565b925050819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610fc29291906124f6565b60206040518083038186803b158015610fda57600080fd5b505afa158015610fee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101291906120e2565b10156110c75760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401611073929190612556565b602060405180830381600087803b15801561108d57600080fd5b505af11580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190611f66565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016111249392919061251f565b602060405180830381600087803b15801561113e57600080fd5b505af1158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190611f66565b5081600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111c69190612807565b925050819055505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90612614565b60405180910390fd5b6001151581151514156112d257600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546007600084815260200190815260200160002060060160008282546112c69190612807565b9250508190555061133f565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546007600084815260200190815260200160002060070160008282546113379190612807565b925050819055505b6000600760008481526020019081526020016000206007015460076000858152602001908152602001600020600601546113799190612807565b9050600760008481526020019081526020016000206008015481106113a2576113a1836119a6565b5b505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561142a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142190612634565b60405180910390fd5b60016002600082825461143d9190612807565b9250508190555060006040518061010001604052806000600281111561148c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018581526020018481526020018381526020016040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525081526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561154b57600080fd5b505afa15801561155f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158391906120e2565b600361158f919061288e565b611599919061285d565b81525090508060076000600254815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611605577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001019080519060200190611626929190611b52565b506040820151816002019080519060200190611643929190611b52565b506060820151816003019080519060200190611660929190611bd8565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050565b6001600260008282546116f79190612807565b925050819055506060600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152509050600060405180610100016040528060006002811115611777577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018881526020018781526020018481526020018381526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561180a57600080fd5b505afa15801561181e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184291906120e2565b600361184e919061288e565b611858919061285d565b81525090508060076000600254815260200190815260200160002060008201518160000160006101000a81548160ff021916908360028111156118c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060208201518160010190805190602001906118e5929190611b52565b506040820151816002019080519060200190611902929190611b52565b50606082015181600301908051906020019061191f929190611bd8565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050505050565b600760008281526020019081526020016000206007015460076000838152602001908152602001600020600601541115611a445760016007600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611a3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550611aaa565b60026007600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611aa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6040518060400160405280600290602082028036833780820191505090505090565b60405180610100016040528060006002811115611b15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001606081526020016060815260200160608152602001611b37611c5e565b81526020016000815260200160008152602001600081525090565b828054611b5e906129f9565b90600052602060002090601f016020900481019282611b805760008555611bc7565b82601f10611b9957805160ff1916838001178555611bc7565b82800160010185558215611bc7579182015b82811115611bc6578251825591602001919060010190611bab565b5b509050611bd49190611c8e565b5090565b828054611be4906129f9565b90600052602060002090601f016020900481019282611c065760008555611c4d565b82601f10611c1f57805160ff1916838001178555611c4d565b82800160010185558215611c4d579182015b82811115611c4c578251825591602001919060010190611c31565b5b509050611c5a9190611c8e565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115611ca7576000816000905550600101611c8f565b5090565b6000611cbe611cb9846126f6565b6126d1565b905082815260208101848484011115611cd657600080fd5b611ce18482856129b7565b509392505050565b6000611cfc611cf784612727565b6126d1565b905082815260208101848484011115611d1457600080fd5b611d1f8482856129b7565b509392505050565b600081359050611d3681612c5c565b92915050565b600081519050611d4b81612c5c565b92915050565b600081359050611d6081612c73565b92915050565b600081519050611d7581612c73565b92915050565b60008083601f840112611d8d57600080fd5b8235905067ffffffffffffffff811115611da657600080fd5b602083019150836001820283011115611dbe57600080fd5b9250929050565b600082601f830112611dd657600080fd5b8135611de6848260208601611cab565b91505092915050565b600081359050611dfe81612c8a565b92915050565b600082601f830112611e1557600080fd5b8135611e25848260208601611ce9565b91505092915050565b600081359050611e3d81612ca1565b92915050565b600081519050611e5281612ca1565b92915050565b600060208284031215611e6a57600080fd5b6000611e7884828501611d27565b91505092915050565b600060208284031215611e9357600080fd5b6000611ea184828501611d3c565b91505092915050565b600080600080600060808688031215611ec257600080fd5b6000611ed088828901611d27565b9550506020611ee188828901611d27565b9450506040611ef288828901611e2e565b935050606086013567ffffffffffffffff811115611f0f57600080fd5b611f1b88828901611d7b565b92509250509295509295909350565b60008060408385031215611f3d57600080fd5b6000611f4b85828601611d27565b9250506020611f5c85828601611e2e565b9150509250929050565b600060208284031215611f7857600080fd5b6000611f8684828501611d66565b91505092915050565b600080600060608486031215611fa457600080fd5b600084013567ffffffffffffffff811115611fbe57600080fd5b611fca86828701611e04565b935050602084013567ffffffffffffffff811115611fe757600080fd5b611ff386828701611e04565b925050604084013567ffffffffffffffff81111561201057600080fd5b61201c86828701611dc5565b9150509250925092565b6000806000806080858703121561203c57600080fd5b600085013567ffffffffffffffff81111561205657600080fd5b61206287828801611e04565b945050602085013567ffffffffffffffff81111561207f57600080fd5b61208b87828801611e04565b935050604061209c87828801611def565b92505060606120ad87828801611e2e565b91505092959194509250565b6000602082840312156120cb57600080fd5b60006120d984828501611e2e565b91505092915050565b6000602082840312156120f457600080fd5b600061210284828501611e43565b91505092915050565b6000806040838503121561211e57600080fd5b600061212c85828601611e2e565b925050602061213d85828601611d27565b9150509250929050565b6000806040838503121561215a57600080fd5b600061216885828601611e2e565b925050602061217985828601611d51565b9150509250929050565b600061218f83836123ea565b60408301905092915050565b60006121a783836124d8565b60208301905092915050565b6121bc816128e8565b82525050565b6121cb816128e8565b82525050565b60006121dc82612772565b6121e681856127b8565b93506121f183612758565b8060005b838110156122225781516122098882612183565b97506122148361279e565b9250506001810190506121f5565b5085935050505092915050565b6122388161277d565b61224281846127c9565b925061224d82612768565b8060005b8381101561227e578151612265878261219b565b9650612270836127ab565b925050600181019050612251565b505050505050565b61228f81612906565b82525050565b60006122a082612788565b6122aa81856127d4565b93506122ba8185602086016129c6565b6122c381612b47565b840191505092915050565b6122d781612981565b82525050565b6122e6816129a5565b82525050565b60006122f782612793565b61230181856127e5565b93506123118185602086016129c6565b61231a81612b47565b840191505092915050565b600061233082612793565b61233a81856127f6565b935061234a8185602086016129c6565b61235381612b47565b840191505092915050565b600061236b602b836127f6565b915061237682612b58565b604082019050919050565b600061238e603c836127f6565b915061239982612ba7565b604082019050919050565b60006123b1601c836127f6565b91506123bc82612bf6565b602082019050919050565b60006123d46017836127f6565b91506123df82612c1f565b602082019050919050565b60408201600082015161240060008501826121b3565b50602082015161241360208501826124d8565b50505050565b60006101208301600083015161243260008601826122dd565b506020830151848203602086015261244a82826122ec565b9150506040830151848203604086015261246482826122ec565b9150506060830151848203606086015261247e8282612295565b915050608083015161249360808601826123ea565b5060a08301516124a660c08601826124d8565b5060c08301516124b960e08601826124d8565b5060e08301516124cd6101008601826124d8565b508091505092915050565b6124e181612977565b82525050565b6124f081612977565b82525050565b600060408201905061250b60008301856121c2565b61251860208301846121c2565b9392505050565b600060608201905061253460008301866121c2565b61254160208301856121c2565b61254e60408301846124e7565b949350505050565b600060408201905061256b60008301856121c2565b61257860208301846124e7565b9392505050565b6000602082019050818103600083015261259981846121d1565b905092915050565b60006040820190506125b6600083018461222f565b92915050565b60006020820190506125d16000830184612286565b92915050565b60006020820190506125ec60008301846122ce565b92915050565b6000602082019050818103600083015261260c8184612325565b905092915050565b6000602082019050818103600083015261262d8161235e565b9050919050565b6000602082019050818103600083015261264d81612381565b9050919050565b6000602082019050818103600083015261266d816123a4565b9050919050565b6000602082019050818103600083015261268d816123c7565b9050919050565b600060208201905081810360008301526126ae8184612419565b905092915050565b60006020820190506126cb60008301846124e7565b92915050565b60006126db6126ec565b90506126e78282612a2b565b919050565b6000604051905090565b600067ffffffffffffffff82111561271157612710612b18565b5b61271a82612b47565b9050602081019050919050565b600067ffffffffffffffff82111561274257612741612b18565b5b61274b82612b47565b9050602081019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061281282612977565b915061281d83612977565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561285257612851612a5c565b5b828201905092915050565b600061286882612977565b915061287383612977565b92508261288357612882612a8b565b5b828204905092915050565b600061289982612977565b91506128a483612977565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128dd576128dc612a5c565b5b828202905092915050565b60006128f382612957565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061293d826128e8565b9050919050565b600081905061295282612c48565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061298c82612993565b9050919050565b600061299e82612957565b9050919050565b60006129b082612944565b9050919050565b82818337600083830152505050565b60005b838110156129e45780820151818401526020810190506129c9565b838111156129f3576000848401525b50505050565b60006002820490506001821680612a1157607f821691505b60208210811415612a2557612a24612ae9565b5b50919050565b612a3482612b47565b810181811067ffffffffffffffff82111715612a5357612a52612b18565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f20766f7465000000000000000000000000000000000000000000602082015250565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f206372656174652061206e65772070726f706f73616c00000000602082015250565b7f5468697320617373657420697320616c7265616479206c6f636b656400000000600082015250565b7f546869732061737365742069736e2774206c6f636b6564000000000000000000600082015250565b60038110612c5957612c58612aba565b5b50565b612c65816128e8565b8114612c7057600080fd5b50565b612c7c816128fa565b8114612c8757600080fd5b50565b612c9381612932565b8114612c9e57600080fd5b50565b612caa81612977565b8114612cb557600080fd5b5056fea2646970667358221220ec8d936fa65caff98913aef1cc07f19843bae16ce79dab34f3e439a27ac057b264736f6c63430008040033a26469706673582212204a994e2ee23dc545bd07133c12ec87e988e7f116c5153017b460029bb871a6e864736f6c63430008040033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806316f0115b14620000635780635c39fcc1146200008557806366d3820314620000a75780638da5cb5b14620000c7578063e31dff1314620000e9575b600080fd5b6200006d62000109565b6040516200007c91906200076f565b60405180910390f35b6200008f6200012f565b6040516200009e919062000752565b60405180910390f35b620000c56004803603810190620000bf9190620005ed565b62000153565b005b620000d162000227565b604051620000e0919062000752565b60405180910390f35b6200010760048036038101906200010191906200068c565b6200024d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200022457806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002a857600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639215d96f846040518263ffffffff1660e01b81526004016200030891906200084f565b60006040518083038186803b1580156200032157600080fd5b505afa15801562000336573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019062000361919062000619565b915091506000828286600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200039b9062000531565b620003aa9493929190620007f4565b604051809103906000f080158015620003c7573d6000803e3d6000fd5b50905060008382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620003ff906200053f565b6200040d93929190620007b0565b604051809103906000f0801580156200042a573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87a2ae0205f28cf6777eb213e867569f69e687e4b090364233360729fb68392d866040516200048c91906200078c565b60405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f9530108683856040518463ffffffff1660e01b8152600401620004f5939291906200086c565b600060405180830381600087803b1580156200051057600080fd5b505af115801562000525573d6000803e3d6000fd5b50505050505050505050565b611d048062000a9383390190565b613197806200279783390190565b6000620005646200055e84620008d2565b620008a9565b9050828152602081018484840111156200057d57600080fd5b6200058a848285620009b2565b509392505050565b600081359050620005a38162000a5e565b92915050565b600082601f830112620005bb57600080fd5b8151620005cd8482602086016200054d565b91505092915050565b600081359050620005e78162000a78565b92915050565b6000602082840312156200060057600080fd5b6000620006108482850162000592565b91505092915050565b600080604083850312156200062d57600080fd5b600083015167ffffffffffffffff8111156200064857600080fd5b6200065685828601620005a9565b925050602083015167ffffffffffffffff8111156200067457600080fd5b6200068285828601620005a9565b9150509250929050565b60008060408385031215620006a057600080fd5b6000620006b085828601620005d6565b9250506020620006c385828601620005d6565b9150509250929050565b620006d88162000924565b82525050565b620006e98162000962565b82525050565b620006fa816200098a565b82525050565b60006200070d8262000908565b62000719818562000913565b93506200072b818560208601620009b2565b620007368162000a4d565b840191505092915050565b6200074c8162000958565b82525050565b6000602082019050620007696000830184620006cd565b92915050565b6000602082019050620007866000830184620006ef565b92915050565b60006020820190508181036000830152620007a8818462000700565b905092915050565b60006060820190508181036000830152620007cc818662000700565b9050620007dd6020830185620006de565b620007ec6040830184620006ef565b949350505050565b6000608082019050818103600083015262000810818762000700565b9050818103602083015262000826818662000700565b905062000837604083018562000741565b620008466060830184620006cd565b95945050505050565b600060208201905062000866600083018462000741565b92915050565b600060608201905062000883600083018662000741565b620008926020830185620006cd565b620008a16040830184620006de565b949350505050565b6000620008b5620008c8565b9050620008c38282620009e8565b919050565b6000604051905090565b600067ffffffffffffffff821115620008f057620008ef62000a1e565b5b620008fb8262000a4d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620009318262000938565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006200096f8262000976565b9050919050565b6000620009838262000938565b9050919050565b600062000997826200099e565b9050919050565b6000620009ab8262000938565b9050919050565b60005b83811015620009d2578082015181840152602081019050620009b5565b83811115620009e2576000848401525b50505050565b620009f38262000a4d565b810181811067ffffffffffffffff8211171562000a155762000a1462000a1e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000a698162000924565b811462000a7557600080fd5b50565b62000a838162000958565b811462000a8f57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001d0438038062001d0483398181016040528101906200003791906200038f565b83838160039080519060200190620000519291906200023f565b5080600490805190602001906200006a9291906200023f565b505050620000a98162000082620000b360201b60201c565b600a620000909190620005cc565b846200009d919062000709565b620000bc60201b60201c565b505050506200095f565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001269062000465565b60405180910390fd5b62000143600083836200023560201b60201c565b806002600082825462000157919062000514565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001ae919062000514565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000215919062000487565b60405180910390a362000231600083836200023a60201b60201c565b5050565b505050565b505050565b8280546200024d90620007eb565b90600052602060002090601f016020900481019282620002715760008555620002bd565b82601f106200028c57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bc5782518255916020019190600101906200029f565b5b509050620002cc9190620002d0565b5090565b5b80821115620002eb576000816000905550600101620002d1565b5090565b6000620003066200030084620004cd565b620004a4565b9050828152602081018484840111156200031f57600080fd5b6200032c848285620007b5565b509392505050565b60008151905062000345816200092b565b92915050565b600082601f8301126200035d57600080fd5b81516200036f848260208601620002ef565b91505092915050565b600081519050620003898162000945565b92915050565b60008060008060808587031215620003a657600080fd5b600085015167ffffffffffffffff811115620003c157600080fd5b620003cf878288016200034b565b945050602085015167ffffffffffffffff811115620003ed57600080fd5b620003fb878288016200034b565b93505060406200040e8782880162000378565b9250506060620004218782880162000334565b91505092959194509250565b60006200043c601f8362000503565b9150620004498262000902565b602082019050919050565b6200045f816200079e565b82525050565b6000602082019050818103600083015262000480816200042d565b9050919050565b60006020820190506200049e600083018462000454565b92915050565b6000620004b0620004c3565b9050620004be828262000821565b919050565b6000604051905090565b600067ffffffffffffffff821115620004eb57620004ea620008b5565b5b620004f682620008e4565b9050602081019050919050565b600082825260208201905092915050565b600062000521826200079e565b91506200052e836200079e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000566576200056562000857565b5b828201905092915050565b6000808291508390505b6001851115620005c3578086048111156200059b576200059a62000857565b5b6001851615620005ab5780820291505b8081029050620005bb85620008f5565b94506200057b565b94509492505050565b6000620005d9826200079e565b9150620005e683620007a8565b9250620006157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200061d565b905092915050565b6000826200062f576001905062000702565b816200063f576000905062000702565b8160018114620006585760028114620006635762000699565b600191505062000702565b60ff84111562000678576200067762000857565b5b8360020a91508482111562000692576200069162000857565b5b5062000702565b5060208310610133831016604e8410600b8410161715620006d35782820a905083811115620006cd57620006cc62000857565b5b62000702565b620006e2848484600162000571565b92509050818404811115620006fc57620006fb62000857565b5b81810290505b9392505050565b600062000716826200079e565b915062000723836200079e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200075f576200075e62000857565b5b828202905092915050565b600062000777826200077e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620007d5578082015181840152602081019050620007b8565b83811115620007e5576000848401525b50505050565b600060028204905060018216806200080457607f821691505b602082108114156200081b576200081a62000886565b5b50919050565b6200082c82620008e4565b810181811067ffffffffffffffff821117156200084e576200084d620008b5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000936816200076a565b81146200094257600080fd5b50565b62000950816200079e565b81146200095c57600080fd5b50565b611395806200096f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea2646970667358221220803b65279b0b99b4cd4975d10e0ed53cdf622d5e45acf757e61245c7c8bec42a64736f6c6343000804003360806040523480156200001157600080fd5b50604051620031973803806200319783398181016040528101906200003791906200022a565b82600190805190602001906200004f929190620000da565b50816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000499565b828054620000e8906200038a565b90600052602060002090601f0160209004810192826200010c576000855562000158565b82601f106200012757805160ff191683800117855562000158565b8280016001018555821562000158579182015b82811115620001575782518255916020019190600101906200013a565b5b5090506200016791906200016b565b5090565b5b80821115620001865760008160009055506001016200016c565b5090565b6000620001a16200019b84620002c2565b62000299565b905082815260208101848484011115620001ba57600080fd5b620001c784828562000354565b509392505050565b600081519050620001e08162000465565b92915050565b600081519050620001f7816200047f565b92915050565b600082601f8301126200020f57600080fd5b8151620002218482602086016200018a565b91505092915050565b6000806000606084860312156200024057600080fd5b600084015167ffffffffffffffff8111156200025b57600080fd5b6200026986828701620001fd565b93505060206200027c86828701620001cf565b92505060406200028f86828701620001e6565b9150509250925092565b6000620002a5620002b8565b9050620002b38282620003c0565b919050565b6000604051905090565b600067ffffffffffffffff821115620002e057620002df62000425565b5b620002eb8262000454565b9050602081019050919050565b6000620003058262000334565b9050919050565b60006200031982620002f8565b9050919050565b60006200032d82620002f8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200037457808201518184015260208101905062000357565b8381111562000384576000848401525b50505050565b60006002820490506001821680620003a357607f821691505b60208210811415620003ba57620003b9620003f6565b5b50919050565b620003cb8262000454565b810181811067ffffffffffffffff82111715620003ed57620003ec62000425565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000470816200030c565b81146200047c57600080fd5b50565b6200048a8162000320565b81146200049657600080fd5b50565b612cee80620004a96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063528f9d55116100975780637acb7757116100665780637acb775714610298578063c9d27afe146102b4578063e4dd26cf146102d0578063e9a4b691146102ec576100f5565b8063528f9d5514610210578063561f4a6a1461022e578063688e1d311461024a578063698839fd14610268576100f5565b8063150b7a02116100d3578063150b7a021461016457806317eb2f0914610194578063379607f5146101c45780633eda5200146101e0576100f5565b806306fdde03146100fa5780630f9e4fb51461011857806310b1939f14610134575b600080fd5b610102610308565b60405161010f91906125f2565b60405180910390f35b610132600480360381019061012d9190611f2a565b610396565b005b61014e600480360381019061014991906120b9565b61070f565b60405161015b919061257f565b60405180910390f35b61017e60048036038101906101799190611eaa565b6108b3565b60405161018b91906125bc565b60405180910390f35b6101ae60048036038101906101a991906120b9565b6108c8565b6040516101bb91906125a1565b60405180910390f35b6101de60048036038101906101d991906120b9565b610918565b005b6101fa60048036038101906101f591906120b9565b610aca565b6040516102079190612694565b60405180910390f35b610218610dc7565b60405161022591906126b6565b60405180910390f35b6102486004803603810190610243919061210b565b610dcd565b005b610252610ef9565b60405161025f91906125d7565b60405180910390f35b610282600480360381019061027d9190611e58565b610f1d565b60405161028f91906126b6565b60405180910390f35b6102b260048036038101906102ad919061210b565b610f66565b005b6102ce60048036038101906102c99190612147565b6111d1565b005b6102ea60048036038101906102e59190611f8f565b6113a7565b005b61030660048036038101906103019190612026565b6116e4565b005b60018054610315906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610341906129f9565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b505050505081565b60001515600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff1615151461043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043490612654565b60405180910390fd5b600081146105f25760008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161049a91906126b6565b60206040518083038186803b1580156104b257600080fd5b505afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea9190611e81565b73ffffffffffffffffffffffffffffffffffffffff1614610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790612674565b60405180910390fd5b600360010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505061069f565b600360020160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505b6001600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b606060008214156107dc576003600101805480602002602001604051908101604052809291908181526020016000905b828210156107d157838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061073f565b5050505090506108ae565b60018214156108a7576003600201805480602002602001604051908101604052809291908181526020016000905b8282101561089c57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061080a565b5050505090506108ae565b6060809150505b919050565b600063150b7a0260e01b905095945050505050565b6108d0611aad565b60405180604001604052806007600085815260200190815260200160002060060154815260200160076000858152602001908152602001600020600701548152509050919050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a175760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109bf929190612556565b602060405180830381600087803b1580156109d957600080fd5b505af11580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190611f66565b50610ac6565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a72929190612556565b602060405180830381600087803b158015610a8c57600080fd5b505af1158015610aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac49190611f66565b505b5050565b610ad2611acf565b60076000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff166002811115610b3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610b74577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182018054610b88906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb4906129f9565b8015610c015780601f10610bd657610100808354040283529160200191610c01565b820191906000526020600020905b815481529060010190602001808311610be457829003601f168201915b50505050508152602001600282018054610c1a906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c46906129f9565b8015610c935780601f10610c6857610100808354040283529160200191610c93565b820191906000526020600020905b815481529060010190602001808311610c7657829003601f168201915b50505050508152602001600382018054610cac906129f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd8906129f9565b8015610d255780601f10610cfa57610100808354040283529160200191610d25565b820191906000526020600020905b815481529060010190602001808311610d0857829003601f168201915b50505050508152602001600482016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200160068201548152602001600782015481526020016008820154815250509050919050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630856040518463ffffffff1660e01b8152600401610e4c9392919061251f565b602060405180830381600087803b158015610e6657600080fd5b505af1158015610e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9e9190611f66565b5081600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eee9190612807565b925050819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610fc29291906124f6565b60206040518083038186803b158015610fda57600080fd5b505afa158015610fee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101291906120e2565b10156110c75760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401611073929190612556565b602060405180830381600087803b15801561108d57600080fd5b505af11580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190611f66565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016111249392919061251f565b602060405180830381600087803b15801561113e57600080fd5b505af1158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190611f66565b5081600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111c69190612807565b925050819055505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90612614565b60405180910390fd5b6001151581151514156112d257600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546007600084815260200190815260200160002060060160008282546112c69190612807565b9250508190555061133f565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546007600084815260200190815260200160002060070160008282546113379190612807565b925050819055505b6000600760008481526020019081526020016000206007015460076000858152602001908152602001600020600601546113799190612807565b9050600760008481526020019081526020016000206008015481106113a2576113a1836119a6565b5b505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561142a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142190612634565b60405180910390fd5b60016002600082825461143d9190612807565b9250508190555060006040518061010001604052806000600281111561148c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018581526020018481526020018381526020016040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525081526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561154b57600080fd5b505afa15801561155f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158391906120e2565b600361158f919061288e565b611599919061285d565b81525090508060076000600254815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611605577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001019080519060200190611626929190611b52565b506040820151816002019080519060200190611643929190611b52565b506060820151816003019080519060200190611660929190611bd8565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050565b6001600260008282546116f79190612807565b925050819055506060600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152509050600060405180610100016040528060006002811115611777577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018881526020018781526020018481526020018381526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561180a57600080fd5b505afa15801561181e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184291906120e2565b600361184e919061288e565b611858919061285d565b81525090508060076000600254815260200190815260200160002060008201518160000160006101000a81548160ff021916908360028111156118c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060208201518160010190805190602001906118e5929190611b52565b506040820151816002019080519060200190611902929190611b52565b50606082015181600301908051906020019061191f929190611bd8565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050505050565b600760008281526020019081526020016000206007015460076000838152602001908152602001600020600601541115611a445760016007600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611a3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550611aaa565b60026007600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611aa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6040518060400160405280600290602082028036833780820191505090505090565b60405180610100016040528060006002811115611b15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001606081526020016060815260200160608152602001611b37611c5e565b81526020016000815260200160008152602001600081525090565b828054611b5e906129f9565b90600052602060002090601f016020900481019282611b805760008555611bc7565b82601f10611b9957805160ff1916838001178555611bc7565b82800160010185558215611bc7579182015b82811115611bc6578251825591602001919060010190611bab565b5b509050611bd49190611c8e565b5090565b828054611be4906129f9565b90600052602060002090601f016020900481019282611c065760008555611c4d565b82601f10611c1f57805160ff1916838001178555611c4d565b82800160010185558215611c4d579182015b82811115611c4c578251825591602001919060010190611c31565b5b509050611c5a9190611c8e565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115611ca7576000816000905550600101611c8f565b5090565b6000611cbe611cb9846126f6565b6126d1565b905082815260208101848484011115611cd657600080fd5b611ce18482856129b7565b509392505050565b6000611cfc611cf784612727565b6126d1565b905082815260208101848484011115611d1457600080fd5b611d1f8482856129b7565b509392505050565b600081359050611d3681612c5c565b92915050565b600081519050611d4b81612c5c565b92915050565b600081359050611d6081612c73565b92915050565b600081519050611d7581612c73565b92915050565b60008083601f840112611d8d57600080fd5b8235905067ffffffffffffffff811115611da657600080fd5b602083019150836001820283011115611dbe57600080fd5b9250929050565b600082601f830112611dd657600080fd5b8135611de6848260208601611cab565b91505092915050565b600081359050611dfe81612c8a565b92915050565b600082601f830112611e1557600080fd5b8135611e25848260208601611ce9565b91505092915050565b600081359050611e3d81612ca1565b92915050565b600081519050611e5281612ca1565b92915050565b600060208284031215611e6a57600080fd5b6000611e7884828501611d27565b91505092915050565b600060208284031215611e9357600080fd5b6000611ea184828501611d3c565b91505092915050565b600080600080600060808688031215611ec257600080fd5b6000611ed088828901611d27565b9550506020611ee188828901611d27565b9450506040611ef288828901611e2e565b935050606086013567ffffffffffffffff811115611f0f57600080fd5b611f1b88828901611d7b565b92509250509295509295909350565b60008060408385031215611f3d57600080fd5b6000611f4b85828601611d27565b9250506020611f5c85828601611e2e565b9150509250929050565b600060208284031215611f7857600080fd5b6000611f8684828501611d66565b91505092915050565b600080600060608486031215611fa457600080fd5b600084013567ffffffffffffffff811115611fbe57600080fd5b611fca86828701611e04565b935050602084013567ffffffffffffffff811115611fe757600080fd5b611ff386828701611e04565b925050604084013567ffffffffffffffff81111561201057600080fd5b61201c86828701611dc5565b9150509250925092565b6000806000806080858703121561203c57600080fd5b600085013567ffffffffffffffff81111561205657600080fd5b61206287828801611e04565b945050602085013567ffffffffffffffff81111561207f57600080fd5b61208b87828801611e04565b935050604061209c87828801611def565b92505060606120ad87828801611e2e565b91505092959194509250565b6000602082840312156120cb57600080fd5b60006120d984828501611e2e565b91505092915050565b6000602082840312156120f457600080fd5b600061210284828501611e43565b91505092915050565b6000806040838503121561211e57600080fd5b600061212c85828601611e2e565b925050602061213d85828601611d27565b9150509250929050565b6000806040838503121561215a57600080fd5b600061216885828601611e2e565b925050602061217985828601611d51565b9150509250929050565b600061218f83836123ea565b60408301905092915050565b60006121a783836124d8565b60208301905092915050565b6121bc816128e8565b82525050565b6121cb816128e8565b82525050565b60006121dc82612772565b6121e681856127b8565b93506121f183612758565b8060005b838110156122225781516122098882612183565b97506122148361279e565b9250506001810190506121f5565b5085935050505092915050565b6122388161277d565b61224281846127c9565b925061224d82612768565b8060005b8381101561227e578151612265878261219b565b9650612270836127ab565b925050600181019050612251565b505050505050565b61228f81612906565b82525050565b60006122a082612788565b6122aa81856127d4565b93506122ba8185602086016129c6565b6122c381612b47565b840191505092915050565b6122d781612981565b82525050565b6122e6816129a5565b82525050565b60006122f782612793565b61230181856127e5565b93506123118185602086016129c6565b61231a81612b47565b840191505092915050565b600061233082612793565b61233a81856127f6565b935061234a8185602086016129c6565b61235381612b47565b840191505092915050565b600061236b602b836127f6565b915061237682612b58565b604082019050919050565b600061238e603c836127f6565b915061239982612ba7565b604082019050919050565b60006123b1601c836127f6565b91506123bc82612bf6565b602082019050919050565b60006123d46017836127f6565b91506123df82612c1f565b602082019050919050565b60408201600082015161240060008501826121b3565b50602082015161241360208501826124d8565b50505050565b60006101208301600083015161243260008601826122dd565b506020830151848203602086015261244a82826122ec565b9150506040830151848203604086015261246482826122ec565b9150506060830151848203606086015261247e8282612295565b915050608083015161249360808601826123ea565b5060a08301516124a660c08601826124d8565b5060c08301516124b960e08601826124d8565b5060e08301516124cd6101008601826124d8565b508091505092915050565b6124e181612977565b82525050565b6124f081612977565b82525050565b600060408201905061250b60008301856121c2565b61251860208301846121c2565b9392505050565b600060608201905061253460008301866121c2565b61254160208301856121c2565b61254e60408301846124e7565b949350505050565b600060408201905061256b60008301856121c2565b61257860208301846124e7565b9392505050565b6000602082019050818103600083015261259981846121d1565b905092915050565b60006040820190506125b6600083018461222f565b92915050565b60006020820190506125d16000830184612286565b92915050565b60006020820190506125ec60008301846122ce565b92915050565b6000602082019050818103600083015261260c8184612325565b905092915050565b6000602082019050818103600083015261262d8161235e565b9050919050565b6000602082019050818103600083015261264d81612381565b9050919050565b6000602082019050818103600083015261266d816123a4565b9050919050565b6000602082019050818103600083015261268d816123c7565b9050919050565b600060208201905081810360008301526126ae8184612419565b905092915050565b60006020820190506126cb60008301846124e7565b92915050565b60006126db6126ec565b90506126e78282612a2b565b919050565b6000604051905090565b600067ffffffffffffffff82111561271157612710612b18565b5b61271a82612b47565b9050602081019050919050565b600067ffffffffffffffff82111561274257612741612b18565b5b61274b82612b47565b9050602081019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061281282612977565b915061281d83612977565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561285257612851612a5c565b5b828201905092915050565b600061286882612977565b915061287383612977565b92508261288357612882612a8b565b5b828204905092915050565b600061289982612977565b91506128a483612977565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128dd576128dc612a5c565b5b828202905092915050565b60006128f382612957565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061293d826128e8565b9050919050565b600081905061295282612c48565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061298c82612993565b9050919050565b600061299e82612957565b9050919050565b60006129b082612944565b9050919050565b82818337600083830152505050565b60005b838110156129e45780820151818401526020810190506129c9565b838111156129f3576000848401525b50505050565b60006002820490506001821680612a1157607f821691505b60208210811415612a2557612a24612ae9565b5b50919050565b612a3482612b47565b810181811067ffffffffffffffff82111715612a5357612a52612b18565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f20766f7465000000000000000000000000000000000000000000602082015250565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f206372656174652061206e65772070726f706f73616c00000000602082015250565b7f5468697320617373657420697320616c7265616479206c6f636b656400000000600082015250565b7f546869732061737365742069736e2774206c6f636b6564000000000000000000600082015250565b60038110612c5957612c58612aba565b5b50565b612c65816128e8565b8114612c7057600080fd5b50565b612c7c816128fa565b8114612c8757600080fd5b50565b612c9381612932565b8114612c9e57600080fd5b50565b612caa81612977565b8114612cb557600080fd5b5056fea2646970667358221220ec8d936fa65caff98913aef1cc07f19843bae16ce79dab34f3e439a27ac057b264736f6c63430008040033a26469706673582212204a994e2ee23dc545bd07133c12ec87e988e7f116c5153017b460029bb871a6e864736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:998:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:93:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "93:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "108:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "164:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Pool_$1242",
                      "nodeType": "YulIdentifier",
                      "src": "124:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "124:46:11"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Pool_$1242_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "69:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "77:5:11",
                "type": ""
              }
            ],
            "src": "7:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "272:220:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "318:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "327:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "320:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "320:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "320:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "293:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "302:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "289:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "289:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "314:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "285:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "285:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "282:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "344:141:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "359:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "373:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "363:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "388:87:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "447:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "458:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "443:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "443:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "467:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Pool_$1242_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "398:44:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "398:77:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "388:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Pool_$1242_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:11",
                "type": ""
              }
            ],
            "src": "182:310:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "543:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "553:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "582:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "564:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "553:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "525:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "535:7:11",
                "type": ""
              }
            ],
            "src": "498:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "658:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "668:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "697:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "679:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "668:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Pool_$1242",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "640:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "650:7:11",
                "type": ""
              }
            ],
            "src": "600:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "760:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "770:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "785:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "792:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "770:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "752:7:11",
                "type": ""
              }
            ],
            "src": "715:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "903:92:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "926:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "964:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Pool_$1242",
                              "nodeType": "YulIdentifier",
                              "src": "933:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "933:37:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "923:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:48:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:56:11"
                  },
                  "nodeType": "YulIf",
                  "src": "913:2:11"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Pool_$1242",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "896:5:11",
                "type": ""
              }
            ],
            "src": "847:148:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Pool_$1242_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Pool_$1242(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Pool_$1242_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Pool_$1242_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Pool_$1242(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Pool_$1242(value) {\n        if iszero(eq(value, cleanup_t_contract$_Pool_$1242(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8955:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:259:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "137:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "121:15:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "203:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "210:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "196:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "248:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "230:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "303:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "272:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "268:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "286:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "265:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "338:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "343:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "348:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "316:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:39:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:11",
                "type": ""
              }
            ],
            "src": "7:354:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "451:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "438:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "429:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "494:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "467:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "467:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "397:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "405:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "413:5:11",
                "type": ""
              }
            ],
            "src": "367:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "599:215:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "648:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "657:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "660:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "650:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "650:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "650:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "627:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "635:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "623:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "623:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "642:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "619:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "609:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "673:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "687:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "687:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "677:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "709:99:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "789:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "796:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "804:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "718:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:90:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "709:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "577:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "585:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "593:5:11",
                "type": ""
              }
            ],
            "src": "526:288:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "872:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "882:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "904:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "891:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "882:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "947:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "920:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "920:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "850:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "858:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "866:5:11",
                "type": ""
              }
            ],
            "src": "820:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1031:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1077:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1052:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1061:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1048:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1073:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1041:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1103:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1118:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1122:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1147:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1182:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1193:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1178:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1178:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1157:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1147:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1012:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1024:6:11",
                "type": ""
              }
            ],
            "src": "965:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1347:538:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1393:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1402:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1395:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1395:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1368:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1364:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1364:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1389:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1357:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:224:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:38:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1458:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1469:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1454:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1454:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1448:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1448:24:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1519:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1528:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1531:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1521:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1521:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1521:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1488:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1488:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1485:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1549:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1605:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1616:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1601:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1601:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1559:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1559:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1549:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1653:225:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1668:39:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1692:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1703:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1688:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1688:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1682:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:25:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1672:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1754:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1763:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1766:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1756:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1756:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1756:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1726:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1734:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1720:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1784:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1840:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1851:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1836:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1836:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1860:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1794:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1784:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1309:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1320:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1332:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1340:6:11",
                "type": ""
              }
            ],
            "src": "1233:652:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1974:324:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2020:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2029:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2032:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2022:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2022:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2022:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1995:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2004:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1991:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1991:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2016:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1987:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1984:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2046:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2061:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2065:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2090:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2125:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2136:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2121:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2121:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2145:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2100:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2100:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2090:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2173:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2188:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2202:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2192:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2218:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2253:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2264:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2249:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2249:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2273:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2228:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2218:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1936:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1947:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1959:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1967:6:11",
                "type": ""
              }
            ],
            "src": "1891:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2369:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2386:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2409:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2391:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2391:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2379:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2379:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2379:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2357:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2364:3:11",
                "type": ""
              }
            ],
            "src": "2304:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:81:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2525:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2576:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1866_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2530:45:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:65:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1866_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2496:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2503:3:11",
                "type": ""
              }
            ],
            "src": "2428:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:79:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2690:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2739:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Pool_$1242_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2695:43:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:50:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2683:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2683:63:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Pool_$1242_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2661:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2668:3:11",
                "type": ""
              }
            ],
            "src": "2595:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:272:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2860:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2907:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2874:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2874:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2864:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:78:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2988:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2993:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2929:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:71:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3035:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3042:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3049:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3054:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3009:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3009:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3070:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3081:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3108:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3086:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3077:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3070:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2831:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2838:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2846:3:11",
                "type": ""
              }
            ],
            "src": "2758:364:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3193:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3210:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3233:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3215:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3203:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3203:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3203:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3181:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3188:3:11",
                "type": ""
              }
            ],
            "src": "3128:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3350:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3360:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3372:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3383:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3368:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3360:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3440:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3453:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3464:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3396:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3396:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3396:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3322:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3334:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3345:4:11",
                "type": ""
              }
            ],
            "src": "3252:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:137:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3601:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3613:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3624:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3609:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3601:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3694:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3707:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3718:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3703:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3703:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$1242_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3637:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:84:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:84:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Pool_$1242__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3563:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3575:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3586:4:11",
                "type": ""
              }
            ],
            "src": "3480:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3852:195:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3862:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3874:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3885:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3870:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3870:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3862:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3928:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3954:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4026:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4035:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3962:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3954:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3824:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3836:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3847:4:11",
                "type": ""
              }
            ],
            "src": "3734:313:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4255:387:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4265:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4277:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4288:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4273:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4273:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4265:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4312:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4323:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4308:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4308:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4331:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4337:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4327:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4327:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4301:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4301:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4357:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4429:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4438:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4365:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4365:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4357:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4512:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4525:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4536:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4521:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4521:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1866_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4453:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4453:87:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4607:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4620:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4631:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4616:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4616:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$1242_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4550:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4550:85:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4550:85:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1866_t_contract$_Pool_$1242__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4211:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4223:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4231:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4239:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4250:4:11",
                "type": ""
              }
            ],
            "src": "4053:589:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4870:513:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4880:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4892:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4903:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4888:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4888:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4880:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4928:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4939:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4924:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4947:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4953:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4943:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4943:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4917:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4917:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4917:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4973:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5045:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5054:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4981:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4981:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4973:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5080:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5091:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5076:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5076:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5100:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5106:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5096:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5096:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5069:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5069:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5069:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5126:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5198:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5207:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5134:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5134:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5126:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5266:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5279:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5290:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5275:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5275:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5222:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5222:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5222:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5348:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5361:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5372:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5357:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5357:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5304:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5304:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5304:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4818:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4830:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4838:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4846:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4854:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4865:4:11",
                "type": ""
              }
            ],
            "src": "4648:735:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5487:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5497:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5509:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5520:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5505:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5505:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5497:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5577:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5590:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5601:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5586:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5586:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5533:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5533:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5459:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5471:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5482:4:11",
                "type": ""
              }
            ],
            "src": "5389:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5786:303:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5796:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5808:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5819:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5804:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5796:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5876:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5889:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5900:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5885:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5885:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5832:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5832:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5832:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5957:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5970:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5981:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5966:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5966:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5913:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5913:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5913:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6054:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6067:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6078:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6063:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6063:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1866_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5995:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5995:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5995:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_contract$_IERC20_$1866__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5742:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5754:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5762:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5770:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5781:4:11",
                "type": ""
              }
            ],
            "src": "5617:472:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6136:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6146:30:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "6156:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6156:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6146:6:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6205:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6213:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "6185:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6185:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6185:33:11"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6120:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6129:6:11",
                "type": ""
              }
            ],
            "src": "6095:129:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6270:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6280:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6296:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6290:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6290:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6280:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6263:6:11",
                "type": ""
              }
            ],
            "src": "6230:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6378:241:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6483:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6485:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6485:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6485:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6455:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6463:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6452:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6452:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6449:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6515:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6545:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6523:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6523:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6515:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6589:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6601:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6607:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6597:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6589:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6362:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6373:4:11",
                "type": ""
              }
            ],
            "src": "6311:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6684:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6695:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6711:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6705:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6705:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6695:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6667:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6677:6:11",
                "type": ""
              }
            ],
            "src": "6625:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6826:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6843:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6848:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6836:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6836:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6836:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6864:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6883:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6888:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6879:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6879:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6864:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6798:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6803:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6814:11:11",
                "type": ""
              }
            ],
            "src": "6730:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6950:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6960:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6989:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6971:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6971:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6960:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6932:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6942:7:11",
                "type": ""
              }
            ],
            "src": "6905:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7052:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7062:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7077:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7084:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7073:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7073:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7062:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7034:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7044:7:11",
                "type": ""
              }
            ],
            "src": "7007:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7184:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7194:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7205:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7194:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7166:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7176:7:11",
                "type": ""
              }
            ],
            "src": "7139:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7297:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7307:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7366:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1866_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7320:45:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7320:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7307:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1866_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7277:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7287:9:11",
                "type": ""
              }
            ],
            "src": "7222:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7459:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7469:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7500:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7482:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7469:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1866_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7439:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7449:9:11",
                "type": ""
              }
            ],
            "src": "7384:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7591:79:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7601:63:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7658:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Pool_$1242_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7614:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7614:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7601:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1242_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7571:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7581:9:11",
                "type": ""
              }
            ],
            "src": "7518:152:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7749:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7759:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7790:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7772:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7772:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7759:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1242_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7729:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7739:9:11",
                "type": ""
              }
            ],
            "src": "7676:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7857:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7867:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7876:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7871:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7936:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7961:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7966:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7957:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7957:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7980:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7985:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7976:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7976:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7970:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7970:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7950:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7950:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7950:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7897:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7900:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7894:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7894:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7908:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7910:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7919:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7922:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7915:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7915:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7910:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7890:3:11",
                    "statements": []
                  },
                  "src": "7886:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8033:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8083:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8088:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8079:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8079:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8097:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8072:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8072:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8072:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8014:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8017:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8011:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8011:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8008:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7839:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7844:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7849:6:11",
                "type": ""
              }
            ],
            "src": "7808:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8164:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8174:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "8196:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "8226:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "8204:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8204:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8192:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8192:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8178:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8343:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8345:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8345:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8345:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8286:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8298:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8283:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8283:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8322:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8334:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8319:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8319:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8280:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8280:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8277:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8381:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8385:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8374:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8374:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8374:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8150:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8158:4:11",
                "type": ""
              }
            ],
            "src": "8121:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8436:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8453:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8456:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8446:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8446:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8446:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8550:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8553:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8543:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8543:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8543:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8574:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8577:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8567:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8567:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8567:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8408:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8642:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8652:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8670:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8677:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8666:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8666:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8686:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8682:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8682:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8662:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8662:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "8652:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8625:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "8635:6:11",
                "type": ""
              }
            ],
            "src": "8594:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8745:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8802:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8811:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8814:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8804:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8804:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8804:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8768:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8793:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8775:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8775:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8765:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8765:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8758:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8758:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8755:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8738:5:11",
                "type": ""
              }
            ],
            "src": "8702:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8873:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8930:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8939:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8942:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8932:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8932:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8932:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8896:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8921:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8903:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8903:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8893:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8893:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8886:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8886:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8883:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8866:5:11",
                "type": ""
              }
            ],
            "src": "8830:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1866_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1866_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Pool_$1242_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Pool_$1242_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Pool_$1242__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Pool_$1242_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1866_t_contract$_Pool_$1242__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_IERC20_$1866_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_Pool_$1242_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_contract$_IERC20_$1866__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IERC20_$1866_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$1866_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1866_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1866_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1242_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Pool_$1242_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1242_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "207:1317:2:-:0;;;577:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;619:10;611:5;;:18;;;;;;;;;;;;;;;;;;651:10;639:9;;:22;;;;;;;;;;;;;;;;;;678:5;671:4;;:12;;;;;;;;;;;;;;;;;;577:113;207:1317;;7:169:11;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:310::-;265:6;314:2;302:9;293:7;289:23;285:32;282:2;;;330:1;327;320:12;282:2;373:1;398:77;467:7;458:6;447:9;443:22;398:77;:::i;:::-;388:87;;344:141;272:220;;;;:::o;498:96::-;535:7;564:24;582:5;564:24;:::i;:::-;553:35;;543:51;;;:::o;600:109::-;650:7;679:24;697:5;679:24;:::i;:::-;668:35;;658:51;;;:::o;715:126::-;752:7;792:42;785:5;781:54;770:65;;760:81;;;:::o;847:148::-;933:37;964:5;933:37;:::i;:::-;926:5;923:48;913:2;;985:1;982;975:12;913:2;903:92;:::o;207:1317:2:-;;;;;;;",
  "deployedSourceMap": "207:1317:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;284:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;861:660;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;353:16;;;;;;;;;;;;;:::o;231:24::-;;;;;;;;;;;;:::o;696:159::-;418:5;;;;;;;;;;;404:19;;:10;:19;;;396:28;;;;;;792:3:::1;766:30;;:14;:30;;;762:87;;824:14;812:9;::::0;:26:::1;;;;;;;;;;;;;;;;;;762:87;696:159:::0;:::o;284:20::-;;;;;;;;;;;;;:::o;861:660::-;480:5;;;;;;;;;;;466:19;;:10;:19;;;458:28;;;;;;982:24:::1;1008:21:::0;1033:4:::1;;;;;;;;;;;:25;;;1059:8;1033:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:87;;;;1078:16;1110:10;1122:6;1130:14;1154:4;;;;;;;;;;;1097:63;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1078:82;;1210:7;1228:10;1240:9;1251:4;;;;;;;;;;;1220:36;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1210:46;;1312:9;1271:52;;1298:3;1271:52;;;1278:10;1271:52;;;;;;:::i;:::-;;;;;;;;1453:4;;;;;;;;;;;:26;;;1480:8;1498:3;1504:9;1453:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;488:1;;;;861:660:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:354:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:139::-;413:5;451:6;438:20;429:29;;467:33;494:5;467:33;:::i;:::-;419:87;;;;:::o;526:288::-;593:5;642:3;635:4;627:6;623:17;619:27;609:2;;660:1;657;650:12;609:2;693:6;687:13;718:90;804:3;796:6;789:4;781:6;777:17;718:90;:::i;:::-;709:99;;599:215;;;;;:::o;820:139::-;866:5;904:6;891:20;882:29;;920:33;947:5;920:33;:::i;:::-;872:87;;;;:::o;965:262::-;1024:6;1073:2;1061:9;1052:7;1048:23;1044:32;1041:2;;;1089:1;1086;1079:12;1041:2;1132:1;1157:53;1202:7;1193:6;1182:9;1178:22;1157:53;:::i;:::-;1147:63;;1103:117;1031:196;;;;:::o;1233:652::-;1332:6;1340;1389:2;1377:9;1368:7;1364:23;1360:32;1357:2;;;1405:1;1402;1395:12;1357:2;1469:1;1458:9;1454:17;1448:24;1499:18;1491:6;1488:30;1485:2;;;1531:1;1528;1521:12;1485:2;1559:74;1625:7;1616:6;1605:9;1601:22;1559:74;:::i;:::-;1549:84;;1419:224;1703:2;1692:9;1688:18;1682:25;1734:18;1726:6;1723:30;1720:2;;;1766:1;1763;1756:12;1720:2;1794:74;1860:7;1851:6;1840:9;1836:22;1794:74;:::i;:::-;1784:84;;1653:225;1347:538;;;;;:::o;1891:407::-;1959:6;1967;2016:2;2004:9;1995:7;1991:23;1987:32;1984:2;;;2032:1;2029;2022:12;1984:2;2075:1;2100:53;2145:7;2136:6;2125:9;2121:22;2100:53;:::i;:::-;2090:63;;2046:117;2202:2;2228:53;2273:7;2264:6;2253:9;2249:22;2228:53;:::i;:::-;2218:63;;2173:118;1974:324;;;;;:::o;2304:118::-;2391:24;2409:5;2391:24;:::i;:::-;2386:3;2379:37;2369:53;;:::o;2428:161::-;2530:52;2576:5;2530:52;:::i;:::-;2525:3;2518:65;2508:81;;:::o;2595:157::-;2695:50;2739:5;2695:50;:::i;:::-;2690:3;2683:63;2673:79;;:::o;2758:364::-;2846:3;2874:39;2907:5;2874:39;:::i;:::-;2929:71;2993:6;2988:3;2929:71;:::i;:::-;2922:78;;3009:52;3054:6;3049:3;3042:4;3035:5;3031:16;3009:52;:::i;:::-;3086:29;3108:6;3086:29;:::i;:::-;3081:3;3077:39;3070:46;;2850:272;;;;;:::o;3128:118::-;3215:24;3233:5;3215:24;:::i;:::-;3210:3;3203:37;3193:53;;:::o;3252:222::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3396:71;3464:1;3453:9;3449:17;3440:6;3396:71;:::i;:::-;3350:124;;;;:::o;3480:248::-;3586:4;3624:2;3613:9;3609:18;3601:26;;3637:84;3718:1;3707:9;3703:17;3694:6;3637:84;:::i;:::-;3591:137;;;;:::o;3734:313::-;3847:4;3885:2;3874:9;3870:18;3862:26;;3934:9;3928:4;3924:20;3920:1;3909:9;3905:17;3898:47;3962:78;4035:4;4026:6;3962:78;:::i;:::-;3954:86;;3852:195;;;;:::o;4053:589::-;4250:4;4288:2;4277:9;4273:18;4265:26;;4337:9;4331:4;4327:20;4323:1;4312:9;4308:17;4301:47;4365:78;4438:4;4429:6;4365:78;:::i;:::-;4357:86;;4453:87;4536:2;4525:9;4521:18;4512:6;4453:87;:::i;:::-;4550:85;4631:2;4620:9;4616:18;4607:6;4550:85;:::i;:::-;4255:387;;;;;;:::o;4648:735::-;4865:4;4903:3;4892:9;4888:19;4880:27;;4953:9;4947:4;4943:20;4939:1;4928:9;4924:17;4917:47;4981:78;5054:4;5045:6;4981:78;:::i;:::-;4973:86;;5106:9;5100:4;5096:20;5091:2;5080:9;5076:18;5069:48;5134:78;5207:4;5198:6;5134:78;:::i;:::-;5126:86;;5222:72;5290:2;5279:9;5275:18;5266:6;5222:72;:::i;:::-;5304;5372:2;5361:9;5357:18;5348:6;5304:72;:::i;:::-;4870:513;;;;;;;:::o;5389:222::-;5482:4;5520:2;5509:9;5505:18;5497:26;;5533:71;5601:1;5590:9;5586:17;5577:6;5533:71;:::i;:::-;5487:124;;;;:::o;5617:472::-;5781:4;5819:2;5808:9;5804:18;5796:26;;5832:71;5900:1;5889:9;5885:17;5876:6;5832:71;:::i;:::-;5913:72;5981:2;5970:9;5966:18;5957:6;5913:72;:::i;:::-;5995:87;6078:2;6067:9;6063:18;6054:6;5995:87;:::i;:::-;5786:303;;;;;;:::o;6095:129::-;6129:6;6156:20;;:::i;:::-;6146:30;;6185:33;6213:4;6205:6;6185:33;:::i;:::-;6136:88;;;:::o;6230:75::-;6263:6;6296:2;6290:9;6280:19;;6270:35;:::o;6311:308::-;6373:4;6463:18;6455:6;6452:30;6449:2;;;6485:18;;:::i;:::-;6449:2;6523:29;6545:6;6523:29;:::i;:::-;6515:37;;6607:4;6601;6597:15;6589:23;;6378:241;;;:::o;6625:99::-;6677:6;6711:5;6705:12;6695:22;;6684:40;;;:::o;6730:169::-;6814:11;6848:6;6843:3;6836:19;6888:4;6883:3;6879:14;6864:29;;6826:73;;;;:::o;6905:96::-;6942:7;6971:24;6989:5;6971:24;:::i;:::-;6960:35;;6950:51;;;:::o;7007:126::-;7044:7;7084:42;7077:5;7073:54;7062:65;;7052:81;;;:::o;7139:77::-;7176:7;7205:5;7194:16;;7184:32;;;:::o;7222:156::-;7287:9;7320:52;7366:5;7320:52;:::i;:::-;7307:65;;7297:81;;;:::o;7384:128::-;7449:9;7482:24;7500:5;7482:24;:::i;:::-;7469:37;;7459:53;;;:::o;7518:152::-;7581:9;7614:50;7658:5;7614:50;:::i;:::-;7601:63;;7591:79;;;:::o;7676:126::-;7739:9;7772:24;7790:5;7772:24;:::i;:::-;7759:37;;7749:53;;;:::o;7808:307::-;7876:1;7886:113;7900:6;7897:1;7894:13;7886:113;;;7985:1;7980:3;7976:11;7970:18;7966:1;7961:3;7957:11;7950:39;7922:2;7919:1;7915:10;7910:15;;7886:113;;;8017:6;8014:1;8011:13;8008:2;;;8097:1;8088:6;8083:3;8079:16;8072:27;8008:2;7857:258;;;;:::o;8121:281::-;8204:27;8226:4;8204:27;:::i;:::-;8196:6;8192:40;8334:6;8322:10;8319:22;8298:18;8286:10;8283:34;8280:62;8277:2;;;8345:18;;:::i;:::-;8277:2;8385:10;8381:2;8374:22;8164:238;;;:::o;8408:180::-;8456:77;8453:1;8446:88;8553:4;8550:1;8543:15;8577:4;8574:1;8567:15;8594:102;8635:6;8686:2;8682:7;8677:2;8670:5;8666:14;8662:28;8652:38;;8642:54;;;:::o;8702:122::-;8775:24;8793:5;8775:24;:::i;:::-;8768:5;8765:35;8755:2;;8814:1;8811;8804:12;8755:2;8745:79;:::o;8830:122::-;8903:24;8921:5;8903:24;:::i;:::-;8896:5;8893:35;8883:2;;8942:1;8939;8932:12;8883:2;8873:79;:::o",
  "source": "pragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./Pool.sol\";\nimport \"./DaoToken.sol\";\nimport \"./Dao.sol\";\n\ncontract Factory {\n\n    address public initiator;  // Offchain initiator\n    address public owner;  // Will allow to setup offchain initiator\n    Pool public pool;\n\n    modifier ownerOnly {require(msg.sender == owner); _;}\n    modifier initiatorOnly {require(msg.sender == owner); _;}\n\n    event NewDao(string name, address indexed dao, address indexed dao_token);\n\n    constructor(Pool _pool) {\n        owner = msg.sender;\n        initiator = msg.sender;\n        pool = _pool;\n    }\n\n    function setup(address _new_initiator) public ownerOnly {\n        if (_new_initiator != address(0x0)) {\n            initiator = _new_initiator;\n        }\n    }\n\n    function new_dao(uint _shares_amount, uint _pool_id) public initiatorOnly {\n        //  Setting up the emission\n        (string memory party_name, string memory  ticker) = pool.get_pool_description(_pool_id);\n        IERC20 dao_token = new DaoToken(party_name, ticker, _shares_amount, address(pool));\n        //  Building the brand new DAO.\n        Dao dao = new Dao(party_name, dao_token, pool);\n        emit NewDao(party_name, address(dao), address(dao_token));\n        //  Sending tokens to Dao for distribution\n//        dao_token.transfer(address(dao), dao_token.totalSupply());\n        pool.distribute_dao_tokens(_pool_id, address(dao), dao_token);\n    }\n\n}\n",
  "sourcePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        2047
      ],
      "Dao": [
        604
      ],
      "DaoToken": [
        636
      ],
      "ERC20": [
        1788
      ],
      "Factory": [
        790
      ],
      "IERC165": [
        2059
      ],
      "IERC20": [
        1866
      ],
      "IERC20Metadata": [
        1891
      ],
      "IERC721": [
        2007
      ],
      "Pool": [
        1242
      ]
    },
    "id": 791,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 638,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 639,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 1867,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 2008,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 1243,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 642,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 637,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 605,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          604,
          636
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 790,
        "linearizedBaseContracts": [
          790
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 645,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 790,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 644,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 647,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 790,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 646,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 650,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 790,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1242",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 649,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 648,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1242,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1242,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1242",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 653,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 655,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 659,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 661,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 664,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 666,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 670,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 672,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 680,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 686,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 687,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 691,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 692,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 696,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1242",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 697,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1242",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1242",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 701,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1242",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 682,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 681,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1242,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1242,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1242",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 790,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 708,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 719,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 714,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 715,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 717,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 705,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 661,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 790,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "935:586:2",
              "statements": [
                {
                  "assignments": [
                    731,
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 731,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 730,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 736,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 734,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1065,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1866",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 740,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 739,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1866,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1866,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 753,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 745,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 746,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 747,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 750,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "1154:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1242",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1242",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1146:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 748,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1146:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$636_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 743,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 742,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 636,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 636,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$636",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$636",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:82:2"
                },
                {
                  "assignments": [
                    756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 756,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1214:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "1210:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$604",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 755,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 754,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 604,
                          "src": "1210:3:2"
                        },
                        "referencedDeclaration": 604,
                        "src": "1210:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$604",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 764,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1228:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 761,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1240:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 762,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1251:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      ],
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1220:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1866_$_t_contract$_Pool_$1242_$returns$_t_contract$_Dao_$604_$",
                        "typeString": "function (string memory,contract IERC20,contract Pool) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 758,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 757,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 604,
                          "src": "1224:3:2"
                        },
                        "referencedDeclaration": 604,
                        "src": "1224:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$604",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$604",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1210:46:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 766,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1278:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 769,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "1298:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1290:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 773,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "1312:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1866",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1866",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1304:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 771,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1304:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1304:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 765,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "1271:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "EmitStatement",
                  "src": "1266:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "1480:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "1498:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1490:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1490:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1490:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 785,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1504:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 777,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1453:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1228,
                      "src": "1453:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$1866_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20) external"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:61:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 789,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 727,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 672,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 790,
            "src": "861:660:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 791,
        "src": "207:1317:2",
        "usedErrors": []
      }
    ],
    "src": "0:1525:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        2047
      ],
      "Dao": [
        604
      ],
      "DaoToken": [
        636
      ],
      "ERC20": [
        1788
      ],
      "Factory": [
        790
      ],
      "IERC165": [
        2059
      ],
      "IERC20": [
        1866
      ],
      "IERC20Metadata": [
        1891
      ],
      "IERC721": [
        2007
      ],
      "Pool": [
        1242
      ]
    },
    "id": 791,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 638,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 639,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 1867,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 2008,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 1243,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 642,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 637,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 791,
        "sourceUnit": 605,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          604,
          636
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 790,
        "linearizedBaseContracts": [
          790
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 645,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 790,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 644,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 647,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 790,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 646,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 650,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 790,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1242",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 649,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 648,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1242,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1242,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1242",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 653,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 655,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 659,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 661,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 664,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 666,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 670,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 672,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 680,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 686,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 687,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 691,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 692,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 696,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1242",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 697,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1242",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1242",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 701,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1242",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 682,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 681,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1242,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1242,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1242",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 790,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 708,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 719,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 714,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 715,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 717,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 705,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 661,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 790,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "935:586:2",
              "statements": [
                {
                  "assignments": [
                    731,
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 731,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 730,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 736,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 734,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1065,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1866",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 740,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 739,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1866,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1866,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 753,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 745,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 746,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 747,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 750,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "1154:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1242",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1242",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1146:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 748,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1146:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$636_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 743,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 742,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 636,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 636,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$636",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$636",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:82:2"
                },
                {
                  "assignments": [
                    756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 756,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1214:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "1210:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$604",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 755,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 754,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 604,
                          "src": "1210:3:2"
                        },
                        "referencedDeclaration": 604,
                        "src": "1210:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$604",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 764,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1228:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 761,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1240:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 762,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1251:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      ],
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1220:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1866_$_t_contract$_Pool_$1242_$returns$_t_contract$_Dao_$604_$",
                        "typeString": "function (string memory,contract IERC20,contract Pool) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 758,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 757,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 604,
                          "src": "1224:3:2"
                        },
                        "referencedDeclaration": 604,
                        "src": "1224:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$604",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$604",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1210:46:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 766,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1278:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 769,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "1298:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1290:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 773,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "1312:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1866",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1866",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1304:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 771,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1304:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1304:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 765,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "1271:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "EmitStatement",
                  "src": "1266:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "1480:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "1498:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$604",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1490:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1490:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1490:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 785,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1504:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1866",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 777,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1453:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1242",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1228,
                      "src": "1453:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$1866_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20) external"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:61:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 789,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 727,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 672,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 790,
            "src": "861:660:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 791,
        "src": "207:1317:2",
        "usedErrors": []
      }
    ],
    "src": "0:1525:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x768418a615d3744a2F5FB6988021E7d4f2871808",
      "transactionHash": "0xa8500d9da01a1be2fe5f817026a9a2e914d0dda2a6f55a965425de64ae406d7c"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9F787Fb9d018f2419C1FD8D35236D8a29E343c49",
      "transactionHash": "0xe8443939789a907786edccec370e91a5767185a67f55fa84c1e708b1918961d8"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-26T08:33:36.189Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}