{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Pool",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao_token",
          "type": "address"
        }
      ],
      "name": "NewDao",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "initiator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_initiator",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pool_id",
          "type": "uint256"
        }
      ],
      "name": "new_dao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Pool\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao_token\",\"type\":\"address\"}],\"name\":\"NewDao\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"initiator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool_id\",\"type\":\"uint256\"}],\"name\":\"new_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_initiator\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol\":{\"keccak256\":\"0x8196984a900793574e0ad156afcda28990aecdd235f26e5bf3af205330d4a562\",\"urls\":[\"bzz-raw://60df3f72245db99a08659e7d40fe053e60b06c59c47de8d74f43a275fd8df9a2\",\"dweb:/ipfs/QmcuingaSUyvBYPxkhUvJN4DPUvmR2PKTXyXfTnb1TSn4a\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol\":{\"keccak256\":\"0x6b210d211ad3a2b187a1ee4d29bd24acba569c38388e35a48478b7d4c746665a\",\"urls\":[\"bzz-raw://f32b31736c53e73b1426b5a5a8a68bf81bf37783f54032d357515bbabf8a0b88\",\"dweb:/ipfs/QmR6JRA2avdVEWix7PmRUNcyA5ynkde5kAr4i3EfBfcreZ\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":{\"keccak256\":\"0xc7b61a9cc68bef185f5574e16d6b703fc7000e14f17049c4980ab099f05e0cd7\",\"urls\":[\"bzz-raw://07a8b48410fe357336df24448eaca6c6919ce724f8da57be0c47ecb0065d7c60\",\"dweb:/ipfs/QmRwX4TA1EZsYtMTVwDe4HcUWbDtxzSoqiUajR9dJUPkNn\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol\":{\"keccak256\":\"0x128fbd8ea0b838cf4bbc50b770c9245adfeaa69ea0065f49db23e50df0b29e2e\",\"urls\":[\"bzz-raw://ad6c99fb85b2d05121796cebf0c9dba81adce038aa36e1d907cde0ab1b62a1e8\",\"dweb:/ipfs/QmWBeHnU8MYLDxi9oS5fGLEdFx7p8L1qYJL2xhVW5zfTaA\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806316f0115b14620000635780635c39fcc1146200008557806366d3820314620000a75780638da5cb5b14620000c7578063e31dff1314620000e9575b600080fd5b6200006d62000109565b6040516200007c919062000692565b60405180910390f35b6200008f6200012f565b6040516200009e919062000675565b60405180910390f35b620000c56004803603810190620000bf919062000510565b62000153565b005b620000d162000227565b604051620000e0919062000675565b60405180910390f35b620001076004803603810190620001019190620005af565b6200024d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200022457806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002a857600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639215d96f846040518263ffffffff1660e01b815260040162000308919062000752565b60006040518083038186803b1580156200032157600080fd5b505afa15801562000336573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200036191906200053c565b915091506000828286604051620003789062000454565b620003869392919062000707565b604051809103906000f080158015620003a3573d6000803e3d6000fd5b50905060008382604051620003b89062000462565b620003c5929190620006d3565b604051809103906000f080158015620003e2573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87a2ae0205f28cf6777eb213e867569f69e687e4b090364233360729fb68392d86604051620004449190620006af565b60405180910390a3505050505050565b611c88806200095983390190565b61261f80620025e183390190565b600062000487620004818462000798565b6200076f565b905082815260208101848484011115620004a057600080fd5b620004ad84828562000878565b509392505050565b600081359050620004c68162000924565b92915050565b600082601f830112620004de57600080fd5b8151620004f084826020860162000470565b91505092915050565b6000813590506200050a816200093e565b92915050565b6000602082840312156200052357600080fd5b60006200053384828501620004b5565b91505092915050565b600080604083850312156200055057600080fd5b600083015167ffffffffffffffff8111156200056b57600080fd5b6200057985828601620004cc565b925050602083015167ffffffffffffffff8111156200059757600080fd5b620005a585828601620004cc565b9150509250929050565b60008060408385031215620005c357600080fd5b6000620005d385828601620004f9565b9250506020620005e685828601620004f9565b9150509250929050565b620005fb81620007ea565b82525050565b6200060c8162000828565b82525050565b6200061d8162000850565b82525050565b60006200063082620007ce565b6200063c8185620007d9565b93506200064e81856020860162000878565b620006598162000913565b840191505092915050565b6200066f816200081e565b82525050565b60006020820190506200068c6000830184620005f0565b92915050565b6000602082019050620006a9600083018462000612565b92915050565b60006020820190508181036000830152620006cb818462000623565b905092915050565b60006040820190508181036000830152620006ef818562000623565b905062000700602083018462000601565b9392505050565b6000606082019050818103600083015262000723818662000623565b9050818103602083015262000739818562000623565b90506200074a604083018462000664565b949350505050565b600060208201905062000769600083018462000664565b92915050565b60006200077b6200078e565b9050620007898282620008ae565b919050565b6000604051905090565b600067ffffffffffffffff821115620007b657620007b5620008e4565b5b620007c18262000913565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620007f782620007fe565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000835826200083c565b9050919050565b60006200084982620007fe565b9050919050565b60006200085d8262000864565b9050919050565b60006200087182620007fe565b9050919050565b60005b83811015620008985780820151818401526020810190506200087b565b83811115620008a8576000848401525b50505050565b620008b98262000913565b810181811067ffffffffffffffff82111715620008db57620008da620008e4565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200092f81620007ea565b81146200093b57600080fd5b50565b62000949816200081e565b81146200095557600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001c8838038062001c88833981810160405281019062000037919062000377565b82828160039080519060200190620000519291906200023e565b5080600490805190602001906200006a9291906200023e565b505050620000a93362000082620000b260201b60201c565b600a6200009091906200059e565b836200009d9190620006db565b620000bb60201b60201c565b505050620008e3565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001259062000437565b60405180910390fd5b62000142600083836200023460201b60201c565b8060026000828254620001569190620004e6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001ad9190620004e6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000214919062000459565b60405180910390a362000230600083836200023960201b60201c565b5050565b505050565b505050565b8280546200024c9062000789565b90600052602060002090601f016020900481019282620002705760008555620002bc565b82601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b5b80821115620002ea576000816000905550600101620002d0565b5090565b600062000305620002ff846200049f565b62000476565b9050828152602081018484840111156200031e57600080fd5b6200032b84828562000753565b509392505050565b600082601f8301126200034557600080fd5b815162000357848260208601620002ee565b91505092915050565b6000815190506200037181620008c9565b92915050565b6000806000606084860312156200038d57600080fd5b600084015167ffffffffffffffff811115620003a857600080fd5b620003b68682870162000333565b935050602084015167ffffffffffffffff811115620003d457600080fd5b620003e28682870162000333565b9250506040620003f58682870162000360565b9150509250925092565b60006200040e601f83620004d5565b91506200041b82620008a0565b602082019050919050565b62000431816200073c565b82525050565b600060208201905081810360008301526200045281620003ff565b9050919050565b600060208201905062000470600083018462000426565b92915050565b60006200048262000495565b9050620004908282620007bf565b919050565b6000604051905090565b600067ffffffffffffffff821115620004bd57620004bc62000853565b5b620004c88262000882565b9050602081019050919050565b600082825260208201905092915050565b6000620004f3826200073c565b915062000500836200073c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005385762000537620007f5565b5b828201905092915050565b6000808291508390505b600185111562000595578086048111156200056d576200056c620007f5565b5b60018516156200057d5780820291505b80810290506200058d8562000893565b94506200054d565b94509492505050565b6000620005ab826200073c565b9150620005b88362000746565b9250620005e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620005ef565b905092915050565b600082620006015760019050620006d4565b81620006115760009050620006d4565b81600181146200062a576002811462000635576200066b565b6001915050620006d4565b60ff8411156200064a5762000649620007f5565b5b8360020a915084821115620006645762000663620007f5565b5b50620006d4565b5060208310610133831016604e8410600b8410161715620006a55782820a9050838111156200069f576200069e620007f5565b5b620006d4565b620006b4848484600162000543565b92509050818404811115620006ce57620006cd620007f5565b5b81810290505b9392505050565b6000620006e8826200073c565b9150620006f5836200073c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620007315762000730620007f5565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b60005b838110156200077357808201518184015260208101905062000756565b8381111562000783576000848401525b50505050565b60006002820490506001821680620007a257607f821691505b60208210811415620007b957620007b862000824565b5b50919050565b620007ca8262000882565b810181811067ffffffffffffffff82111715620007ec57620007eb62000853565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620008d4816200073c565b8114620008e057600080fd5b50565b61139580620008f36000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea2646970667358221220546f57453c7afa0b850404e6ad550154cab9e638c3bb3f89cdd3748d5f2c158064736f6c6343000804003360806040523480156200001157600080fd5b506040516200261f3803806200261f8339818101604052810190620000379190620001d1565b81600190805190602001906200004f92919062000098565b50806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003fd565b828054620000a69062000308565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b60006200015f620001598462000254565b6200022b565b9050828152602081018484840111156200017857600080fd5b62000185848285620002d2565b509392505050565b6000815190506200019e81620003e3565b92915050565b600082601f830112620001b657600080fd5b8151620001c884826020860162000148565b91505092915050565b60008060408385031215620001e557600080fd5b600083015167ffffffffffffffff8111156200020057600080fd5b6200020e85828601620001a4565b925050602062000221858286016200018d565b9150509250929050565b6000620002376200024a565b90506200024582826200033e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002725762000271620003a3565b5b6200027d82620003d2565b9050602081019050919050565b60006200029782620002b2565b9050919050565b6000620002ab826200028a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002f2578082015181840152602081019050620002d5565b8381111562000302576000848401525b50505050565b600060028204905060018216806200032157607f821691505b6020821081141562000338576200033762000374565b5b50919050565b6200034982620003d2565b810181811067ffffffffffffffff821117156200036b576200036a620003a3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003ee816200029e565b8114620003fa57600080fd5b50565b612212806200040d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063379607f511610071578063379607f514610178578063528f9d5514610194578063688e1d31146101b2578063a694fc3a146101d0578063c9d27afe146101ec578063f8c0e00f14610208576100a9565b806306fdde03146100ae5780630f9e4fb5146100cc57806310b1939f146100e8578063150b7a021461011857806317eb2f0914610148575b600080fd5b6100b6610224565b6040516100c39190611bf6565b60405180910390f35b6100e660048036038101906100e19190611722565b6102b2565b005b61010260048036038101906100fd919061181e565b61062c565b60405161010f9190611b83565b60405180910390f35b610132600480360381019061012d91906116a2565b6107d0565b60405161013f9190611bc0565b60405180910390f35b610162600480360381019061015d919061181e565b6107e5565b60405161016f9190611ba5565b60405180910390f35b610192600480360381019061018d919061181e565b610835565b005b61019c610aa3565b6040516101a99190611c98565b60405180910390f35b6101ba610aa9565b6040516101c79190611bdb565b60405180910390f35b6101ea60048036038101906101e5919061181e565b610acd565b005b61020660048036038101906102019190611870565b610d37565b005b610222600480360381019061021d9190611787565b610f77565b005b6001805461023190611f77565b80601f016020809104026020016040519081016040528092919081815260200182805461025d90611f77565b80156102aa5780601f1061027f576101008083540402835291602001916102aa565b820191906000526020600020905b81548152906001019060200180831161028d57829003601f168201915b505050505081565b60001515600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035090611c58565b60405180910390fd5b6000811461050f5760008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016103b69190611c98565b60206040518083038186803b1580156103ce57600080fd5b505afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104069190611679565b73ffffffffffffffffffffffffffffffffffffffff16141561045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490611c78565b60405180910390fd5b600360010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050506105bc565b600360020160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505b6001600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b606060008214156106f9576003600101805480602002602001604051908101604052809291908181526020016000905b828210156106ee57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061065c565b5050505090506107cb565b60018214156107c4576003600201805480602002602001604051908101604052809291908181526020016000905b828210156107b957838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610727565b5050505090506107cb565b6060809150505b919050565b600063150b7a0260e01b905095945050505050565b6107ed611396565b60405180604001604052806006600085815260200190815260200160002060040154815260200160066000858152602001908152602001600020600501548152509050919050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109345760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108dc929190611b5a565b602060405180830381600087803b1580156108f657600080fd5b505af115801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e919061175e565b50610a9f565b818110156109ef5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610997929190611b5a565b602060405180830381600087803b1580156109b157600080fd5b505af11580156109c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e9919061175e565b50610a9e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a4a929190611b5a565b602060405180830381600087803b158015610a6457600080fd5b505af1158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c919061175e565b505b5b5050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610b29929190611afa565b60206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190611847565b1015610c2e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610bda929190611b5a565b602060405180830381600087803b158015610bf457600080fd5b505af1158015610c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c919061175e565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c8b93929190611b23565b602060405180830381600087803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd919061175e565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2d9190611dbc565b9250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d939190611adf565b60206040518083038186803b158015610dab57600080fd5b505afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611847565b1415610e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1b90611c18565b60405180910390fd5b600115158115151415610ea257600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600660008481526020019081526020016000206004016000828254610e969190611dbc565b92505081905550610f0f565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600660008481526020019081526020016000206005016000828254610f079190611dbc565b925050819055505b600060066000848152602001908152602001600020600501546006600085815260200190815260200160002060040154610f499190611dbc565b905060066000848152602001908152602001600020600601548110610f7257610f718361128f565b5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610fd39190611adf565b60206040518083038186803b158015610feb57600080fd5b505afa158015610fff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110239190611847565b1415611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b90611c38565b60405180910390fd5b6001600260008282546110779190611dbc565b9250508190555060006040518060e00160405280600060028111156110c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018581526020018481526020018381526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561115257600080fd5b505afa158015611166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118a9190611847565b60036111969190611e43565b6111a09190611e12565b81525090508060066000600254815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111561120c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101908051906020019061122d9291906113b8565b50604082015181600201908051906020019061124a9291906113b8565b50606082015181600301908051906020019061126792919061143e565b506080820151816004015560a0820151816005015560c0820151816006015590505050505050565b60066000828152602001908152602001600020600501546006600083815260200190815260200160002060040154111561132d5760016006600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611323577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550611393565b60026006600083815260200190815260200160002060000160006101000a81548160ff0219169083600281111561138d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6040518060400160405280600290602082028036833780820191505090505090565b8280546113c490611f77565b90600052602060002090601f0160209004810192826113e6576000855561142d565b82601f106113ff57805160ff191683800117855561142d565b8280016001018555821561142d579182015b8281111561142c578251825591602001919060010190611411565b5b50905061143a91906114c4565b5090565b82805461144a90611f77565b90600052602060002090601f01602090048101928261146c57600085556114b3565b82601f1061148557805160ff19168380011785556114b3565b828001600101855582156114b3579182015b828111156114b2578251825591602001919060010190611497565b5b5090506114c091906114c4565b5090565b5b808211156114dd5760008160009055506001016114c5565b5090565b60006114f46114ef84611cd8565b611cb3565b90508281526020810184848401111561150c57600080fd5b611517848285611f35565b509392505050565b600061153261152d84611d09565b611cb3565b90508281526020810184848401111561154a57600080fd5b611555848285611f35565b509392505050565b60008135905061156c81612197565b92915050565b60008151905061158181612197565b92915050565b600081359050611596816121ae565b92915050565b6000815190506115ab816121ae565b92915050565b60008083601f8401126115c357600080fd5b8235905067ffffffffffffffff8111156115dc57600080fd5b6020830191508360018202830111156115f457600080fd5b9250929050565b600082601f83011261160c57600080fd5b813561161c8482602086016114e1565b91505092915050565b600082601f83011261163657600080fd5b813561164684826020860161151f565b91505092915050565b60008135905061165e816121c5565b92915050565b600081519050611673816121c5565b92915050565b60006020828403121561168b57600080fd5b600061169984828501611572565b91505092915050565b6000806000806000608086880312156116ba57600080fd5b60006116c88882890161155d565b95505060206116d98882890161155d565b94505060406116ea8882890161164f565b935050606086013567ffffffffffffffff81111561170757600080fd5b611713888289016115b1565b92509250509295509295909350565b6000806040838503121561173557600080fd5b60006117438582860161155d565b92505060206117548582860161164f565b9150509250929050565b60006020828403121561177057600080fd5b600061177e8482850161159c565b91505092915050565b60008060006060848603121561179c57600080fd5b600084013567ffffffffffffffff8111156117b657600080fd5b6117c286828701611625565b935050602084013567ffffffffffffffff8111156117df57600080fd5b6117eb86828701611625565b925050604084013567ffffffffffffffff81111561180857600080fd5b611814868287016115fb565b9150509250925092565b60006020828403121561183057600080fd5b600061183e8482850161164f565b91505092915050565b60006020828403121561185957600080fd5b600061186784828501611664565b91505092915050565b6000806040838503121561188357600080fd5b60006118918582860161164f565b92505060206118a285828601611587565b9150509250929050565b60006118b88383611a92565b60408301905092915050565b60006118d08383611ac1565b60208301905092915050565b6118e581611e9d565b82525050565b6118f481611e9d565b82525050565b600061190582611d54565b61190f8185611d8f565b935061191a83611d3a565b8060005b8381101561194b57815161193288826118ac565b975061193d83611d75565b92505060018101905061191e565b5085935050505092915050565b61196181611d5f565b61196b8184611da0565b925061197682611d4a565b8060005b838110156119a757815161198e87826118c4565b965061199983611d82565b92505060018101905061197a565b505050505050565b6119b881611ebb565b82525050565b6119c781611f11565b82525050565b60006119d882611d6a565b6119e28185611dab565b93506119f2818560208601611f44565b6119fb81612096565b840191505092915050565b6000611a13602b83611dab565b9150611a1e826120a7565b604082019050919050565b6000611a36603c83611dab565b9150611a41826120f6565b604082019050919050565b6000611a59601c83611dab565b9150611a6482612145565b602082019050919050565b6000611a7c601783611dab565b9150611a878261216e565b602082019050919050565b604082016000820151611aa860008501826118dc565b506020820151611abb6020850182611ac1565b50505050565b611aca81611f07565b82525050565b611ad981611f07565b82525050565b6000602082019050611af460008301846118eb565b92915050565b6000604082019050611b0f60008301856118eb565b611b1c60208301846118eb565b9392505050565b6000606082019050611b3860008301866118eb565b611b4560208301856118eb565b611b526040830184611ad0565b949350505050565b6000604082019050611b6f60008301856118eb565b611b7c6020830184611ad0565b9392505050565b60006020820190508181036000830152611b9d81846118fa565b905092915050565b6000604082019050611bba6000830184611958565b92915050565b6000602082019050611bd560008301846119af565b92915050565b6000602082019050611bf060008301846119be565b92915050565b60006020820190508181036000830152611c1081846119cd565b905092915050565b60006020820190508181036000830152611c3181611a06565b9050919050565b60006020820190508181036000830152611c5181611a29565b9050919050565b60006020820190508181036000830152611c7181611a4c565b9050919050565b60006020820190508181036000830152611c9181611a6f565b9050919050565b6000602082019050611cad6000830184611ad0565b92915050565b6000611cbd611cce565b9050611cc98282611fa9565b919050565b6000604051905090565b600067ffffffffffffffff821115611cf357611cf2612067565b5b611cfc82612096565b9050602081019050919050565b600067ffffffffffffffff821115611d2457611d23612067565b5b611d2d82612096565b9050602081019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611dc782611f07565b9150611dd283611f07565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e0757611e06611fda565b5b828201905092915050565b6000611e1d82611f07565b9150611e2883611f07565b925082611e3857611e37612009565b5b828204905092915050565b6000611e4e82611f07565b9150611e5983611f07565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e9257611e91611fda565b5b828202905092915050565b6000611ea882611ee7565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611f1c82611f23565b9050919050565b6000611f2e82611ee7565b9050919050565b82818337600083830152505050565b60005b83811015611f62578082015181840152602081019050611f47565b83811115611f71576000848401525b50505050565b60006002820490506001821680611f8f57607f821691505b60208210811415611fa357611fa2612038565b5b50919050565b611fb282612096565b810181811067ffffffffffffffff82111715611fd157611fd0612067565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f20766f7465000000000000000000000000000000000000000000602082015250565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f206372656174652061206e65772070726f706f73616c00000000602082015250565b7f5468697320617373657420697320616c7265616479206c6f636b656400000000600082015250565b7f546869732061737365742069736e2774206c6f636b6564000000000000000000600082015250565b6121a081611e9d565b81146121ab57600080fd5b50565b6121b781611eaf565b81146121c257600080fd5b50565b6121ce81611f07565b81146121d957600080fd5b5056fea2646970667358221220c5e3d9d515dc0770a6844b904a7cf49cd518b11b6abc7594d8886234dc479c6f64736f6c63430008040033a26469706673582212209b4dbd79309c6d26d3b0ae94d0d2e7e45e105dbdbeb249b4fd63a4d457f0ca4264736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:998:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:93:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "93:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "108:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "164:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Pool_$1050",
                      "nodeType": "YulIdentifier",
                      "src": "124:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "124:46:11"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Pool_$1050_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "69:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "77:5:11",
                "type": ""
              }
            ],
            "src": "7:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "272:220:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "318:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "327:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "320:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "320:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "320:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "293:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "302:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "289:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "289:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "314:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "285:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "285:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "282:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "344:141:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "359:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "373:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "363:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "388:87:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "447:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "458:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "443:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "443:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "467:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Pool_$1050_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "398:44:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "398:77:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "388:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Pool_$1050_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:11",
                "type": ""
              }
            ],
            "src": "182:310:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "543:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "553:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "582:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "564:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "553:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "525:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "535:7:11",
                "type": ""
              }
            ],
            "src": "498:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "658:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "668:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "697:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "679:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "668:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Pool_$1050",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "640:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "650:7:11",
                "type": ""
              }
            ],
            "src": "600:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "760:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "770:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "785:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "792:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "770:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "752:7:11",
                "type": ""
              }
            ],
            "src": "715:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "903:92:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "926:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "964:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Pool_$1050",
                              "nodeType": "YulIdentifier",
                              "src": "933:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "933:37:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "923:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:48:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:56:11"
                  },
                  "nodeType": "YulIf",
                  "src": "913:2:11"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Pool_$1050",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "896:5:11",
                "type": ""
              }
            ],
            "src": "847:148:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Pool_$1050_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Pool_$1050(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Pool_$1050_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Pool_$1050_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Pool_$1050(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Pool_$1050(value) {\n        if iszero(eq(value, cleanup_t_contract$_Pool_$1050(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8230:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:259:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "137:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "121:15:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "203:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "210:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "196:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "248:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "230:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "303:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "272:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "268:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "286:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "265:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "338:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "343:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "348:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "316:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:39:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:11",
                "type": ""
              }
            ],
            "src": "7:354:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "451:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "438:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "429:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "494:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "467:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "467:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "397:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "405:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "413:5:11",
                "type": ""
              }
            ],
            "src": "367:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "599:215:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "648:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "657:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "660:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "650:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "650:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "650:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "627:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "635:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "623:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "623:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "642:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "619:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "609:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "673:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "687:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "687:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "677:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "709:99:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "789:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "796:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "804:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "718:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:90:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "709:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "577:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "585:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "593:5:11",
                "type": ""
              }
            ],
            "src": "526:288:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "872:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "882:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "904:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "891:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "882:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "947:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "920:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "920:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "850:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "858:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "866:5:11",
                "type": ""
              }
            ],
            "src": "820:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1031:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1077:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1052:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1061:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1048:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1073:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1041:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1103:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1118:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1122:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1147:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1182:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1193:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1178:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1178:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1157:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1147:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1012:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1024:6:11",
                "type": ""
              }
            ],
            "src": "965:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1347:538:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1393:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1402:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1395:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1395:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1368:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1364:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1364:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1389:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1357:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:224:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:38:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1458:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1469:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1454:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1454:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1448:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1448:24:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1519:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1528:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1531:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1521:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1521:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1521:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1488:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1488:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1485:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1549:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1605:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1616:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1601:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1601:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1559:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1559:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1549:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1653:225:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1668:39:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1692:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1703:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1688:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1688:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1682:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:25:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1672:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1754:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1763:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1766:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1756:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1756:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1756:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1726:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1734:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1720:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1784:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1840:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1851:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1836:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1836:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1860:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1794:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1784:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1309:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1320:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1332:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1340:6:11",
                "type": ""
              }
            ],
            "src": "1233:652:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1974:324:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2020:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2029:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2032:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2022:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2022:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2022:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1995:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2004:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1991:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1991:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2016:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1987:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1984:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2046:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2061:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2065:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2090:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2125:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2136:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2121:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2121:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2145:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2100:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2100:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2090:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2173:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2188:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2202:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2192:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2218:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2253:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2264:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2249:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2249:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2273:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2228:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2218:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1936:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1947:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1959:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1967:6:11",
                "type": ""
              }
            ],
            "src": "1891:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2369:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2386:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2409:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2391:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2391:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2379:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2379:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2379:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2357:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2364:3:11",
                "type": ""
              }
            ],
            "src": "2304:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:81:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2525:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2576:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1674_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2530:45:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:65:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1674_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2496:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2503:3:11",
                "type": ""
              }
            ],
            "src": "2428:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:79:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2690:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2739:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Pool_$1050_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2695:43:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:50:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2683:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2683:63:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Pool_$1050_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2661:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2668:3:11",
                "type": ""
              }
            ],
            "src": "2595:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:272:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2860:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2907:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2874:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2874:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2864:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:78:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2988:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2993:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2929:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:71:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3035:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3042:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3049:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3054:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3009:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3009:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3070:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3081:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3108:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3086:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3077:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3070:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2831:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2838:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2846:3:11",
                "type": ""
              }
            ],
            "src": "2758:364:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3193:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3210:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3233:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3215:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3203:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3203:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3203:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3181:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3188:3:11",
                "type": ""
              }
            ],
            "src": "3128:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3350:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3360:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3372:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3383:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3368:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3360:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3440:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3453:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3464:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3396:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3396:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3396:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3322:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3334:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3345:4:11",
                "type": ""
              }
            ],
            "src": "3252:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:137:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3601:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3613:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3624:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3609:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3601:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3694:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3707:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3718:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3703:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3703:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$1050_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3637:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:84:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:84:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Pool_$1050__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3563:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3575:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3586:4:11",
                "type": ""
              }
            ],
            "src": "3480:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3852:195:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3862:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3874:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3885:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3870:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3870:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3862:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3928:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3954:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4026:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4035:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3962:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3954:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3824:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3836:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3847:4:11",
                "type": ""
              }
            ],
            "src": "3734:313:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4214:292:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4224:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4236:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4247:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4232:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4232:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4224:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4271:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4282:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4267:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4267:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4290:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4296:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4286:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4286:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4260:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4260:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4316:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4388:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4397:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4324:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4324:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4316:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4471:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4484:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4495:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4480:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4480:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1674_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4412:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4412:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4412:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1674__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4178:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4190:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4198:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4209:4:11",
                "type": ""
              }
            ],
            "src": "4053:453:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4706:430:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4716:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4728:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4739:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4724:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4724:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4716:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4763:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4774:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4759:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4759:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4782:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4788:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4778:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4778:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4752:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4752:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4752:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4808:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4880:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4889:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4816:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4816:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4808:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4915:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4926:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4911:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4911:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4935:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4941:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4931:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4931:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4904:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4904:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4904:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4961:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5033:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5042:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4969:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4961:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5101:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5114:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5125:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5110:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5110:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5057:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5057:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5057:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4662:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4674:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4682:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4690:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4701:4:11",
                "type": ""
              }
            ],
            "src": "4512:624:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5240:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5250:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5262:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5273:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5258:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5258:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5250:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5330:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5343:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5354:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5339:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5339:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5286:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5286:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5286:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5212:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5224:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5235:4:11",
                "type": ""
              }
            ],
            "src": "5142:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5411:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5421:30:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "5431:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5431:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5421:6:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5480:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5488:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "5460:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5460:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5460:33:11"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5395:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5404:6:11",
                "type": ""
              }
            ],
            "src": "5370:129:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5545:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5555:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5571:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5565:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5565:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5555:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5538:6:11",
                "type": ""
              }
            ],
            "src": "5505:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5653:241:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5758:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5760:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5760:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5760:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5730:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5738:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5727:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5727:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5724:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5790:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5820:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "5798:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5798:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5790:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5864:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5876:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5882:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5872:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5872:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5864:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5637:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5648:4:11",
                "type": ""
              }
            ],
            "src": "5586:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5959:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5970:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5986:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5980:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5980:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5970:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5942:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5952:6:11",
                "type": ""
              }
            ],
            "src": "5900:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6101:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6118:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6123:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6111:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6111:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6111:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6139:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6158:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6163:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6154:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6139:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6073:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6078:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6089:11:11",
                "type": ""
              }
            ],
            "src": "6005:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6225:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6235:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6264:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6246:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6246:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6235:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6207:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6217:7:11",
                "type": ""
              }
            ],
            "src": "6180:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6327:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6337:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6352:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6359:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6348:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6348:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6337:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6309:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6319:7:11",
                "type": ""
              }
            ],
            "src": "6282:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6459:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6469:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6480:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6469:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6441:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6451:7:11",
                "type": ""
              }
            ],
            "src": "6414:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6572:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6582:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6641:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1674_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6595:45:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6595:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6582:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1674_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6552:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6562:9:11",
                "type": ""
              }
            ],
            "src": "6497:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6734:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6744:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6775:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6757:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6757:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6744:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1674_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6714:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6724:9:11",
                "type": ""
              }
            ],
            "src": "6659:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6866:79:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6876:63:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6933:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Pool_$1050_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6889:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6876:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1050_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6846:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6856:9:11",
                "type": ""
              }
            ],
            "src": "6793:152:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7024:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7034:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7065:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7047:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7047:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7034:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1050_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7004:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7014:9:11",
                "type": ""
              }
            ],
            "src": "6951:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7132:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7142:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7151:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7146:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7211:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7236:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7241:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7232:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7232:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7255:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7260:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7251:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7251:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7245:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7245:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7225:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7225:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7225:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7172:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7175:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7169:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7183:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7185:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7194:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7197:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7190:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7190:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7185:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7165:3:11",
                    "statements": []
                  },
                  "src": "7161:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7308:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7358:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7363:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7354:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7354:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7372:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7347:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7347:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7347:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7289:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7292:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7286:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7286:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7283:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7114:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7119:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7124:6:11",
                "type": ""
              }
            ],
            "src": "7083:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7439:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7449:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7471:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "7501:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7479:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7479:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7467:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7467:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7453:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7618:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7620:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7620:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7620:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7561:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7573:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7558:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7558:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7597:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7609:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7594:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7594:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7555:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7555:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7552:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7656:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7660:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7649:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7649:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7649:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7425:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7433:4:11",
                "type": ""
              }
            ],
            "src": "7396:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7711:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7728:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7731:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7721:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7721:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7721:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7825:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7828:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7818:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7818:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7818:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7849:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7852:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7842:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7842:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7842:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7683:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7917:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7927:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7945:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7952:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7941:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7941:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7961:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7957:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7957:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7937:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7937:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "7927:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7900:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "7910:6:11",
                "type": ""
              }
            ],
            "src": "7869:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8020:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8077:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8086:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8089:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8079:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8079:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8079:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8043:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8068:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8050:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8050:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8040:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8040:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8033:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8033:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8030:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8013:5:11",
                "type": ""
              }
            ],
            "src": "7977:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8148:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8205:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8214:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8217:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8207:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8207:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8207:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8171:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8196:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8178:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8178:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8168:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8168:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8161:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8161:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8158:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8141:5:11",
                "type": ""
              }
            ],
            "src": "8105:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1674_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1674_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Pool_$1050_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Pool_$1050_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Pool_$1050__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Pool_$1050_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1674__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_IERC20_$1674_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$1674_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1674_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1674_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1050_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Pool_$1050_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1050_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "207:1284:2:-:0;;;577:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;619:10;611:5;;:18;;;;;;;;;;;;;;;;;;651:10;639:9;;:22;;;;;;;;;;;;;;;;;;678:5;671:4;;:12;;;;;;;;;;;;;;;;;;577:113;207:1284;;7:169:11;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:310::-;265:6;314:2;302:9;293:7;289:23;285:32;282:2;;;330:1;327;320:12;282:2;373:1;398:77;467:7;458:6;447:9;443:22;398:77;:::i;:::-;388:87;;344:141;272:220;;;;:::o;498:96::-;535:7;564:24;582:5;564:24;:::i;:::-;553:35;;543:51;;;:::o;600:109::-;650:7;679:24;697:5;679:24;:::i;:::-;668:35;;658:51;;;:::o;715:126::-;752:7;792:42;785:5;781:54;770:65;;760:81;;;:::o;847:148::-;933:37;964:5;933:37;:::i;:::-;926:5;923:48;913:2;;985:1;982;975:12;913:2;903:92;:::o;207:1284:2:-;;;;;;;",
  "deployedSourceMap": "207:1284:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;284:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;861:627;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;353:16;;;;;;;;;;;;;:::o;231:24::-;;;;;;;;;;;;:::o;696:159::-;418:5;;;;;;;;;;;404:19;;:10;:19;;;396:28;;;;;;792:3:::1;766:30;;:14;:30;;;762:87;;824:14;812:9;::::0;:26:::1;;;;;;;;;;;;;;;;;;762:87;696:159:::0;:::o;284:20::-;;;;;;;;;;;;;:::o;861:627::-;480:5;;;;;;;;;;;466:19;;:10;:19;;;458:28;;;;;;982:24:::1;1008:21:::0;1033:4:::1;;;;;;;;;;;:25;;;1059:8;1033:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:87;;;;1078:16;1110:10;1122:6;1130:14;1097:48;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1078:67;;1194:7;1212:10;1224:9;1204:30;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1194:40;;1290:9;1249:52;;1276:3;1249:52;;;1256:10;1249:52;;;;;;:::i;:::-;;;;;;;;488:1;;;;861:627:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:354:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:139::-;413:5;451:6;438:20;429:29;;467:33;494:5;467:33;:::i;:::-;419:87;;;;:::o;526:288::-;593:5;642:3;635:4;627:6;623:17;619:27;609:2;;660:1;657;650:12;609:2;693:6;687:13;718:90;804:3;796:6;789:4;781:6;777:17;718:90;:::i;:::-;709:99;;599:215;;;;;:::o;820:139::-;866:5;904:6;891:20;882:29;;920:33;947:5;920:33;:::i;:::-;872:87;;;;:::o;965:262::-;1024:6;1073:2;1061:9;1052:7;1048:23;1044:32;1041:2;;;1089:1;1086;1079:12;1041:2;1132:1;1157:53;1202:7;1193:6;1182:9;1178:22;1157:53;:::i;:::-;1147:63;;1103:117;1031:196;;;;:::o;1233:652::-;1332:6;1340;1389:2;1377:9;1368:7;1364:23;1360:32;1357:2;;;1405:1;1402;1395:12;1357:2;1469:1;1458:9;1454:17;1448:24;1499:18;1491:6;1488:30;1485:2;;;1531:1;1528;1521:12;1485:2;1559:74;1625:7;1616:6;1605:9;1601:22;1559:74;:::i;:::-;1549:84;;1419:224;1703:2;1692:9;1688:18;1682:25;1734:18;1726:6;1723:30;1720:2;;;1766:1;1763;1756:12;1720:2;1794:74;1860:7;1851:6;1840:9;1836:22;1794:74;:::i;:::-;1784:84;;1653:225;1347:538;;;;;:::o;1891:407::-;1959:6;1967;2016:2;2004:9;1995:7;1991:23;1987:32;1984:2;;;2032:1;2029;2022:12;1984:2;2075:1;2100:53;2145:7;2136:6;2125:9;2121:22;2100:53;:::i;:::-;2090:63;;2046:117;2202:2;2228:53;2273:7;2264:6;2253:9;2249:22;2228:53;:::i;:::-;2218:63;;2173:118;1974:324;;;;;:::o;2304:118::-;2391:24;2409:5;2391:24;:::i;:::-;2386:3;2379:37;2369:53;;:::o;2428:161::-;2530:52;2576:5;2530:52;:::i;:::-;2525:3;2518:65;2508:81;;:::o;2595:157::-;2695:50;2739:5;2695:50;:::i;:::-;2690:3;2683:63;2673:79;;:::o;2758:364::-;2846:3;2874:39;2907:5;2874:39;:::i;:::-;2929:71;2993:6;2988:3;2929:71;:::i;:::-;2922:78;;3009:52;3054:6;3049:3;3042:4;3035:5;3031:16;3009:52;:::i;:::-;3086:29;3108:6;3086:29;:::i;:::-;3081:3;3077:39;3070:46;;2850:272;;;;;:::o;3128:118::-;3215:24;3233:5;3215:24;:::i;:::-;3210:3;3203:37;3193:53;;:::o;3252:222::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3396:71;3464:1;3453:9;3449:17;3440:6;3396:71;:::i;:::-;3350:124;;;;:::o;3480:248::-;3586:4;3624:2;3613:9;3609:18;3601:26;;3637:84;3718:1;3707:9;3703:17;3694:6;3637:84;:::i;:::-;3591:137;;;;:::o;3734:313::-;3847:4;3885:2;3874:9;3870:18;3862:26;;3934:9;3928:4;3924:20;3920:1;3909:9;3905:17;3898:47;3962:78;4035:4;4026:6;3962:78;:::i;:::-;3954:86;;3852:195;;;;:::o;4053:453::-;4209:4;4247:2;4236:9;4232:18;4224:26;;4296:9;4290:4;4286:20;4282:1;4271:9;4267:17;4260:47;4324:78;4397:4;4388:6;4324:78;:::i;:::-;4316:86;;4412:87;4495:2;4484:9;4480:18;4471:6;4412:87;:::i;:::-;4214:292;;;;;:::o;4512:624::-;4701:4;4739:2;4728:9;4724:18;4716:26;;4788:9;4782:4;4778:20;4774:1;4763:9;4759:17;4752:47;4816:78;4889:4;4880:6;4816:78;:::i;:::-;4808:86;;4941:9;4935:4;4931:20;4926:2;4915:9;4911:18;4904:48;4969:78;5042:4;5033:6;4969:78;:::i;:::-;4961:86;;5057:72;5125:2;5114:9;5110:18;5101:6;5057:72;:::i;:::-;4706:430;;;;;;:::o;5142:222::-;5235:4;5273:2;5262:9;5258:18;5250:26;;5286:71;5354:1;5343:9;5339:17;5330:6;5286:71;:::i;:::-;5240:124;;;;:::o;5370:129::-;5404:6;5431:20;;:::i;:::-;5421:30;;5460:33;5488:4;5480:6;5460:33;:::i;:::-;5411:88;;;:::o;5505:75::-;5538:6;5571:2;5565:9;5555:19;;5545:35;:::o;5586:308::-;5648:4;5738:18;5730:6;5727:30;5724:2;;;5760:18;;:::i;:::-;5724:2;5798:29;5820:6;5798:29;:::i;:::-;5790:37;;5882:4;5876;5872:15;5864:23;;5653:241;;;:::o;5900:99::-;5952:6;5986:5;5980:12;5970:22;;5959:40;;;:::o;6005:169::-;6089:11;6123:6;6118:3;6111:19;6163:4;6158:3;6154:14;6139:29;;6101:73;;;;:::o;6180:96::-;6217:7;6246:24;6264:5;6246:24;:::i;:::-;6235:35;;6225:51;;;:::o;6282:126::-;6319:7;6359:42;6352:5;6348:54;6337:65;;6327:81;;;:::o;6414:77::-;6451:7;6480:5;6469:16;;6459:32;;;:::o;6497:156::-;6562:9;6595:52;6641:5;6595:52;:::i;:::-;6582:65;;6572:81;;;:::o;6659:128::-;6724:9;6757:24;6775:5;6757:24;:::i;:::-;6744:37;;6734:53;;;:::o;6793:152::-;6856:9;6889:50;6933:5;6889:50;:::i;:::-;6876:63;;6866:79;;;:::o;6951:126::-;7014:9;7047:24;7065:5;7047:24;:::i;:::-;7034:37;;7024:53;;;:::o;7083:307::-;7151:1;7161:113;7175:6;7172:1;7169:13;7161:113;;;7260:1;7255:3;7251:11;7245:18;7241:1;7236:3;7232:11;7225:39;7197:2;7194:1;7190:10;7185:15;;7161:113;;;7292:6;7289:1;7286:13;7283:2;;;7372:1;7363:6;7358:3;7354:16;7347:27;7283:2;7132:258;;;;:::o;7396:281::-;7479:27;7501:4;7479:27;:::i;:::-;7471:6;7467:40;7609:6;7597:10;7594:22;7573:18;7561:10;7558:34;7555:62;7552:2;;;7620:18;;:::i;:::-;7552:2;7660:10;7656:2;7649:22;7439:238;;;:::o;7683:180::-;7731:77;7728:1;7721:88;7828:4;7825:1;7818:15;7852:4;7849:1;7842:15;7869:102;7910:6;7961:2;7957:7;7952:2;7945:5;7941:14;7937:28;7927:38;;7917:54;;;:::o;7977:122::-;8050:24;8068:5;8050:24;:::i;:::-;8043:5;8040:35;8030:2;;8089:1;8086;8079:12;8030:2;8020:79;:::o;8105:122::-;8178:24;8196:5;8178:24;:::i;:::-;8171:5;8168:35;8158:2;;8217:1;8214;8207:12;8158:2;8148:79;:::o",
  "source": "pragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./Pool.sol\";\nimport \"./DaoToken.sol\";\nimport \"./Dao.sol\";\n\ncontract Factory {\n\n    address public initiator;  // Offchain initiator\n    address public owner;  // Will allow to setup offchain initiator\n    Pool public pool;\n\n    modifier ownerOnly {require(msg.sender == owner); _;}\n    modifier initiatorOnly {require(msg.sender == owner); _;}\n\n    event NewDao(string name, address indexed dao, address indexed dao_token);\n\n    constructor(Pool _pool) {\n        owner = msg.sender;\n        initiator = msg.sender;\n        pool = _pool;\n    }\n\n    function setup(address _new_initiator) public ownerOnly {\n        if (_new_initiator != address(0x0)) {\n            initiator = _new_initiator;\n        }\n    }\n\n    function new_dao(uint _shares_amount, uint _pool_id) public initiatorOnly {\n        //  Setting up the emission\n        (string memory party_name, string memory  ticker) = pool.get_pool_description(_pool_id);\n        IERC20 dao_token = new DaoToken(party_name, ticker, _shares_amount);\n        //  Building the brand new DAO\n        Dao dao = new Dao(party_name, dao_token);\n        emit NewDao(party_name, address(dao), address(dao_token));\n        //  Sending tokens to Dao for distribution\n//        dao_token.transfer(address(pool), dao_token.totalSupply());\n//        pool.distribute_dao_tokens(_pool_id, dao_token);\n    }\n\n}\n",
  "sourcePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1855
      ],
      "Dao": [
        487
      ],
      "DaoToken": [
        518
      ],
      "ERC20": [
        1596
      ],
      "Factory": [
        656
      ],
      "IERC165": [
        1867
      ],
      "IERC20": [
        1674
      ],
      "IERC20Metadata": [
        1699
      ],
      "IERC721": [
        1815
      ],
      "IERC721Receiver": [
        1833
      ],
      "Pool": [
        1050
      ]
    },
    "id": 657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 520,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 521,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1675,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 522,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1816,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 523,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1051,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 524,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 519,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 525,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 488,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          487,
          518
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 656,
        "linearizedBaseContracts": [
          656
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 527,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 526,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 529,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 528,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 532,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1050",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 531,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 530,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1050,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1050,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1050",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 535,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 537,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 541,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 543,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 546,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 548,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 552,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 554,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 562,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 568,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 569,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 573,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 574,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 578,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1050",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 579,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1050",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1050",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 583,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1050",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 564,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 563,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1050,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1050,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1050",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 656,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 590,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 601,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 600,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 596,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 597,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 599,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 587,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 543,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 656,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "935:553:2",
              "statements": [
                {
                  "assignments": [
                    613,
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 618,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 616,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1050",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 924,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 623,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1674",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 621,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1674,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1674,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1674",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 631,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 628,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 629,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_DaoToken_$518_$",
                        "typeString": "function (string memory,string memory,uint256) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 625,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 624,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 518,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 518,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$518",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$518",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:67:2"
                },
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1198:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "1194:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$487",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 633,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 632,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 487,
                          "src": "1194:3:2"
                        },
                        "referencedDeclaration": 487,
                        "src": "1194:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$487",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 641,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 638,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "1212:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 639,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "1224:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1674",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1674",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1204:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1674_$returns$_t_contract$_Dao_$487_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 636,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 635,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 487,
                          "src": "1208:3:2"
                        },
                        "referencedDeclaration": 487,
                        "src": "1208:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$487",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$487",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1194:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 643,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "1256:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 646,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "1276:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$487",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$487",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1268:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1268:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1268:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 650,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "1290:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1674",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1674",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1282:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 648,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1282:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1282:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 642,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "1249:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "1244:57:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 610,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 609,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 554,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 656,
            "src": "861:627:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 657,
        "src": "207:1284:2",
        "usedErrors": []
      }
    ],
    "src": "0:1492:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1855
      ],
      "Dao": [
        487
      ],
      "DaoToken": [
        518
      ],
      "ERC20": [
        1596
      ],
      "Factory": [
        656
      ],
      "IERC165": [
        1867
      ],
      "IERC20": [
        1674
      ],
      "IERC20Metadata": [
        1699
      ],
      "IERC721": [
        1815
      ],
      "IERC721Receiver": [
        1833
      ],
      "Pool": [
        1050
      ]
    },
    "id": 657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 520,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 521,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1675,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 522,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1816,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 523,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1051,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 524,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 519,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 525,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 488,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          487,
          518
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 656,
        "linearizedBaseContracts": [
          656
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 527,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 526,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 529,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 528,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 532,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1050",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 531,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 530,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1050,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1050,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1050",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 535,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 537,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 541,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 543,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 546,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 548,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 552,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 554,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 562,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 568,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 569,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 573,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 574,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 578,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1050",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 579,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1050",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1050",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 583,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1050",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 564,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 563,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1050,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1050,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1050",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 656,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 590,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 601,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 600,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 596,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 597,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 599,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 587,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 543,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 656,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "935:553:2",
              "statements": [
                {
                  "assignments": [
                    613,
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 618,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 616,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1050",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 924,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 623,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1674",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 621,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1674,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1674,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1674",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 631,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 628,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 629,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_DaoToken_$518_$",
                        "typeString": "function (string memory,string memory,uint256) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 625,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 624,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 518,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 518,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$518",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$518",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:67:2"
                },
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1198:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "1194:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$487",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 633,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 632,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 487,
                          "src": "1194:3:2"
                        },
                        "referencedDeclaration": 487,
                        "src": "1194:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$487",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 641,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 638,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "1212:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 639,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "1224:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1674",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1674",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1204:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1674_$returns$_t_contract$_Dao_$487_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 636,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 635,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 487,
                          "src": "1208:3:2"
                        },
                        "referencedDeclaration": 487,
                        "src": "1208:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$487",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$487",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1194:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 643,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "1256:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 646,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "1276:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$487",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$487",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1268:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1268:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1268:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 650,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "1290:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1674",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1674",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1282:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 648,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1282:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1282:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 642,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "1249:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "1244:57:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 610,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 609,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 554,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 656,
            "src": "861:627:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 657,
        "src": "207:1284:2",
        "usedErrors": []
      }
    ],
    "src": "0:1492:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9F787Fb9d018f2419C1FD8D35236D8a29E343c49",
      "transactionHash": "0xe8443939789a907786edccec370e91a5767185a67f55fa84c1e708b1918961d8"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-26T04:44:50.201Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}