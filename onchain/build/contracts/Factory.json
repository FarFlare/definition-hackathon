{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Pool",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao_token",
          "type": "address"
        }
      ],
      "name": "NewDao",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "initiator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_initiator",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pool_id",
          "type": "uint256"
        }
      ],
      "name": "new_dao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Pool\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao_token\",\"type\":\"address\"}],\"name\":\"NewDao\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"initiator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool_id\",\"type\":\"uint256\"}],\"name\":\"new_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_initiator\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol\":{\"keccak256\":\"0x26fbb03b9c5535dfab9588b728e54dc8b649fde71abafea1ff41a36630a6703d\",\"urls\":[\"bzz-raw://fbf66afd432a7398930243ffc4d6321af85fba25ca0036486181d6af8e62de7a\",\"dweb:/ipfs/QmZ81o4vbJckGJVNXrNLUo4Dh1zADcey8kvK9Qk9ywdkpL\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol\":{\"keccak256\":\"0x08e78c126225c0f24f976c2b19e690fdbf316ba30e03211fd271878c362d2ca1\",\"urls\":[\"bzz-raw://1acdf87f4d4fcf57a074b8714ada6beac3fd6a1311353017830aa2a6462d5f88\",\"dweb:/ipfs/QmR2TMPGrt6VeMTRrWFRbf2cw7Uwb8qfrMxkbD8QY8gc2z\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":{\"keccak256\":\"0x7acf48e8482adb1219ab8d5876465e3e7a7e07b4742737c665aeefc7abeb0692\",\"urls\":[\"bzz-raw://5b6056ec5c1f2a6c82b3d671a3088d09c37eae6432277b99f5450782a8b29e08\",\"dweb:/ipfs/QmS3BNrhiSw3VuzpJJt8nJ4QaZRB4k9GXAEWjc8mLni2Xg\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol\":{\"keccak256\":\"0xa28c6a0eccde27467d49a7b40613c9f98fa96b68095be579196050ec4c3d38d4\",\"urls\":[\"bzz-raw://800ec3ba69214abcb9afd4e3e4c83978d2fe9cfb46dcad80b74fe935a09c228a\",\"dweb:/ipfs/QmZtHXxwyxCgdz9GfMiBTYfrJzcdP3HN5SUen4BKVDF7KG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806316f0115b14620000635780635c39fcc1146200008557806366d3820314620000a75780638da5cb5b14620000c7578063e31dff1314620000e9575b600080fd5b6200006d62000109565b6040516200007c91906200074b565b60405180910390f35b6200008f6200012f565b6040516200009e91906200072e565b60405180910390f35b620000c56004803603810190620000bf9190620005c9565b62000153565b005b620000d162000227565b604051620000e091906200072e565b60405180910390f35b62000107600480360381019062000101919062000668565b6200024d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200022457806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002a857600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639215d96f846040518263ffffffff1660e01b81526004016200030891906200081b565b60006040518083038186803b1580156200032157600080fd5b505afa15801562000336573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620003619190620005f5565b915091506000828286600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200039b906200050d565b620003aa9493929190620007c0565b604051809103906000f080158015620003c7573d6000803e3d6000fd5b50905060008382604051620003dc906200051b565b620003e99291906200078c565b604051809103906000f08015801562000406573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87a2ae0205f28cf6777eb213e867569f69e687e4b090364233360729fb68392d8660405162000468919062000768565b60405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f9530108683856040518463ffffffff1660e01b8152600401620004d19392919062000838565b600060405180830381600087803b158015620004ec57600080fd5b505af115801562000501573d6000803e3d6000fd5b50505050505050505050565b611d048062000a5f83390190565b613059806200276383390190565b6000620005406200053a846200089e565b62000875565b9050828152602081018484840111156200055957600080fd5b620005668482856200097e565b509392505050565b6000813590506200057f8162000a2a565b92915050565b600082601f8301126200059757600080fd5b8151620005a984826020860162000529565b91505092915050565b600081359050620005c38162000a44565b92915050565b600060208284031215620005dc57600080fd5b6000620005ec848285016200056e565b91505092915050565b600080604083850312156200060957600080fd5b600083015167ffffffffffffffff8111156200062457600080fd5b620006328582860162000585565b925050602083015167ffffffffffffffff8111156200065057600080fd5b6200065e8582860162000585565b9150509250929050565b600080604083850312156200067c57600080fd5b60006200068c85828601620005b2565b92505060206200069f85828601620005b2565b9150509250929050565b620006b481620008f0565b82525050565b620006c5816200092e565b82525050565b620006d68162000956565b82525050565b6000620006e982620008d4565b620006f58185620008df565b9350620007078185602086016200097e565b620007128162000a19565b840191505092915050565b620007288162000924565b82525050565b6000602082019050620007456000830184620006a9565b92915050565b6000602082019050620007626000830184620006cb565b92915050565b60006020820190508181036000830152620007848184620006dc565b905092915050565b60006040820190508181036000830152620007a88185620006dc565b9050620007b96020830184620006ba565b9392505050565b60006080820190508181036000830152620007dc8187620006dc565b90508181036020830152620007f28186620006dc565b90506200080360408301856200071d565b620008126060830184620006a9565b95945050505050565b60006020820190506200083260008301846200071d565b92915050565b60006060820190506200084f60008301866200071d565b6200085e6020830185620006a9565b6200086d6040830184620006ba565b949350505050565b60006200088162000894565b90506200088f8282620009b4565b919050565b6000604051905090565b600067ffffffffffffffff821115620008bc57620008bb620009ea565b5b620008c78262000a19565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620008fd8262000904565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006200093b8262000942565b9050919050565b60006200094f8262000904565b9050919050565b600062000963826200096a565b9050919050565b6000620009778262000904565b9050919050565b60005b838110156200099e57808201518184015260208101905062000981565b83811115620009ae576000848401525b50505050565b620009bf8262000a19565b810181811067ffffffffffffffff82111715620009e157620009e0620009ea565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000a3581620008f0565b811462000a4157600080fd5b50565b62000a4f8162000924565b811462000a5b57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001d0438038062001d0483398181016040528101906200003791906200038f565b83838160039080519060200190620000519291906200023f565b5080600490805190602001906200006a9291906200023f565b505050620000a98162000082620000b360201b60201c565b600a620000909190620005cc565b846200009d919062000709565b620000bc60201b60201c565b505050506200095f565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001269062000465565b60405180910390fd5b62000143600083836200023560201b60201c565b806002600082825462000157919062000514565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001ae919062000514565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000215919062000487565b60405180910390a362000231600083836200023a60201b60201c565b5050565b505050565b505050565b8280546200024d90620007eb565b90600052602060002090601f016020900481019282620002715760008555620002bd565b82601f106200028c57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bc5782518255916020019190600101906200029f565b5b509050620002cc9190620002d0565b5090565b5b80821115620002eb576000816000905550600101620002d1565b5090565b6000620003066200030084620004cd565b620004a4565b9050828152602081018484840111156200031f57600080fd5b6200032c848285620007b5565b509392505050565b60008151905062000345816200092b565b92915050565b600082601f8301126200035d57600080fd5b81516200036f848260208601620002ef565b91505092915050565b600081519050620003898162000945565b92915050565b60008060008060808587031215620003a657600080fd5b600085015167ffffffffffffffff811115620003c157600080fd5b620003cf878288016200034b565b945050602085015167ffffffffffffffff811115620003ed57600080fd5b620003fb878288016200034b565b93505060406200040e8782880162000378565b9250506060620004218782880162000334565b91505092959194509250565b60006200043c601f8362000503565b9150620004498262000902565b602082019050919050565b6200045f816200079e565b82525050565b6000602082019050818103600083015262000480816200042d565b9050919050565b60006020820190506200049e600083018462000454565b92915050565b6000620004b0620004c3565b9050620004be828262000821565b919050565b6000604051905090565b600067ffffffffffffffff821115620004eb57620004ea620008b5565b5b620004f682620008e4565b9050602081019050919050565b600082825260208201905092915050565b600062000521826200079e565b91506200052e836200079e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000566576200056562000857565b5b828201905092915050565b6000808291508390505b6001851115620005c3578086048111156200059b576200059a62000857565b5b6001851615620005ab5780820291505b8081029050620005bb85620008f5565b94506200057b565b94509492505050565b6000620005d9826200079e565b9150620005e683620007a8565b9250620006157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200061d565b905092915050565b6000826200062f576001905062000702565b816200063f576000905062000702565b8160018114620006585760028114620006635762000699565b600191505062000702565b60ff84111562000678576200067762000857565b5b8360020a91508482111562000692576200069162000857565b5b5062000702565b5060208310610133831016604e8410600b8410161715620006d35782820a905083811115620006cd57620006cc62000857565b5b62000702565b620006e2848484600162000571565b92509050818404811115620006fc57620006fb62000857565b5b81810290505b9392505050565b600062000716826200079e565b915062000723836200079e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200075f576200075e62000857565b5b828202905092915050565b600062000777826200077e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620007d5578082015181840152602081019050620007b8565b83811115620007e5576000848401525b50505050565b600060028204905060018216806200080457607f821691505b602082108114156200081b576200081a62000886565b5b50919050565b6200082c82620008e4565b810181811067ffffffffffffffff821117156200084e576200084d620008b5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000936816200076a565b81146200094257600080fd5b50565b62000950816200079e565b81146200095c57600080fd5b50565b611395806200096f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea2646970667358221220803b65279b0b99b4cd4975d10e0ed53cdf622d5e45acf757e61245c7c8bec42a64736f6c6343000804003360806040523480156200001157600080fd5b5060405162003059380380620030598339818101604052810190620000379190620001d1565b81600190805190602001906200004f92919062000098565b50806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003fd565b828054620000a69062000308565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b60006200015f620001598462000254565b6200022b565b9050828152602081018484840111156200017857600080fd5b62000185848285620002d2565b509392505050565b6000815190506200019e81620003e3565b92915050565b600082601f830112620001b657600080fd5b8151620001c884826020860162000148565b91505092915050565b60008060408385031215620001e557600080fd5b600083015167ffffffffffffffff8111156200020057600080fd5b6200020e85828601620001a4565b925050602062000221858286016200018d565b9150509250929050565b6000620002376200024a565b90506200024582826200033e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002725762000271620003a3565b5b6200027d82620003d2565b9050602081019050919050565b60006200029782620002b2565b9050919050565b6000620002ab826200028a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002f2578082015181840152602081019050620002d5565b8381111562000302576000848401525b50505050565b600060028204905060018216806200032157607f821691505b6020821081141562000338576200033762000374565b5b50919050565b6200034982620003d2565b810181811067ffffffffffffffff821117156200036b576200036a620003a3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003ee816200029e565b8114620003fa57600080fd5b50565b612c4c806200040d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633eda52001161008c578063a694fc3a11610066578063a694fc3a14610226578063c9d27afe14610242578063e4dd26cf1461025e578063e9a4b6911461027a576100cf565b80633eda5200146101ba578063528f9d55146101ea578063688e1d3114610208576100cf565b806306fdde03146100d45780630f9e4fb5146100f257806310b1939f1461010e578063150b7a021461013e57806317eb2f091461016e578063379607f51461019e575b600080fd5b6100dc610296565b6040516100e99190612550565b60405180910390f35b61010c60048036038101906101079190611ea9565b610324565b005b61012860048036038101906101239190612038565b61069d565b60405161013591906124dd565b60405180910390f35b61015860048036038101906101539190611e29565b610841565b604051610165919061251a565b60405180910390f35b61018860048036038101906101839190612038565b610856565b60405161019591906124ff565b60405180910390f35b6101b860048036038101906101b39190612038565b6108a6565b005b6101d460048036038101906101cf9190612038565b610b14565b6040516101e191906125f2565b60405180910390f35b6101f2610e11565b6040516101ff9190612614565b60405180910390f35b610210610e17565b60405161021d9190612535565b60405180910390f35b610240600480360381019061023b9190612038565b610e3b565b005b61025c6004803603810190610257919061208a565b6110a5565b005b61027860048036038101906102739190611f0e565b6112e5565b005b610294600480360381019061028f9190611fa5565b61168c565b005b600180546102a390612957565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf90612957565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b505050505081565b60001515600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff161515146103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c2906125b2565b60405180910390fd5b600081146105805760008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016104289190612614565b60206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611e00565b73ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c5906125d2565b60405180910390fd5b600360010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505061062d565b600360020160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505b6001600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600082141561076a576003600101805480602002602001604051908101604052809291908181526020016000905b8282101561075f57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200190600101906106cd565b50505050905061083c565b6001821415610835576003600201805480602002602001604051908101604052809291908181526020016000905b8282101561082a57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610798565b50505050905061083c565b6060809150505b919050565b600063150b7a0260e01b905095945050505050565b61085e611a55565b60405180604001604052806006600085815260200190815260200160002060060154815260200160066000858152602001908152602001600020600701548152509050919050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109a55760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161094d9291906124b4565b602060405180830381600087803b15801561096757600080fd5b505af115801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190611ee5565b50610b10565b81811015610a605760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a089291906124b4565b602060405180830381600087803b158015610a2257600080fd5b505af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190611ee5565b50610b0f565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610abb9291906124b4565b602060405180830381600087803b158015610ad557600080fd5b505af1158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d9190611ee5565b505b5b5050565b610b1c611a77565b60066000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff166002811115610b86577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610bbe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182018054610bd290612957565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfe90612957565b8015610c4b5780601f10610c2057610100808354040283529160200191610c4b565b820191906000526020600020905b815481529060010190602001808311610c2e57829003601f168201915b50505050508152602001600282018054610c6490612957565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9090612957565b8015610cdd5780601f10610cb257610100808354040283529160200191610cdd565b820191906000526020600020905b815481529060010190602001808311610cc057829003601f168201915b50505050508152602001600382018054610cf690612957565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2290612957565b8015610d6f5780601f10610d4457610100808354040283529160200191610d6f565b820191906000526020600020905b815481529060010190602001808311610d5257829003601f168201915b50505050508152602001600482016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200160068201548152602001600782015481526020016008820154815250509050919050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610e97929190612454565b60206040518083038186803b158015610eaf57600080fd5b505afa158015610ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee79190612061565b1015610f9c5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610f489291906124b4565b602060405180830381600087803b158015610f6257600080fd5b505af1158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a9190611ee5565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610ff99392919061247d565b602060405180830381600087803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b9190611ee5565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461109b9190612765565b9250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016111019190612439565b60206040518083038186803b15801561111957600080fd5b505afa15801561112d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111519190612061565b1415611192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118990612572565b60405180910390fd5b60011515811515141561121057600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546006600084815260200190815260200160002060060160008282546112049190612765565b9250508190555061127d565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546006600084815260200190815260200160002060070160008282546112759190612765565b925050819055505b6000600660008481526020019081526020016000206007015460066000858152602001908152602001600020600601546112b79190612765565b9050600660008481526020019081526020016000206008015481106112e0576112df8361194e565b5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016113419190612439565b60206040518083038186803b15801561135957600080fd5b505afa15801561136d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113919190612061565b14156113d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c990612592565b60405180910390fd5b6001600260008282546113e59190612765565b92505081905550600060405180610100016040528060006002811115611434577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018581526020018481526020018381526020016040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525081526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114f357600080fd5b505afa158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152b9190612061565b600361153791906127ec565b61154191906127bb565b81525090508060066000600254815260200190815260200160002060008201518160000160006101000a81548160ff021916908360028111156115ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060208201518160010190805190602001906115ce929190611afa565b5060408201518160020190805190602001906115eb929190611afa565b506060820151816003019080519060200190611608929190611b80565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050565b60016002600082825461169f9190612765565b925050819055506060600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250905060006040518061010001604052806000600281111561171f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018881526020018781526020018481526020018381526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117b257600080fd5b505afa1580156117c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ea9190612061565b60036117f691906127ec565b61180091906127bb565b81525090508060066000600254815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111561186c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101908051906020019061188d929190611afa565b5060408201518160020190805190602001906118aa929190611afa565b5060608201518160030190805190602001906118c7929190611b80565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050505050565b6006600082815260200190815260200160002060070154600660008381526020019081526020016000206006015411156119ec5760016006600083815260200190815260200160002060000160006101000a81548160ff021916908360028111156119e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550611a52565b60026006600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611a4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6040518060400160405280600290602082028036833780820191505090505090565b60405180610100016040528060006002811115611abd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001606081526020016060815260200160608152602001611adf611c06565b81526020016000815260200160008152602001600081525090565b828054611b0690612957565b90600052602060002090601f016020900481019282611b285760008555611b6f565b82601f10611b4157805160ff1916838001178555611b6f565b82800160010185558215611b6f579182015b82811115611b6e578251825591602001919060010190611b53565b5b509050611b7c9190611c36565b5090565b828054611b8c90612957565b90600052602060002090601f016020900481019282611bae5760008555611bf5565b82601f10611bc757805160ff1916838001178555611bf5565b82800160010185558215611bf5579182015b82811115611bf4578251825591602001919060010190611bd9565b5b509050611c029190611c36565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115611c4f576000816000905550600101611c37565b5090565b6000611c66611c6184612654565b61262f565b905082815260208101848484011115611c7e57600080fd5b611c89848285612915565b509392505050565b6000611ca4611c9f84612685565b61262f565b905082815260208101848484011115611cbc57600080fd5b611cc7848285612915565b509392505050565b600081359050611cde81612bba565b92915050565b600081519050611cf381612bba565b92915050565b600081359050611d0881612bd1565b92915050565b600081519050611d1d81612bd1565b92915050565b60008083601f840112611d3557600080fd5b8235905067ffffffffffffffff811115611d4e57600080fd5b602083019150836001820283011115611d6657600080fd5b9250929050565b600082601f830112611d7e57600080fd5b8135611d8e848260208601611c53565b91505092915050565b600081359050611da681612be8565b92915050565b600082601f830112611dbd57600080fd5b8135611dcd848260208601611c91565b91505092915050565b600081359050611de581612bff565b92915050565b600081519050611dfa81612bff565b92915050565b600060208284031215611e1257600080fd5b6000611e2084828501611ce4565b91505092915050565b600080600080600060808688031215611e4157600080fd5b6000611e4f88828901611ccf565b9550506020611e6088828901611ccf565b9450506040611e7188828901611dd6565b935050606086013567ffffffffffffffff811115611e8e57600080fd5b611e9a88828901611d23565b92509250509295509295909350565b60008060408385031215611ebc57600080fd5b6000611eca85828601611ccf565b9250506020611edb85828601611dd6565b9150509250929050565b600060208284031215611ef757600080fd5b6000611f0584828501611d0e565b91505092915050565b600080600060608486031215611f2357600080fd5b600084013567ffffffffffffffff811115611f3d57600080fd5b611f4986828701611dac565b935050602084013567ffffffffffffffff811115611f6657600080fd5b611f7286828701611dac565b925050604084013567ffffffffffffffff811115611f8f57600080fd5b611f9b86828701611d6d565b9150509250925092565b60008060008060808587031215611fbb57600080fd5b600085013567ffffffffffffffff811115611fd557600080fd5b611fe187828801611dac565b945050602085013567ffffffffffffffff811115611ffe57600080fd5b61200a87828801611dac565b935050604061201b87828801611d97565b925050606061202c87828801611dd6565b91505092959194509250565b60006020828403121561204a57600080fd5b600061205884828501611dd6565b91505092915050565b60006020828403121561207357600080fd5b600061208184828501611deb565b91505092915050565b6000806040838503121561209d57600080fd5b60006120ab85828601611dd6565b92505060206120bc85828601611cf9565b9150509250929050565b60006120d2838361232d565b60408301905092915050565b60006120ea838361241b565b60208301905092915050565b6120ff81612846565b82525050565b61210e81612846565b82525050565b600061211f826126d0565b6121298185612716565b9350612134836126b6565b8060005b8381101561216557815161214c88826120c6565b9750612157836126fc565b925050600181019050612138565b5085935050505092915050565b61217b816126db565b6121858184612727565b9250612190826126c6565b8060005b838110156121c15781516121a887826120de565b96506121b383612709565b925050600181019050612194565b505050505050565b6121d281612864565b82525050565b60006121e3826126e6565b6121ed8185612732565b93506121fd818560208601612924565b61220681612aa5565b840191505092915050565b61221a816128df565b82525050565b61222981612903565b82525050565b600061223a826126f1565b6122448185612743565b9350612254818560208601612924565b61225d81612aa5565b840191505092915050565b6000612273826126f1565b61227d8185612754565b935061228d818560208601612924565b61229681612aa5565b840191505092915050565b60006122ae602b83612754565b91506122b982612ab6565b604082019050919050565b60006122d1603c83612754565b91506122dc82612b05565b604082019050919050565b60006122f4601c83612754565b91506122ff82612b54565b602082019050919050565b6000612317601783612754565b915061232282612b7d565b602082019050919050565b60408201600082015161234360008501826120f6565b506020820151612356602085018261241b565b50505050565b6000610120830160008301516123756000860182612220565b506020830151848203602086015261238d828261222f565b915050604083015184820360408601526123a7828261222f565b915050606083015184820360608601526123c182826121d8565b91505060808301516123d6608086018261232d565b5060a08301516123e960c086018261241b565b5060c08301516123fc60e086018261241b565b5060e083015161241061010086018261241b565b508091505092915050565b612424816128d5565b82525050565b612433816128d5565b82525050565b600060208201905061244e6000830184612105565b92915050565b60006040820190506124696000830185612105565b6124766020830184612105565b9392505050565b60006060820190506124926000830186612105565b61249f6020830185612105565b6124ac604083018461242a565b949350505050565b60006040820190506124c96000830185612105565b6124d6602083018461242a565b9392505050565b600060208201905081810360008301526124f78184612114565b905092915050565b60006040820190506125146000830184612172565b92915050565b600060208201905061252f60008301846121c9565b92915050565b600060208201905061254a6000830184612211565b92915050565b6000602082019050818103600083015261256a8184612268565b905092915050565b6000602082019050818103600083015261258b816122a1565b9050919050565b600060208201905081810360008301526125ab816122c4565b9050919050565b600060208201905081810360008301526125cb816122e7565b9050919050565b600060208201905081810360008301526125eb8161230a565b9050919050565b6000602082019050818103600083015261260c818461235c565b905092915050565b6000602082019050612629600083018461242a565b92915050565b600061263961264a565b90506126458282612989565b919050565b6000604051905090565b600067ffffffffffffffff82111561266f5761266e612a76565b5b61267882612aa5565b9050602081019050919050565b600067ffffffffffffffff8211156126a05761269f612a76565b5b6126a982612aa5565b9050602081019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612770826128d5565b915061277b836128d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127b0576127af6129ba565b5b828201905092915050565b60006127c6826128d5565b91506127d1836128d5565b9250826127e1576127e06129e9565b5b828204905092915050565b60006127f7826128d5565b9150612802836128d5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561283b5761283a6129ba565b5b828202905092915050565b6000612851826128b5565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061289b82612846565b9050919050565b60008190506128b082612ba6565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006128ea826128f1565b9050919050565b60006128fc826128b5565b9050919050565b600061290e826128a2565b9050919050565b82818337600083830152505050565b60005b83811015612942578082015181840152602081019050612927565b83811115612951576000848401525b50505050565b6000600282049050600182168061296f57607f821691505b6020821081141561298357612982612a47565b5b50919050565b61299282612aa5565b810181811067ffffffffffffffff821117156129b1576129b0612a76565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f20766f7465000000000000000000000000000000000000000000602082015250565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f206372656174652061206e65772070726f706f73616c00000000602082015250565b7f5468697320617373657420697320616c7265616479206c6f636b656400000000600082015250565b7f546869732061737365742069736e2774206c6f636b6564000000000000000000600082015250565b60038110612bb757612bb6612a18565b5b50565b612bc381612846565b8114612bce57600080fd5b50565b612bda81612858565b8114612be557600080fd5b50565b612bf181612890565b8114612bfc57600080fd5b50565b612c08816128d5565b8114612c1357600080fd5b5056fea26469706673582212203dbb7a127f3c30f90fd732f819da9d2feda9ca0bab57a2d534b9e4380f8faf7e64736f6c63430008040033a26469706673582212201cdeddd87f45244c37738aea93dfcfd400b04864337717e38467f1ecab438bae64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:998:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:93:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "93:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "108:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "164:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Pool_$1189",
                      "nodeType": "YulIdentifier",
                      "src": "124:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "124:46:11"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Pool_$1189_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "69:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "77:5:11",
                "type": ""
              }
            ],
            "src": "7:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "272:220:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "318:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "327:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "320:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "320:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "320:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "293:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "302:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "289:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "289:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "314:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "285:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "285:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "282:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "344:141:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "359:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "373:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "363:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "388:87:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "447:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "458:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "443:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "443:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "467:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Pool_$1189_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "398:44:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "398:77:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "388:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Pool_$1189_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:11",
                "type": ""
              }
            ],
            "src": "182:310:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "543:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "553:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "582:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "564:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "553:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "525:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "535:7:11",
                "type": ""
              }
            ],
            "src": "498:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "658:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "668:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "697:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "679:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "668:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Pool_$1189",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "640:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "650:7:11",
                "type": ""
              }
            ],
            "src": "600:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "760:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "770:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "785:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "792:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "770:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "752:7:11",
                "type": ""
              }
            ],
            "src": "715:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "903:92:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "926:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "964:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Pool_$1189",
                              "nodeType": "YulIdentifier",
                              "src": "933:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "933:37:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "923:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:48:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:56:11"
                  },
                  "nodeType": "YulIf",
                  "src": "913:2:11"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Pool_$1189",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "896:5:11",
                "type": ""
              }
            ],
            "src": "847:148:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Pool_$1189_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Pool_$1189(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Pool_$1189_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Pool_$1189_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Pool_$1189(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Pool_$1189(value) {\n        if iszero(eq(value, cleanup_t_contract$_Pool_$1189(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8819:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:259:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "137:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "121:15:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "203:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "210:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "196:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "248:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "230:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "303:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "272:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "268:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "286:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "265:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "338:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "343:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "348:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "316:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:39:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:11",
                "type": ""
              }
            ],
            "src": "7:354:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "451:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "438:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "429:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "494:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "467:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "467:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "397:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "405:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "413:5:11",
                "type": ""
              }
            ],
            "src": "367:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "599:215:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "648:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "657:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "660:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "650:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "650:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "650:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "627:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "635:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "623:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "623:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "642:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "619:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "609:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "673:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "687:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "687:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "677:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "709:99:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "789:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "796:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "804:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "718:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:90:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "709:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "577:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "585:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "593:5:11",
                "type": ""
              }
            ],
            "src": "526:288:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "872:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "882:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "904:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "891:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "882:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "947:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "920:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "920:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "850:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "858:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "866:5:11",
                "type": ""
              }
            ],
            "src": "820:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1031:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1077:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1052:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1061:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1048:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1073:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1041:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1103:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1118:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1122:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1147:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1182:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1193:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1178:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1178:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1157:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1147:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1012:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1024:6:11",
                "type": ""
              }
            ],
            "src": "965:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1347:538:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1393:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1402:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1395:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1395:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1368:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1364:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1364:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1389:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1357:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:224:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:38:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1458:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1469:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1454:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1454:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1448:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1448:24:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1519:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1528:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1531:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1521:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1521:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1521:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1488:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1488:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1485:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1549:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1605:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1616:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1601:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1601:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1559:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1559:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1549:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1653:225:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1668:39:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1692:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1703:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1688:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1688:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1682:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:25:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1672:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1754:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1763:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1766:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1756:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1756:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1756:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1726:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1734:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1720:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1784:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1840:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1851:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1836:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1836:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1860:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1794:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1784:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1309:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1320:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1332:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1340:6:11",
                "type": ""
              }
            ],
            "src": "1233:652:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1974:324:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2020:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2029:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2032:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2022:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2022:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2022:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1995:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2004:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1991:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1991:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2016:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1987:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1984:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2046:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2061:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2065:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2090:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2125:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2136:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2121:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2121:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2145:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2100:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2100:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2090:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2173:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2188:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2202:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2192:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2218:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2253:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2264:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2249:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2249:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2273:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2228:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2218:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1936:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1947:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1959:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1967:6:11",
                "type": ""
              }
            ],
            "src": "1891:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2369:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2386:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2409:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2391:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2391:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2379:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2379:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2379:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2357:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2364:3:11",
                "type": ""
              }
            ],
            "src": "2304:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:81:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2525:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2576:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1813_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2530:45:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:65:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1813_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2496:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2503:3:11",
                "type": ""
              }
            ],
            "src": "2428:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:79:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2690:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2739:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Pool_$1189_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2695:43:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:50:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2683:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2683:63:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Pool_$1189_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2661:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2668:3:11",
                "type": ""
              }
            ],
            "src": "2595:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:272:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2860:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2907:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2874:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2874:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2864:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:78:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2988:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2993:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2929:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:71:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3035:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3042:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3049:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3054:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3009:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3009:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3070:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3081:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3108:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3086:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3077:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3070:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2831:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2838:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2846:3:11",
                "type": ""
              }
            ],
            "src": "2758:364:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3193:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3210:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3233:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3215:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3203:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3203:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3203:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3181:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3188:3:11",
                "type": ""
              }
            ],
            "src": "3128:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3350:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3360:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3372:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3383:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3368:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3360:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3440:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3453:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3464:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3396:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3396:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3396:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3322:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3334:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3345:4:11",
                "type": ""
              }
            ],
            "src": "3252:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:137:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3601:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3613:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3624:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3609:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3601:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3694:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3707:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3718:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3703:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3703:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$1189_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3637:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:84:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:84:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Pool_$1189__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3563:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3575:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3586:4:11",
                "type": ""
              }
            ],
            "src": "3480:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3852:195:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3862:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3874:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3885:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3870:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3870:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3862:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3928:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3954:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4026:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4035:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3962:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3954:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3824:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3836:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3847:4:11",
                "type": ""
              }
            ],
            "src": "3734:313:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4214:292:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4224:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4236:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4247:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4232:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4232:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4224:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4271:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4282:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4267:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4267:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4290:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4296:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4286:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4286:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4260:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4260:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4316:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4388:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4397:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4324:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4324:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4316:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4471:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4484:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4495:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4480:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4480:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1813_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4412:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4412:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4412:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1813__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4178:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4190:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4198:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4209:4:11",
                "type": ""
              }
            ],
            "src": "4053:453:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4734:513:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4744:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4756:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4767:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4752:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4752:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4744:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4792:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4803:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4788:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4788:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4811:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4817:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4807:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4807:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4781:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4781:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4781:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4837:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4909:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4918:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4845:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4845:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4837:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4944:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4955:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4940:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4940:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4964:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4970:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4960:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4960:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4933:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4933:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4990:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5062:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5071:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4998:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4990:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5130:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5143:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5154:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5139:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5139:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5086:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5086:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5086:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5212:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5225:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5236:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5221:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5221:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5168:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5168:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5168:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4682:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4694:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4702:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4710:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4718:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4729:4:11",
                "type": ""
              }
            ],
            "src": "4512:735:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5351:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5361:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5373:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5369:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5361:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5441:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5454:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5465:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5450:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5450:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5397:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5323:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5335:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5346:4:11",
                "type": ""
              }
            ],
            "src": "5253:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5650:303:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5660:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5672:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5683:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5668:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5668:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5660:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5740:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5753:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5764:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5749:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5749:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5696:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5696:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5696:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5821:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5834:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5845:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5830:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5830:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5777:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5777:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5777:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5918:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5931:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5942:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5927:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5927:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1813_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5859:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5859:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5859:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_contract$_IERC20_$1813__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5606:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5618:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5626:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5634:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5645:4:11",
                "type": ""
              }
            ],
            "src": "5481:472:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6000:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6010:30:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "6020:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6020:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6010:6:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6069:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6077:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "6049:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6049:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6049:33:11"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5984:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5993:6:11",
                "type": ""
              }
            ],
            "src": "5959:129:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6134:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6144:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6160:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6154:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6144:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6127:6:11",
                "type": ""
              }
            ],
            "src": "6094:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6242:241:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6347:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6349:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6349:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6349:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6319:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6327:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6316:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6316:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6313:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6379:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6409:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6387:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6387:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6379:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6453:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6465:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6471:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6461:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6461:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6453:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6226:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6237:4:11",
                "type": ""
              }
            ],
            "src": "6175:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6548:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6559:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6575:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6569:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6569:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6559:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6531:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6541:6:11",
                "type": ""
              }
            ],
            "src": "6489:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6690:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6707:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6712:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6700:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6700:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6728:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6747:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6752:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6743:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6743:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6728:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6662:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6667:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6678:11:11",
                "type": ""
              }
            ],
            "src": "6594:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6814:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6824:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6853:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6835:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6835:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6824:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6796:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6806:7:11",
                "type": ""
              }
            ],
            "src": "6769:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6916:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6926:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6941:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6948:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6937:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6937:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6926:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6898:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6908:7:11",
                "type": ""
              }
            ],
            "src": "6871:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7048:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7058:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7069:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7058:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7030:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7040:7:11",
                "type": ""
              }
            ],
            "src": "7003:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7161:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7171:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7230:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1813_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7184:45:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7184:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7171:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1813_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7141:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7151:9:11",
                "type": ""
              }
            ],
            "src": "7086:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7323:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7333:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7364:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7346:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7346:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7333:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1813_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7303:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7313:9:11",
                "type": ""
              }
            ],
            "src": "7248:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7455:79:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7465:63:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7522:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Pool_$1189_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7478:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7478:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7465:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1189_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7435:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7445:9:11",
                "type": ""
              }
            ],
            "src": "7382:152:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7613:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7623:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7654:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7636:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7636:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7623:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1189_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7593:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7603:9:11",
                "type": ""
              }
            ],
            "src": "7540:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7721:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7731:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7740:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7735:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7800:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7825:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7830:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7821:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7821:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7844:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7849:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7840:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7840:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7834:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7834:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7814:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7814:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7814:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7761:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7764:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7758:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7758:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7772:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7774:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7783:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7786:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7779:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7779:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7774:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7754:3:11",
                    "statements": []
                  },
                  "src": "7750:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7897:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7947:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7952:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7943:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7943:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7961:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7936:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7936:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7936:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7878:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7881:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7875:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7875:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7872:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7703:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7708:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7713:6:11",
                "type": ""
              }
            ],
            "src": "7672:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8028:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8038:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "8060:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "8090:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "8068:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8068:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8056:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8056:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8042:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8207:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8209:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8209:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8209:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8150:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8162:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8147:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8147:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8186:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8198:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8183:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8183:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8144:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8144:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8141:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8245:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8249:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8238:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8238:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8238:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8014:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8022:4:11",
                "type": ""
              }
            ],
            "src": "7985:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8300:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8320:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8310:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8310:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8414:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8417:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8407:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8407:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8407:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8438:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8441:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8431:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8431:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8431:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8272:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8506:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8516:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8534:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8541:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8530:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8530:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8550:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8546:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8546:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8526:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8526:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "8516:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8489:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "8499:6:11",
                "type": ""
              }
            ],
            "src": "8458:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8609:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8666:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8675:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8678:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8668:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8668:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8668:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8632:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8657:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8639:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8639:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8629:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8629:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8622:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8622:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8619:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8602:5:11",
                "type": ""
              }
            ],
            "src": "8566:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8737:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8794:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8803:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8806:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8796:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8796:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8796:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8760:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8785:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8767:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8767:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8757:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8757:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8750:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8750:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8747:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8730:5:11",
                "type": ""
              }
            ],
            "src": "8694:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1813_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1813_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Pool_$1189_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Pool_$1189_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Pool_$1189__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Pool_$1189_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1813__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_IERC20_$1813_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_contract$_IERC20_$1813__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IERC20_$1813_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$1813_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1813_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1813_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1189_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Pool_$1189_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1189_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "207:1242:2:-:0;;;577:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;619:10;611:5;;:18;;;;;;;;;;;;;;;;;;651:10;639:9;;:22;;;;;;;;;;;;;;;;;;678:5;671:4;;:12;;;;;;;;;;;;;;;;;;577:113;207:1242;;7:169:11;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:310::-;265:6;314:2;302:9;293:7;289:23;285:32;282:2;;;330:1;327;320:12;282:2;373:1;398:77;467:7;458:6;447:9;443:22;398:77;:::i;:::-;388:87;;344:141;272:220;;;;:::o;498:96::-;535:7;564:24;582:5;564:24;:::i;:::-;553:35;;543:51;;;:::o;600:109::-;650:7;679:24;697:5;679:24;:::i;:::-;668:35;;658:51;;;:::o;715:126::-;752:7;792:42;785:5;781:54;770:65;;760:81;;;:::o;847:148::-;933:37;964:5;933:37;:::i;:::-;926:5;923:48;913:2;;985:1;982;975:12;913:2;903:92;:::o;207:1242:2:-;;;;;;;",
  "deployedSourceMap": "207:1242:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;284:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;861:585;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;353:16;;;;;;;;;;;;;:::o;231:24::-;;;;;;;;;;;;:::o;696:159::-;418:5;;;;;;;;;;;404:19;;:10;:19;;;396:28;;;;;;792:3:::1;766:30;;:14;:30;;;762:87;;824:14;812:9;::::0;:26:::1;;;;;;;;;;;;;;;;;;762:87;696:159:::0;:::o;284:20::-;;;;;;;;;;;;;:::o;861:585::-;480:5;;;;;;;;;;;466:19;;:10;:19;;;458:28;;;;;;982:24:::1;1008:21:::0;1033:4:::1;;;;;;;;;;;:25;;;1059:8;1033:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:87;;;;1078:16;1110:10;1122:6;1130:14;1154:4;;;;;;;;;;;1097:63;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1078:82;;1210:7;1228:10;1240:9;1220:30;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1210:40;;1306:9;1265:52;;1292:3;1265:52;;;1272:10;1265:52;;;;;;:::i;:::-;;;;;;;;1378:4;;;;;;;;;;;:26;;;1405:8;1423:3;1429:9;1378:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;488:1;;;;861:585:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:354:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:139::-;413:5;451:6;438:20;429:29;;467:33;494:5;467:33;:::i;:::-;419:87;;;;:::o;526:288::-;593:5;642:3;635:4;627:6;623:17;619:27;609:2;;660:1;657;650:12;609:2;693:6;687:13;718:90;804:3;796:6;789:4;781:6;777:17;718:90;:::i;:::-;709:99;;599:215;;;;;:::o;820:139::-;866:5;904:6;891:20;882:29;;920:33;947:5;920:33;:::i;:::-;872:87;;;;:::o;965:262::-;1024:6;1073:2;1061:9;1052:7;1048:23;1044:32;1041:2;;;1089:1;1086;1079:12;1041:2;1132:1;1157:53;1202:7;1193:6;1182:9;1178:22;1157:53;:::i;:::-;1147:63;;1103:117;1031:196;;;;:::o;1233:652::-;1332:6;1340;1389:2;1377:9;1368:7;1364:23;1360:32;1357:2;;;1405:1;1402;1395:12;1357:2;1469:1;1458:9;1454:17;1448:24;1499:18;1491:6;1488:30;1485:2;;;1531:1;1528;1521:12;1485:2;1559:74;1625:7;1616:6;1605:9;1601:22;1559:74;:::i;:::-;1549:84;;1419:224;1703:2;1692:9;1688:18;1682:25;1734:18;1726:6;1723:30;1720:2;;;1766:1;1763;1756:12;1720:2;1794:74;1860:7;1851:6;1840:9;1836:22;1794:74;:::i;:::-;1784:84;;1653:225;1347:538;;;;;:::o;1891:407::-;1959:6;1967;2016:2;2004:9;1995:7;1991:23;1987:32;1984:2;;;2032:1;2029;2022:12;1984:2;2075:1;2100:53;2145:7;2136:6;2125:9;2121:22;2100:53;:::i;:::-;2090:63;;2046:117;2202:2;2228:53;2273:7;2264:6;2253:9;2249:22;2228:53;:::i;:::-;2218:63;;2173:118;1974:324;;;;;:::o;2304:118::-;2391:24;2409:5;2391:24;:::i;:::-;2386:3;2379:37;2369:53;;:::o;2428:161::-;2530:52;2576:5;2530:52;:::i;:::-;2525:3;2518:65;2508:81;;:::o;2595:157::-;2695:50;2739:5;2695:50;:::i;:::-;2690:3;2683:63;2673:79;;:::o;2758:364::-;2846:3;2874:39;2907:5;2874:39;:::i;:::-;2929:71;2993:6;2988:3;2929:71;:::i;:::-;2922:78;;3009:52;3054:6;3049:3;3042:4;3035:5;3031:16;3009:52;:::i;:::-;3086:29;3108:6;3086:29;:::i;:::-;3081:3;3077:39;3070:46;;2850:272;;;;;:::o;3128:118::-;3215:24;3233:5;3215:24;:::i;:::-;3210:3;3203:37;3193:53;;:::o;3252:222::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3396:71;3464:1;3453:9;3449:17;3440:6;3396:71;:::i;:::-;3350:124;;;;:::o;3480:248::-;3586:4;3624:2;3613:9;3609:18;3601:26;;3637:84;3718:1;3707:9;3703:17;3694:6;3637:84;:::i;:::-;3591:137;;;;:::o;3734:313::-;3847:4;3885:2;3874:9;3870:18;3862:26;;3934:9;3928:4;3924:20;3920:1;3909:9;3905:17;3898:47;3962:78;4035:4;4026:6;3962:78;:::i;:::-;3954:86;;3852:195;;;;:::o;4053:453::-;4209:4;4247:2;4236:9;4232:18;4224:26;;4296:9;4290:4;4286:20;4282:1;4271:9;4267:17;4260:47;4324:78;4397:4;4388:6;4324:78;:::i;:::-;4316:86;;4412:87;4495:2;4484:9;4480:18;4471:6;4412:87;:::i;:::-;4214:292;;;;;:::o;4512:735::-;4729:4;4767:3;4756:9;4752:19;4744:27;;4817:9;4811:4;4807:20;4803:1;4792:9;4788:17;4781:47;4845:78;4918:4;4909:6;4845:78;:::i;:::-;4837:86;;4970:9;4964:4;4960:20;4955:2;4944:9;4940:18;4933:48;4998:78;5071:4;5062:6;4998:78;:::i;:::-;4990:86;;5086:72;5154:2;5143:9;5139:18;5130:6;5086:72;:::i;:::-;5168;5236:2;5225:9;5221:18;5212:6;5168:72;:::i;:::-;4734:513;;;;;;;:::o;5253:222::-;5346:4;5384:2;5373:9;5369:18;5361:26;;5397:71;5465:1;5454:9;5450:17;5441:6;5397:71;:::i;:::-;5351:124;;;;:::o;5481:472::-;5645:4;5683:2;5672:9;5668:18;5660:26;;5696:71;5764:1;5753:9;5749:17;5740:6;5696:71;:::i;:::-;5777:72;5845:2;5834:9;5830:18;5821:6;5777:72;:::i;:::-;5859:87;5942:2;5931:9;5927:18;5918:6;5859:87;:::i;:::-;5650:303;;;;;;:::o;5959:129::-;5993:6;6020:20;;:::i;:::-;6010:30;;6049:33;6077:4;6069:6;6049:33;:::i;:::-;6000:88;;;:::o;6094:75::-;6127:6;6160:2;6154:9;6144:19;;6134:35;:::o;6175:308::-;6237:4;6327:18;6319:6;6316:30;6313:2;;;6349:18;;:::i;:::-;6313:2;6387:29;6409:6;6387:29;:::i;:::-;6379:37;;6471:4;6465;6461:15;6453:23;;6242:241;;;:::o;6489:99::-;6541:6;6575:5;6569:12;6559:22;;6548:40;;;:::o;6594:169::-;6678:11;6712:6;6707:3;6700:19;6752:4;6747:3;6743:14;6728:29;;6690:73;;;;:::o;6769:96::-;6806:7;6835:24;6853:5;6835:24;:::i;:::-;6824:35;;6814:51;;;:::o;6871:126::-;6908:7;6948:42;6941:5;6937:54;6926:65;;6916:81;;;:::o;7003:77::-;7040:7;7069:5;7058:16;;7048:32;;;:::o;7086:156::-;7151:9;7184:52;7230:5;7184:52;:::i;:::-;7171:65;;7161:81;;;:::o;7248:128::-;7313:9;7346:24;7364:5;7346:24;:::i;:::-;7333:37;;7323:53;;;:::o;7382:152::-;7445:9;7478:50;7522:5;7478:50;:::i;:::-;7465:63;;7455:79;;;:::o;7540:126::-;7603:9;7636:24;7654:5;7636:24;:::i;:::-;7623:37;;7613:53;;;:::o;7672:307::-;7740:1;7750:113;7764:6;7761:1;7758:13;7750:113;;;7849:1;7844:3;7840:11;7834:18;7830:1;7825:3;7821:11;7814:39;7786:2;7783:1;7779:10;7774:15;;7750:113;;;7881:6;7878:1;7875:13;7872:2;;;7961:1;7952:6;7947:3;7943:16;7936:27;7872:2;7721:258;;;;:::o;7985:281::-;8068:27;8090:4;8068:27;:::i;:::-;8060:6;8056:40;8198:6;8186:10;8183:22;8162:18;8150:10;8147:34;8144:62;8141:2;;;8209:18;;:::i;:::-;8141:2;8249:10;8245:2;8238:22;8028:238;;;:::o;8272:180::-;8320:77;8317:1;8310:88;8417:4;8414:1;8407:15;8441:4;8438:1;8431:15;8458:102;8499:6;8550:2;8546:7;8541:2;8534:5;8530:14;8526:28;8516:38;;8506:54;;;:::o;8566:122::-;8639:24;8657:5;8639:24;:::i;:::-;8632:5;8629:35;8619:2;;8678:1;8675;8668:12;8619:2;8609:79;:::o;8694:122::-;8767:24;8785:5;8767:24;:::i;:::-;8760:5;8757:35;8747:2;;8806:1;8803;8796:12;8747:2;8737:79;:::o",
  "source": "pragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./Pool.sol\";\nimport \"./DaoToken.sol\";\nimport \"./Dao.sol\";\n\ncontract Factory {\n\n    address public initiator;  // Offchain initiator\n    address public owner;  // Will allow to setup offchain initiator\n    Pool public pool;\n\n    modifier ownerOnly {require(msg.sender == owner); _;}\n    modifier initiatorOnly {require(msg.sender == owner); _;}\n\n    event NewDao(string name, address indexed dao, address indexed dao_token);\n\n    constructor(Pool _pool) {\n        owner = msg.sender;\n        initiator = msg.sender;\n        pool = _pool;\n    }\n\n    function setup(address _new_initiator) public ownerOnly {\n        if (_new_initiator != address(0x0)) {\n            initiator = _new_initiator;\n        }\n    }\n\n    function new_dao(uint _shares_amount, uint _pool_id) public initiatorOnly {\n        //  Setting up the emission\n        (string memory party_name, string memory  ticker) = pool.get_pool_description(_pool_id);\n        IERC20 dao_token = new DaoToken(party_name, ticker, _shares_amount, address(pool));\n        //  Building the brand new DAO.\n        Dao dao = new Dao(party_name, dao_token);\n        emit NewDao(party_name, address(dao), address(dao_token));\n        //  Sending tokens to Dao for distribution\n        pool.distribute_dao_tokens(_pool_id, address(dao), dao_token);\n    }\n\n}\n",
  "sourcePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1994
      ],
      "Dao": [
        569
      ],
      "DaoToken": [
        601
      ],
      "ERC20": [
        1735
      ],
      "Factory": [
        754
      ],
      "IERC165": [
        2006
      ],
      "IERC20": [
        1813
      ],
      "IERC20Metadata": [
        1838
      ],
      "IERC721": [
        1954
      ],
      "IERC721Receiver": [
        1972
      ],
      "Pool": [
        1189
      ]
    },
    "id": 755,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 603,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 604,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 1814,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 605,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 1955,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 606,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 1190,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 607,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 602,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 608,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 570,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          569,
          601
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 754,
        "linearizedBaseContracts": [
          754
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 610,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 609,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 612,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 611,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 615,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1189",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 614,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 613,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1189,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1189,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1189",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 618,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 620,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 624,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 626,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 629,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 631,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 635,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 637,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 645,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 651,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 652,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 656,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 657,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 661,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1189",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 662,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1189",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1189",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 666,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1189",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 646,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1189,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1189,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1189",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 754,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 673,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 684,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 679,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 680,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 682,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 670,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 626,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 754,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "935:511:2",
              "statements": [
                {
                  "assignments": [
                    696,
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 697,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 703,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 701,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 699,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1189",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1028,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1813",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 705,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 704,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1813,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1813,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 718,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 711,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 712,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 715,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "1154:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1189",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1189",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1146:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1146:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$601_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 708,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 707,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 601,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 601,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$601",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$601",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:82:2"
                },
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1214:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "1210:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$569",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 720,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 719,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 569,
                          "src": "1210:3:2"
                        },
                        "referencedDeclaration": 569,
                        "src": "1210:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$569",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 728,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 725,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "1228:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 726,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "1240:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1220:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1813_$returns$_t_contract$_Dao_$569_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 723,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 722,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 569,
                          "src": "1224:3:2"
                        },
                        "referencedDeclaration": 569,
                        "src": "1224:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$569",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$569",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1210:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 730,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "1272:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 733,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "1292:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1284:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 731,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1284:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 737,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "1306:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1813",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1813",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1298:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1298:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1298:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 729,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "1265:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "EmitStatement",
                  "src": "1260:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 744,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "1405:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 747,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "1423:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1415:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1415:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1415:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 749,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "1429:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 741,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1378:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1189",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1175,
                      "src": "1378:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$1813_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20) external"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:61:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 693,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 692,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 637,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 754,
            "src": "861:585:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 755,
        "src": "207:1242:2",
        "usedErrors": []
      }
    ],
    "src": "0:1450:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1994
      ],
      "Dao": [
        569
      ],
      "DaoToken": [
        601
      ],
      "ERC20": [
        1735
      ],
      "Factory": [
        754
      ],
      "IERC165": [
        2006
      ],
      "IERC20": [
        1813
      ],
      "IERC20Metadata": [
        1838
      ],
      "IERC721": [
        1954
      ],
      "IERC721Receiver": [
        1972
      ],
      "Pool": [
        1189
      ]
    },
    "id": 755,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 603,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 604,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 1814,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 605,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 1955,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 606,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 1190,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 607,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 602,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 608,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 570,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          569,
          601
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 754,
        "linearizedBaseContracts": [
          754
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 610,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 609,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 612,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 611,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 615,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1189",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 614,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 613,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1189,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1189,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1189",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 618,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 620,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 624,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 626,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 629,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 631,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 635,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 637,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 645,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 651,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 652,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 656,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 657,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 661,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1189",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 662,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1189",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1189",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 666,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1189",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 646,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1189,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1189,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1189",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 754,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 673,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 684,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 679,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 680,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 682,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 670,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 626,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 754,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "935:511:2",
              "statements": [
                {
                  "assignments": [
                    696,
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 697,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 703,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 701,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 699,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1189",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1028,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1813",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 705,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 704,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1813,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1813,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 718,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 711,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 712,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 715,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "1154:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1189",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1189",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1146:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1146:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$601_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 708,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 707,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 601,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 601,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$601",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$601",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:82:2"
                },
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1214:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "1210:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$569",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 720,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 719,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 569,
                          "src": "1210:3:2"
                        },
                        "referencedDeclaration": 569,
                        "src": "1210:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$569",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 728,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 725,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "1228:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 726,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "1240:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1220:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1813_$returns$_t_contract$_Dao_$569_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 723,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 722,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 569,
                          "src": "1224:3:2"
                        },
                        "referencedDeclaration": 569,
                        "src": "1224:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$569",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$569",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1210:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 730,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "1272:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 733,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "1292:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1284:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 731,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1284:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 737,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "1306:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1813",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1813",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1298:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1298:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1298:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 729,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "1265:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "EmitStatement",
                  "src": "1260:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 744,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "1405:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 747,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "1423:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$569",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1415:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1415:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1415:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 749,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "1429:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1813",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 741,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1378:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1189",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1175,
                      "src": "1378:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$1813_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20) external"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:61:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 693,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 692,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 637,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 754,
            "src": "861:585:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 755,
        "src": "207:1242:2",
        "usedErrors": []
      }
    ],
    "src": "0:1450:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x2522AD7c3BBBAD49947AD92B1BbE89C7cE26Aa3F",
      "transactionHash": "0xd7b18e3cbb0f544fbe8290915ae99f5391da5ffc44b18612057d8c54047c95f5"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9F787Fb9d018f2419C1FD8D35236D8a29E343c49",
      "transactionHash": "0xe8443939789a907786edccec370e91a5767185a67f55fa84c1e708b1918961d8"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-26T06:31:26.362Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}