{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Pool",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "initiator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_initiator",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pool_id",
          "type": "uint256"
        }
      ],
      "name": "new_dao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Pool\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"initiator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool_id\",\"type\":\"uint256\"}],\"name\":\"new_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_initiator\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol\":{\"keccak256\":\"0xdb47fa6324a9cab19e2dd75d8fac622c8f069359ba425745855ac7dd91887d2b\",\"urls\":[\"bzz-raw://cec420e4b96a477b34bf64abadc264adc5ba5a805b39a792a2325ae84e95c511\",\"dweb:/ipfs/QmPDzpemNYkno7L4ztHWxfH9rQTAhHu3quZqQaSKab9Zwg\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol\":{\"keccak256\":\"0x6b210d211ad3a2b187a1ee4d29bd24acba569c38388e35a48478b7d4c746665a\",\"urls\":[\"bzz-raw://f32b31736c53e73b1426b5a5a8a68bf81bf37783f54032d357515bbabf8a0b88\",\"dweb:/ipfs/QmR6JRA2avdVEWix7PmRUNcyA5ynkde5kAr4i3EfBfcreZ\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":{\"keccak256\":\"0xac687f27827be45ce87151f62562dc5747dcf75146f66c8ce38bbd138e59af89\",\"urls\":[\"bzz-raw://95d862f52f2a044d1e2fbfb9ad910724d1e13cb37f9df1d35a015e9af8ad6c58\",\"dweb:/ipfs/QmWXLyPGDsSVizFJgxHrdR859X3wRHWmqxWFGgrS2q4ZTH\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol\":{\"keccak256\":\"0xca4d3af343ae82e33b57adc548866095764d4634b7c7f8f63a62e00c9879ee7b\",\"urls\":[\"bzz-raw://d2d11f36807efb5cd5e0860d6548836eb1bc35c89ca3f1148e25e9ce249c6066\",\"dweb:/ipfs/QmZhxqDqK7DCQmUefQnAYu63KZGa51bEp8muimK5UpNhax\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806316f0115b14620000635780635c39fcc1146200008557806366d3820314620000a75780638da5cb5b14620000c7578063e31dff1314620000e9575b600080fd5b6200006d62000109565b6040516200007c91906200072e565b60405180910390f35b6200008f6200012f565b6040516200009e9190620006e4565b60405180910390f35b620000c56004803603810190620000bf919062000566565b62000153565b005b620000d162000227565b604051620000e09190620006e4565b60405180910390f35b620001076004803603810190620001019190620005ea565b6200024d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200022457806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002a857600080fd5b600082604051620002b990620004ee565b620002c591906200077d565b604051809103906000f080158015620002e2573d6000803e3d6000fd5b50905080604051620002f490620004fc565b6200030091906200074b565b604051809103906000f0801580156200031d573d6000803e3d6000fd5b50508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015620003a557600080fd5b505afa158015620003ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003e09190620005be565b6040518363ffffffff1660e01b8152600401620003ff92919062000701565b602060405180830381600087803b1580156200041a57600080fd5b505af11580156200042f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000455919062000592565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368bd440083836040518363ffffffff1660e01b8152600401620004b5929190620007c4565b600060405180830381600087803b158015620004d057600080fd5b505af1158015620004e5573d6000803e3d6000fd5b50505050505050565b611c88806200096683390190565b61255880620025ee83390190565b6000813590506200051b8162000917565b92915050565b600081519050620005328162000931565b92915050565b60008135905062000549816200094b565b92915050565b60008151905062000560816200094b565b92915050565b6000602082840312156200057957600080fd5b600062000589848285016200050a565b91505092915050565b600060208284031215620005a557600080fd5b6000620005b58482850162000521565b91505092915050565b600060208284031215620005d157600080fd5b6000620005e1848285016200054f565b91505092915050565b60008060408385031215620005fe57600080fd5b60006200060e8582860162000538565b9250506020620006218582860162000538565b9150509250929050565b620006368162000802565b82525050565b62000647816200084c565b82525050565b620006588162000874565b82525050565b60006200066d600483620007f1565b91506200067a826200089c565b602082019050919050565b600062000694600c83620007f1565b9150620006a182620008c5565b602082019050919050565b6000620006bb600283620007f1565b9150620006c882620008ee565b602082019050919050565b620006de8162000842565b82525050565b6000602082019050620006fb60008301846200062b565b92915050565b60006040820190506200071860008301856200062b565b620007276020830184620006d3565b9392505050565b60006020820190506200074560008301846200064d565b92915050565b6000604082019050818103600083015262000766816200065e565b90506200077760208301846200063c565b92915050565b60006060820190508181036000830152620007988162000685565b90508181036020830152620007ad81620006ac565b9050620007be6040830184620006d3565b92915050565b6000604082019050620007db6000830185620006d3565b620007ea60208301846200063c565b9392505050565b600082825260208201905092915050565b60006200080f8262000822565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620008598262000860565b9050919050565b60006200086d8262000822565b9050919050565b6000620008818262000888565b9050919050565b6000620008958262000822565b9050919050565b7f6e616d6500000000000000000000000000000000000000000000000000000000600082015250565b7f43726f7764205368617265730000000000000000000000000000000000000000600082015250565b7f4353000000000000000000000000000000000000000000000000000000000000600082015250565b620009228162000802565b81146200092e57600080fd5b50565b6200093c8162000816565b81146200094857600080fd5b50565b620009568162000842565b81146200096257600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001c8838038062001c88833981810160405281019062000037919062000377565b82828160039080519060200190620000519291906200023e565b5080600490805190602001906200006a9291906200023e565b505050620000a93362000082620000b260201b60201c565b600a6200009091906200059e565b836200009d9190620006db565b620000bb60201b60201c565b505050620008e3565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001259062000437565b60405180910390fd5b62000142600083836200023460201b60201c565b8060026000828254620001569190620004e6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001ad9190620004e6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000214919062000459565b60405180910390a362000230600083836200023960201b60201c565b5050565b505050565b505050565b8280546200024c9062000789565b90600052602060002090601f016020900481019282620002705760008555620002bc565b82601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b5b80821115620002ea576000816000905550600101620002d0565b5090565b600062000305620002ff846200049f565b62000476565b9050828152602081018484840111156200031e57600080fd5b6200032b84828562000753565b509392505050565b600082601f8301126200034557600080fd5b815162000357848260208601620002ee565b91505092915050565b6000815190506200037181620008c9565b92915050565b6000806000606084860312156200038d57600080fd5b600084015167ffffffffffffffff811115620003a857600080fd5b620003b68682870162000333565b935050602084015167ffffffffffffffff811115620003d457600080fd5b620003e28682870162000333565b9250506040620003f58682870162000360565b9150509250925092565b60006200040e601f83620004d5565b91506200041b82620008a0565b602082019050919050565b62000431816200073c565b82525050565b600060208201905081810360008301526200045281620003ff565b9050919050565b600060208201905062000470600083018462000426565b92915050565b60006200048262000495565b9050620004908282620007bf565b919050565b6000604051905090565b600067ffffffffffffffff821115620004bd57620004bc62000853565b5b620004c88262000882565b9050602081019050919050565b600082825260208201905092915050565b6000620004f3826200073c565b915062000500836200073c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005385762000537620007f5565b5b828201905092915050565b6000808291508390505b600185111562000595578086048111156200056d576200056c620007f5565b5b60018516156200057d5780820291505b80810290506200058d8562000893565b94506200054d565b94509492505050565b6000620005ab826200073c565b9150620005b88362000746565b9250620005e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620005ef565b905092915050565b600082620006015760019050620006d4565b81620006115760009050620006d4565b81600181146200062a576002811462000635576200066b565b6001915050620006d4565b60ff8411156200064a5762000649620007f5565b5b8360020a915084821115620006645762000663620007f5565b5b50620006d4565b5060208310610133831016604e8410600b8410161715620006a55782820a9050838111156200069f576200069e620007f5565b5b620006d4565b620006b4848484600162000543565b92509050818404811115620006ce57620006cd620007f5565b5b81810290505b9392505050565b6000620006e8826200073c565b9150620006f5836200073c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620007315762000730620007f5565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b60005b838110156200077357808201518184015260208101905062000756565b8381111562000783576000848401525b50505050565b60006002820490506001821680620007a257607f821691505b60208210811415620007b957620007b862000824565b5b50919050565b620007ca8262000882565b810181811067ffffffffffffffff82111715620007ec57620007eb62000853565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620008d4816200073c565b8114620008e057600080fd5b50565b61139580620008f36000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea2646970667358221220546f57453c7afa0b850404e6ad550154cab9e638c3bb3f89cdd3748d5f2c158064736f6c6343000804003360806040523480156200001157600080fd5b5060405162002558380380620025588339818101604052810190620000379190620001d1565b81600190805190602001906200004f92919062000098565b50806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003fd565b828054620000a69062000308565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b60006200015f620001598462000254565b6200022b565b9050828152602081018484840111156200017857600080fd5b62000185848285620002d2565b509392505050565b6000815190506200019e81620003e3565b92915050565b600082601f830112620001b657600080fd5b8151620001c884826020860162000148565b91505092915050565b60008060408385031215620001e557600080fd5b600083015167ffffffffffffffff8111156200020057600080fd5b6200020e85828601620001a4565b925050602062000221858286016200018d565b9150509250929050565b6000620002376200024a565b90506200024582826200033e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002725762000271620003a3565b5b6200027d82620003d2565b9050602081019050919050565b60006200029782620002b2565b9050919050565b6000620002ab826200028a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002f2578082015181840152602081019050620002d5565b8381111562000302576000848401525b50505050565b600060028204905060018216806200032157607f821691505b6020821081141562000338576200033762000374565b5b50919050565b6200034982620003d2565b810181811067ffffffffffffffff821117156200036b576200036a620003a3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003ee816200029e565b8114620003fa57600080fd5b50565b61214b806200040d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063379607f511610071578063379607f514610166578063528f9d5514610182578063688e1d31146101a0578063a694fc3a146101be578063c9d27afe146101da578063f8c0e00f146101f6576100a9565b806306fdde03146100ae5780630f9e4fb5146100cc57806310b1939f146100e8578063150b7a021461011857806316f0115b14610148575b600080fd5b6100b6610212565b6040516100c39190611b38565b60405180910390f35b6100e660048036038101906100e191906116c4565b6102a0565b005b61010260048036038101906100fd91906117c0565b61061a565b60405161010f9190611ac5565b60405180910390f35b610132600480360381019061012d9190611644565b6107be565b60405161013f9190611ae7565b60405180910390f35b6101506107d3565b60405161015d9190611b1d565b60405180910390f35b610180600480360381019061017b91906117c0565b6107f9565b005b61018a610a67565b6040516101979190611bda565b60405180910390f35b6101a8610a6d565b6040516101b59190611b02565b60405180910390f35b6101d860048036038101906101d391906117c0565b610a91565b005b6101f460048036038101906101ef9190611812565b610cfb565b005b610210600480360381019061020b9190611729565b610f3b565b005b6001805461021f90611eb0565b80601f016020809104026020016040519081016040528092919081815260200182805461024b90611eb0565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b505050505081565b60001515600460000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e90611b9a565b60405180910390fd5b600081146104fd5760008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016103a49190611bda565b60206040518083038186803b1580156103bc57600080fd5b505afa1580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f4919061161b565b73ffffffffffffffffffffffffffffffffffffffff16141561044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044290611bba565b60405180910390fd5b600460010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050506105aa565b600460020160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505b6001600460000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b606060008214156106e7576004600101805480602002602001604051908101604052809291908181526020016000905b828210156106dc57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061064a565b5050505090506107b9565b60018214156107b2576004600201805480602002602001604051908101604052809291908181526020016000905b828210156107a757838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610715565b5050505090506107b9565b6060809150505b919050565b600063150b7a0260e01b905095945050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108f85760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108a0929190611a9c565b602060405180830381600087803b1580156108ba57600080fd5b505af11580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190611700565b50610a63565b818110156109b35760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161095b929190611a9c565b602060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad9190611700565b50610a62565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a0e929190611a9c565b602060405180830381600087803b158015610a2857600080fd5b505af1158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a609190611700565b505b5b5050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610aed929190611a3c565b60206040518083038186803b158015610b0557600080fd5b505afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d91906117e9565b1015610bf25760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610b9e929190611a9c565b602060405180830381600087803b158015610bb857600080fd5b505af1158015610bcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf09190611700565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c4f93929190611a65565b602060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca19190611700565b5080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cf19190611cd1565b9250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d579190611a21565b60206040518083038186803b158015610d6f57600080fd5b505afa158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da791906117e9565b1415610de8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddf90611b5a565b60405180910390fd5b600115158115151415610e6657600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008481526020019081526020016000206004016000828254610e5a9190611cd1565b92505081905550610ed3565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008481526020019081526020016000206005016000828254610ecb9190611cd1565b925050819055505b600060076000848152602001908152602001600020600501546007600085815260200190815260200160002060040154610f0d9190611cd1565b905060076000848152602001908152602001600020600601548110610f3657610f3583611253565b5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f979190611a21565b60206040518083038186803b158015610faf57600080fd5b505afa158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe791906117e9565b1415611028576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101f90611b7a565b60405180910390fd5b60016002600082825461103b9190611cd1565b9250508190555060006040518060e0016040528060006002811115611089577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018581526020018481526020018381526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561111657600080fd5b505afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e91906117e9565b600361115a9190611d58565b6111649190611d27565b81525090508060076000600254815260200190815260200160002060008201518160000160006101000a81548160ff021916908360028111156111d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060208201518160010190805190602001906111f192919061135a565b50604082015181600201908051906020019061120e92919061135a565b50606082015181600301908051906020019061122b9291906113e0565b506080820151816004015560a0820151816005015560c0820151816006015590505050505050565b6007600082815260200190815260200160002060050154600760008381526020019081526020016000206004015411156112f15760016007600083815260200190815260200160002060000160006101000a81548160ff021916908360028111156112e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550611357565b60026007600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611351577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b82805461136690611eb0565b90600052602060002090601f01602090048101928261138857600085556113cf565b82601f106113a157805160ff19168380011785556113cf565b828001600101855582156113cf579182015b828111156113ce5782518255916020019190600101906113b3565b5b5090506113dc9190611466565b5090565b8280546113ec90611eb0565b90600052602060002090601f01602090048101928261140e5760008555611455565b82601f1061142757805160ff1916838001178555611455565b82800160010185558215611455579182015b82811115611454578251825591602001919060010190611439565b5b5090506114629190611466565b5090565b5b8082111561147f576000816000905550600101611467565b5090565b600061149661149184611c1a565b611bf5565b9050828152602081018484840111156114ae57600080fd5b6114b9848285611e6e565b509392505050565b60006114d46114cf84611c4b565b611bf5565b9050828152602081018484840111156114ec57600080fd5b6114f7848285611e6e565b509392505050565b60008135905061150e816120d0565b92915050565b600081519050611523816120d0565b92915050565b600081359050611538816120e7565b92915050565b60008151905061154d816120e7565b92915050565b60008083601f84011261156557600080fd5b8235905067ffffffffffffffff81111561157e57600080fd5b60208301915083600182028301111561159657600080fd5b9250929050565b600082601f8301126115ae57600080fd5b81356115be848260208601611483565b91505092915050565b600082601f8301126115d857600080fd5b81356115e88482602086016114c1565b91505092915050565b600081359050611600816120fe565b92915050565b600081519050611615816120fe565b92915050565b60006020828403121561162d57600080fd5b600061163b84828501611514565b91505092915050565b60008060008060006080868803121561165c57600080fd5b600061166a888289016114ff565b955050602061167b888289016114ff565b945050604061168c888289016115f1565b935050606086013567ffffffffffffffff8111156116a957600080fd5b6116b588828901611553565b92509250509295509295909350565b600080604083850312156116d757600080fd5b60006116e5858286016114ff565b92505060206116f6858286016115f1565b9150509250929050565b60006020828403121561171257600080fd5b60006117208482850161153e565b91505092915050565b60008060006060848603121561173e57600080fd5b600084013567ffffffffffffffff81111561175857600080fd5b611764868287016115c7565b935050602084013567ffffffffffffffff81111561178157600080fd5b61178d868287016115c7565b925050604084013567ffffffffffffffff8111156117aa57600080fd5b6117b68682870161159d565b9150509250925092565b6000602082840312156117d257600080fd5b60006117e0848285016115f1565b91505092915050565b6000602082840312156117fb57600080fd5b600061180984828501611606565b91505092915050565b6000806040838503121561182557600080fd5b6000611833858286016115f1565b925050602061184485828601611529565b9150509250929050565b600061185a83836119d4565b60408301905092915050565b61186f81611db2565b82525050565b61187e81611db2565b82525050565b600061188f82611c8c565b6118998185611caf565b93506118a483611c7c565b8060005b838110156118d55781516118bc888261184e565b97506118c783611ca2565b9250506001810190506118a8565b5085935050505092915050565b6118eb81611dd0565b82525050565b6118fa81611e26565b82525050565b61190981611e4a565b82525050565b600061191a82611c97565b6119248185611cc0565b9350611934818560208601611e7d565b61193d81611fcf565b840191505092915050565b6000611955602b83611cc0565b915061196082611fe0565b604082019050919050565b6000611978603c83611cc0565b91506119838261202f565b604082019050919050565b600061199b601c83611cc0565b91506119a68261207e565b602082019050919050565b60006119be601783611cc0565b91506119c9826120a7565b602082019050919050565b6040820160008201516119ea6000850182611866565b5060208201516119fd6020850182611a03565b50505050565b611a0c81611e1c565b82525050565b611a1b81611e1c565b82525050565b6000602082019050611a366000830184611875565b92915050565b6000604082019050611a516000830185611875565b611a5e6020830184611875565b9392505050565b6000606082019050611a7a6000830186611875565b611a876020830185611875565b611a946040830184611a12565b949350505050565b6000604082019050611ab16000830185611875565b611abe6020830184611a12565b9392505050565b60006020820190508181036000830152611adf8184611884565b905092915050565b6000602082019050611afc60008301846118e2565b92915050565b6000602082019050611b1760008301846118f1565b92915050565b6000602082019050611b326000830184611900565b92915050565b60006020820190508181036000830152611b52818461190f565b905092915050565b60006020820190508181036000830152611b7381611948565b9050919050565b60006020820190508181036000830152611b938161196b565b9050919050565b60006020820190508181036000830152611bb38161198e565b9050919050565b60006020820190508181036000830152611bd3816119b1565b9050919050565b6000602082019050611bef6000830184611a12565b92915050565b6000611bff611c10565b9050611c0b8282611ee2565b919050565b6000604051905090565b600067ffffffffffffffff821115611c3557611c34611fa0565b5b611c3e82611fcf565b9050602081019050919050565b600067ffffffffffffffff821115611c6657611c65611fa0565b5b611c6f82611fcf565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611cdc82611e1c565b9150611ce783611e1c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1c57611d1b611f13565b5b828201905092915050565b6000611d3282611e1c565b9150611d3d83611e1c565b925082611d4d57611d4c611f42565b5b828204905092915050565b6000611d6382611e1c565b9150611d6e83611e1c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611da757611da6611f13565b5b828202905092915050565b6000611dbd82611dfc565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611e3182611e38565b9050919050565b6000611e4382611dfc565b9050919050565b6000611e5582611e5c565b9050919050565b6000611e6782611dfc565b9050919050565b82818337600083830152505050565b60005b83811015611e9b578082015181840152602081019050611e80565b83811115611eaa576000848401525b50505050565b60006002820490506001821680611ec857607f821691505b60208210811415611edc57611edb611f71565b5b50919050565b611eeb82611fcf565b810181811067ffffffffffffffff82111715611f0a57611f09611fa0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f20766f7465000000000000000000000000000000000000000000602082015250565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f206372656174652061206e65772070726f706f73616c00000000602082015250565b7f5468697320617373657420697320616c7265616479206c6f636b656400000000600082015250565b7f546869732061737365742069736e2774206c6f636b6564000000000000000000600082015250565b6120d981611db2565b81146120e457600080fd5b50565b6120f081611dc4565b81146120fb57600080fd5b50565b61210781611e1c565b811461211257600080fd5b5056fea26469706673582212209cf0324afc99659533d28313481be1e18f81ad26bcb6bd08f354eaa6c93d815e64736f6c63430008040033a264697066735822122071008b26c02d628915614d70bd99ddc207cd27a92628efa2ed5e14c5f19f5abd64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:991:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "82:92:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "92:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "107:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "101:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "92:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "162:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Pool_$903",
                      "nodeType": "YulIdentifier",
                      "src": "123:38:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "123:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "123:45:11"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Pool_$903_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "60:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "68:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "76:5:11",
                "type": ""
              }
            ],
            "src": "7:167:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "269:219:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "315:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "324:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "327:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "317:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "317:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "317:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "290:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "299:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "286:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "311:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "282:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "282:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "279:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "341:140:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "356:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "370:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "360:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "385:86:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "443:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "454:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "439:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "439:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "463:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Pool_$903_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "395:43:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "395:76:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "385:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Pool_$903_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "239:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "250:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "262:6:11",
                "type": ""
              }
            ],
            "src": "180:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "539:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "549:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "578:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "560:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "549:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "521:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "531:7:11",
                "type": ""
              }
            ],
            "src": "494:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "653:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "663:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "692:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "674:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "663:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Pool_$903",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "635:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "645:7:11",
                "type": ""
              }
            ],
            "src": "596:108:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "755:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "765:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "780:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "787:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "776:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "765:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "737:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "747:7:11",
                "type": ""
              }
            ],
            "src": "710:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "897:91:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "966:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "975:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "978:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "968:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "968:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "968:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "920:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "957:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Pool_$903",
                              "nodeType": "YulIdentifier",
                              "src": "927:29:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "927:36:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "917:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:47:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:55:11"
                  },
                  "nodeType": "YulIf",
                  "src": "907:2:11"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Pool_$903",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "890:5:11",
                "type": ""
              }
            ],
            "src": "842:146:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Pool_$903_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Pool_$903(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Pool_$903_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Pool_$903_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Pool_$903(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Pool_$903(value) {\n        if iszero(eq(value, cleanup_t_contract$_Pool_$903(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8159:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:11",
                "type": ""
              }
            ],
            "src": "7:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:11"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:11",
                "type": ""
              }
            ],
            "src": "152:137:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:11",
                "type": ""
              }
            ],
            "src": "295:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "513:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "528:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "522:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "522:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "513:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "571:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "544:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "544:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "481:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "489:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "497:5:11",
                "type": ""
              }
            ],
            "src": "440:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "655:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "701:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "710:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "713:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "676:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "727:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "742:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "756:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "746:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "771:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "806:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "817:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "802:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "802:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "826:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "781:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "781:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "771:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "625:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "636:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "648:6:11",
                "type": ""
              }
            ],
            "src": "589:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "931:204:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "977:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "986:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "979:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "979:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "979:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "952:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "961:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "948:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "973:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "944:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "944:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "941:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1003:125:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1018:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1032:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1022:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1047:71:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1090:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1101:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1086:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1086:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1110:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1057:28:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:61:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1047:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:11",
                "type": ""
              }
            ],
            "src": "857:278:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:207:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1264:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1273:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1276:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1266:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1266:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1266:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1239:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1248:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1235:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1260:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1231:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1228:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1290:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1305:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1319:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1309:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1334:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1380:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1391:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1376:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1376:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1400:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1344:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1334:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1188:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1199:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1211:6:11",
                "type": ""
              }
            ],
            "src": "1141:284:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1514:324:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1560:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1569:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1572:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1562:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1562:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1562:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1535:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1544:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1531:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1531:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1556:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1527:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1524:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1586:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1601:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1615:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1605:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1630:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1665:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1676:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1661:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1661:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1685:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1640:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1640:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1630:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1713:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1728:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1742:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1732:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1758:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1793:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1804:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1789:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1789:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1813:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1768:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1768:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1758:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1476:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1487:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1499:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1507:6:11",
                "type": ""
              }
            ],
            "src": "1431:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1909:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1926:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1949:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1931:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1931:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1919:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1919:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1919:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1897:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1904:3:11",
                "type": ""
              }
            ],
            "src": "1844:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2048:81:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2065:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2116:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1527_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2070:45:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2070:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2058:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2058:65:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1527_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2036:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2043:3:11",
                "type": ""
              }
            ],
            "src": "1968:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2212:78:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2229:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2277:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Pool_$903_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2234:42:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2222:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2222:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2222:62:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Pool_$903_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2200:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2207:3:11",
                "type": ""
              }
            ],
            "src": "2135:155:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2442:219:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2452:73:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2518:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2523:1:11",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2459:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2452:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2623:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
                      "nodeType": "YulIdentifier",
                      "src": "2534:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2534:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2534:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2636:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2647:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2652:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2643:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2643:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2636:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2430:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2438:3:11",
                "type": ""
              }
            ],
            "src": "2296:365:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2813:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2823:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2889:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2894:2:11",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2830:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2823:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2995:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022",
                      "nodeType": "YulIdentifier",
                      "src": "2906:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2906:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2906:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3008:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3019:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3024:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3015:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3008:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2801:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2809:3:11",
                "type": ""
              }
            ],
            "src": "2667:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3185:219:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3195:73:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3261:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:1:11",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3202:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3195:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3366:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61",
                      "nodeType": "YulIdentifier",
                      "src": "3277:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3277:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3379:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3390:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3395:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3386:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3386:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3379:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3173:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3181:3:11",
                "type": ""
              }
            ],
            "src": "3039:365:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3475:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3492:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3515:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3497:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3497:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3485:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3485:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3485:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3463:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3470:3:11",
                "type": ""
              }
            ],
            "src": "3410:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3632:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3642:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3654:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3665:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3650:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3642:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3722:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3735:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3746:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3731:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3731:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3678:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3678:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3678:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3604:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3616:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3627:4:11",
                "type": ""
              }
            ],
            "src": "3534:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3888:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3898:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3910:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3921:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3906:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3906:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3898:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3978:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3991:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4002:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3987:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3987:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3934:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3934:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3934:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4059:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4072:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4083:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4068:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4068:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4015:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4015:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4015:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3852:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3864:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3872:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3883:4:11",
                "type": ""
              }
            ],
            "src": "3762:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4210:136:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4220:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4232:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4243:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4228:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4228:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4220:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4312:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4325:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4336:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4321:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4321:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$903_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4256:55:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4256:83:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4256:83:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Pool_$903__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4182:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4194:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4205:4:11",
                "type": ""
              }
            ],
            "src": "4100:246:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4566:345:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4576:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4588:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4599:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4584:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4584:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4576:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4623:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4634:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4619:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4619:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4642:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4648:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4638:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4638:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4612:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4612:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4612:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4668:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4802:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4676:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4676:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4668:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4876:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4889:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4900:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4885:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4885:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1527_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4817:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4817:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4817:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60_t_contract$_IERC20_$1527__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4538:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4550:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4561:4:11",
                "type": ""
              }
            ],
            "src": "4352:559:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5217:536:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5227:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5239:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5250:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5235:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5235:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5227:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5274:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5285:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5270:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5270:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5293:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5299:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5289:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5289:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5263:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5263:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5263:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5319:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5453:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5327:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5327:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5319:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5479:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5490:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5475:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5475:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5499:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5505:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5495:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5495:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5468:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5468:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5525:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5659:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5533:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5525:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5718:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5731:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5742:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5727:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5727:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5674:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5674:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5674:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022_t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5189:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5201:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5212:4:11",
                "type": ""
              }
            ],
            "src": "4917:836:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5900:221:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5910:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5922:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5933:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5918:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5918:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5910:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5990:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6003:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6014:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5999:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5999:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5946:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5946:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5946:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6086:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6099:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6110:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6095:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6095:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1527_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6027:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6027:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_contract$_IERC20_$1527__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5864:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5876:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5884:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5895:4:11",
                "type": ""
              }
            ],
            "src": "5759:362:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6223:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6240:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6245:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6233:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6233:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6233:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6261:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6280:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6285:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6276:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6276:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6261:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6195:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6200:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6211:11:11",
                "type": ""
              }
            ],
            "src": "6127:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6347:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6357:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6386:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6368:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6368:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6357:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6329:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6339:7:11",
                "type": ""
              }
            ],
            "src": "6302:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6446:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6456:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6481:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6474:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6474:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6467:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6467:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6456:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6428:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6438:7:11",
                "type": ""
              }
            ],
            "src": "6404:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6545:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6555:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6570:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6577:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6566:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6555:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6527:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6537:7:11",
                "type": ""
              }
            ],
            "src": "6500:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6677:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6687:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6698:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6687:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6659:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6669:7:11",
                "type": ""
              }
            ],
            "src": "6632:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6790:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6800:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6859:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1527_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6813:45:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6813:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6800:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1527_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6770:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6780:9:11",
                "type": ""
              }
            ],
            "src": "6715:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6952:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6962:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6993:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6975:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6975:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6962:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1527_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6932:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6942:9:11",
                "type": ""
              }
            ],
            "src": "6877:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7083:78:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7093:62:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7149:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Pool_$903_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7106:42:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7106:49:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7093:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$903_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7063:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7073:9:11",
                "type": ""
              }
            ],
            "src": "7011:150:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7239:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7249:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7280:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7262:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7262:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7249:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$903_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7219:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7229:9:11",
                "type": ""
              }
            ],
            "src": "7167:125:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7404:48:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7426:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7434:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7422:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7422:14:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7438:6:11",
                        "type": "",
                        "value": "name"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7415:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7415:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7415:30:11"
                }
              ]
            },
            "name": "store_literal_in_memory_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7396:6:11",
                "type": ""
              }
            ],
            "src": "7298:154:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7564:56:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7586:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7594:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7582:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7582:14:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7598:14:11",
                        "type": "",
                        "value": "Crowd Shares"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7575:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7575:38:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7575:38:11"
                }
              ]
            },
            "name": "store_literal_in_memory_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7556:6:11",
                "type": ""
              }
            ],
            "src": "7458:162:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7732:46:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7754:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7762:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7750:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7750:14:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7766:4:11",
                        "type": "",
                        "value": "CS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7743:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7743:28:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7743:28:11"
                }
              ]
            },
            "name": "store_literal_in_memory_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7724:6:11",
                "type": ""
              }
            ],
            "src": "7626:152:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7827:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7884:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7893:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7896:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7886:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7886:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7886:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7850:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7875:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7857:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7857:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7847:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7847:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7840:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7840:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7837:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7820:5:11",
                "type": ""
              }
            ],
            "src": "7784:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7952:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8006:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8015:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8018:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8008:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8008:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8008:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7975:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7997:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7982:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7982:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7972:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7972:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7965:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7965:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7962:2:11"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7945:5:11",
                "type": ""
              }
            ],
            "src": "7912:116:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8077:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8134:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8143:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8146:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8136:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8136:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8136:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8100:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8125:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8107:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8107:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8097:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8097:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8090:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8090:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8087:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8070:5:11",
                "type": ""
              }
            ],
            "src": "8034:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1527_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1527_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Pool_$903_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Pool_$903_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Pool_$903__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Pool_$903_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60_t_contract$_IERC20_$1527__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_contract$_IERC20_$1527_to_t_address_fromStack(value0,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022_t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022_to_t_string_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC20_$1527__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$1527_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$1527_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1527_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1527_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$903_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Pool_$903_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$903_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function store_literal_in_memory_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60(memPtr) {\n\n        mstore(add(memPtr, 0), \"name\")\n\n    }\n\n    function store_literal_in_memory_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowd Shares\")\n\n    }\n\n    function store_literal_in_memory_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61(memPtr) {\n\n        mstore(add(memPtr, 0), \"CS\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "207:1024:2:-:0;;;497:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;539:10;531:5;;:18;;;;;;;;;;;;;;;;;;571:10;559:9;;:22;;;;;;;;;;;;;;;;;;598:5;591:4;;:12;;;;;;;;;;;;;;;;;;497:113;207:1024;;7:167:11;76:5;107:6;101:13;92:22;;123:45;162:5;123:45;:::i;:::-;82:92;;;;:::o;180:308::-;262:6;311:2;299:9;290:7;286:23;282:32;279:2;;;327:1;324;317:12;279:2;370:1;395:76;463:7;454:6;443:9;439:22;395:76;:::i;:::-;385:86;;341:140;269:219;;;;:::o;494:96::-;531:7;560:24;578:5;560:24;:::i;:::-;549:35;;539:51;;;:::o;596:108::-;645:7;674:24;692:5;674:24;:::i;:::-;663:35;;653:51;;;:::o;710:126::-;747:7;787:42;780:5;776:54;765:65;;755:81;;;:::o;842:146::-;927:36;957:5;927:36;:::i;:::-;920:5;917:47;907:2;;978:1;975;968:12;907:2;897:91;:::o;207:1024:2:-;;;;;;;",
  "deployedSourceMap": "207:1024:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;616:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;284:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;353:16;;;;;;;;;;;;;:::o;231:24::-;;;;;;;;;;;;:::o;616:159::-;418:5;;;;;;;;;;;404:19;;:10;:19;;;396:28;;;;;;712:3:::1;686:30;;:14;:30;;;682:87;;744:14;732:9;::::0;:26:::1;;;;;;;;;;;;;;;;;;682:87;616:159:::0;:::o;284:20::-;;;;;;;;;;;;;:::o;781:447::-;480:5;;;;;;;;;;;466:19;;:10;:19;;;458:28;;;;;;901:16:::1;955:14;920:50;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;901:69;;1035:9;1019:26;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;1106:9;:18;;;1133:4;;;;;;;;;;;1140:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1106:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1174:4;;;;;;;;;;;:26;;;1201:8;1211:9;1174:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;488:1;781:447:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;648:6;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:278::-;924:6;973:2;961:9;952:7;948:23;944:32;941:2;;;989:1;986;979:12;941:2;1032:1;1057:61;1110:7;1101:6;1090:9;1086:22;1057:61;:::i;:::-;1047:71;;1003:125;931:204;;;;:::o;1141:284::-;1211:6;1260:2;1248:9;1239:7;1235:23;1231:32;1228:2;;;1276:1;1273;1266:12;1228:2;1319:1;1344:64;1400:7;1391:6;1380:9;1376:22;1344:64;:::i;:::-;1334:74;;1290:128;1218:207;;;;:::o;1431:407::-;1499:6;1507;1556:2;1544:9;1535:7;1531:23;1527:32;1524:2;;;1572:1;1569;1562:12;1524:2;1615:1;1640:53;1685:7;1676:6;1665:9;1661:22;1640:53;:::i;:::-;1630:63;;1586:117;1742:2;1768:53;1813:7;1804:6;1793:9;1789:22;1768:53;:::i;:::-;1758:63;;1713:118;1514:324;;;;;:::o;1844:118::-;1931:24;1949:5;1931:24;:::i;:::-;1926:3;1919:37;1909:53;;:::o;1968:161::-;2070:52;2116:5;2070:52;:::i;:::-;2065:3;2058:65;2048:81;;:::o;2135:155::-;2234:49;2277:5;2234:49;:::i;:::-;2229:3;2222:62;2212:78;;:::o;2296:365::-;2438:3;2459:66;2523:1;2518:3;2459:66;:::i;:::-;2452:73;;2534:93;2623:3;2534:93;:::i;:::-;2652:2;2647:3;2643:12;2636:19;;2442:219;;;:::o;2667:366::-;2809:3;2830:67;2894:2;2889:3;2830:67;:::i;:::-;2823:74;;2906:93;2995:3;2906:93;:::i;:::-;3024:2;3019:3;3015:12;3008:19;;2813:220;;;:::o;3039:365::-;3181:3;3202:66;3266:1;3261:3;3202:66;:::i;:::-;3195:73;;3277:93;3366:3;3277:93;:::i;:::-;3395:2;3390:3;3386:12;3379:19;;3185:219;;;:::o;3410:118::-;3497:24;3515:5;3497:24;:::i;:::-;3492:3;3485:37;3475:53;;:::o;3534:222::-;3627:4;3665:2;3654:9;3650:18;3642:26;;3678:71;3746:1;3735:9;3731:17;3722:6;3678:71;:::i;:::-;3632:124;;;;:::o;3762:332::-;3883:4;3921:2;3910:9;3906:18;3898:26;;3934:71;4002:1;3991:9;3987:17;3978:6;3934:71;:::i;:::-;4015:72;4083:2;4072:9;4068:18;4059:6;4015:72;:::i;:::-;3888:206;;;;;:::o;4100:246::-;4205:4;4243:2;4232:9;4228:18;4220:26;;4256:83;4336:1;4325:9;4321:17;4312:6;4256:83;:::i;:::-;4210:136;;;;:::o;4352:559::-;4561:4;4599:2;4588:9;4584:18;4576:26;;4648:9;4642:4;4638:20;4634:1;4623:9;4619:17;4612:47;4676:131;4802:4;4676:131;:::i;:::-;4668:139;;4817:87;4900:2;4889:9;4885:18;4876:6;4817:87;:::i;:::-;4566:345;;;;:::o;4917:836::-;5212:4;5250:2;5239:9;5235:18;5227:26;;5299:9;5293:4;5289:20;5285:1;5274:9;5270:17;5263:47;5327:131;5453:4;5327:131;:::i;:::-;5319:139;;5505:9;5499:4;5495:20;5490:2;5479:9;5475:18;5468:48;5533:131;5659:4;5533:131;:::i;:::-;5525:139;;5674:72;5742:2;5731:9;5727:18;5718:6;5674:72;:::i;:::-;5217:536;;;;:::o;5759:362::-;5895:4;5933:2;5922:9;5918:18;5910:26;;5946:71;6014:1;6003:9;5999:17;5990:6;5946:71;:::i;:::-;6027:87;6110:2;6099:9;6095:18;6086:6;6027:87;:::i;:::-;5900:221;;;;;:::o;6127:169::-;6211:11;6245:6;6240:3;6233:19;6285:4;6280:3;6276:14;6261:29;;6223:73;;;;:::o;6302:96::-;6339:7;6368:24;6386:5;6368:24;:::i;:::-;6357:35;;6347:51;;;:::o;6404:90::-;6438:7;6481:5;6474:13;6467:21;6456:32;;6446:48;;;:::o;6500:126::-;6537:7;6577:42;6570:5;6566:54;6555:65;;6545:81;;;:::o;6632:77::-;6669:7;6698:5;6687:16;;6677:32;;;:::o;6715:156::-;6780:9;6813:52;6859:5;6813:52;:::i;:::-;6800:65;;6790:81;;;:::o;6877:128::-;6942:9;6975:24;6993:5;6975:24;:::i;:::-;6962:37;;6952:53;;;:::o;7011:150::-;7073:9;7106:49;7149:5;7106:49;:::i;:::-;7093:62;;7083:78;;;:::o;7167:125::-;7229:9;7262:24;7280:5;7262:24;:::i;:::-;7249:37;;7239:53;;;:::o;7298:154::-;7438:6;7434:1;7426:6;7422:14;7415:30;7404:48;:::o;7458:162::-;7598:14;7594:1;7586:6;7582:14;7575:38;7564:56;:::o;7626:152::-;7766:4;7762:1;7754:6;7750:14;7743:28;7732:46;:::o;7784:122::-;7857:24;7875:5;7857:24;:::i;:::-;7850:5;7847:35;7837:2;;7896:1;7893;7886:12;7837:2;7827:79;:::o;7912:116::-;7982:21;7997:5;7982:21;:::i;:::-;7975:5;7972:32;7962:2;;8018:1;8015;8008:12;7962:2;7952:76;:::o;8034:122::-;8107:24;8125:5;8107:24;:::i;:::-;8100:5;8097:35;8087:2;;8146:1;8143;8136:12;8087:2;8077:79;:::o",
  "source": "pragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./Pool.sol\";\nimport \"./DaoToken.sol\";\nimport \"./Dao.sol\";\n\ncontract Factory {\n\n    address public initiator;  // Offchain initiator\n    address public owner;  // Will allow to setup offchain initiator\n    Pool public pool;\n\n    modifier ownerOnly {require(msg.sender == owner); _;}\n    modifier initiatorOnly {require(msg.sender == owner); _;}\n\n    constructor(Pool _pool) {\n        owner = msg.sender;\n        initiator = msg.sender;\n        pool = _pool;\n    }\n\n    function setup(address _new_initiator) public ownerOnly {\n        if (_new_initiator != address(0x0)) {\n            initiator = _new_initiator;\n        }\n    }\n\n    function new_dao(uint _shares_amount, uint _pool_id) public initiatorOnly {\n        //  Setting up the emission\n        IERC20 dao_token = new DaoToken(\"Crowd Shares\", \"CS\", _shares_amount);\n        //  Building the brand new DAO\n        new Dao(\"name\", dao_token);\n        //  Sending tokens to Dao for distribution\n        dao_token.transfer(address(pool), dao_token.totalSupply());\n        pool.distribute_dao_tokens(_pool_id, dao_token);\n    }\n\n}\n",
  "sourcePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1708
      ],
      "Dao": [
        471
      ],
      "DaoToken": [
        502
      ],
      "ERC20": [
        1449
      ],
      "Factory": [
        627
      ],
      "IERC165": [
        1720
      ],
      "IERC20": [
        1527
      ],
      "IERC20Metadata": [
        1552
      ],
      "IERC721": [
        1668
      ],
      "IERC721Receiver": [
        1686
      ],
      "Pool": [
        903
      ]
    },
    "id": 628,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 504,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 505,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 1528,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 506,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 1669,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 507,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 904,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 508,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 503,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 509,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 472,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          471,
          502
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 627,
        "linearizedBaseContracts": [
          627
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 511,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 510,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 513,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 512,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 516,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$903",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 515,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 514,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 903,
                "src": "353:4:2"
              },
              "referencedDeclaration": 903,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$903",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 521,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 525,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 527,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 530,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 532,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 536,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 538,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "521:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 544,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "531:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 545,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "539:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "539:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "531:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "531:18:2"
                },
                {
                  "expression": {
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 549,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "559:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 550,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "571:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "571:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "559:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "559:22:2"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 554,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "591:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$903",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "598:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$903",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "591:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$903",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "591:12:2"
                }
              ]
            },
            "id": 559,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "514:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "509:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$903",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 539,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 903,
                      "src": "509:4:2"
                    },
                    "referencedDeclaration": 903,
                    "src": "509:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$903",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:12:2"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:2"
            },
            "scope": 627,
            "src": "497:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "672:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 566,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "686:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "712:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "704:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "704:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "704:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "686:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 577,
                  "nodeType": "IfStatement",
                  "src": "682:87:2",
                  "trueBody": {
                    "id": 576,
                    "nodeType": "Block",
                    "src": "718:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 572,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "732:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 573,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 561,
                            "src": "744:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "732:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "732:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 563,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 527,
                  "src": "662:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "662:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "625:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "639:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "631:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:24:2"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:2"
            },
            "scope": 627,
            "src": "616:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "855:373:2",
              "statements": [
                {
                  "assignments": [
                    590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 590,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "908:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "901:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1527",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 589,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 588,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1527,
                          "src": "901:6:2"
                        },
                        "referencedDeclaration": 1527,
                        "src": "901:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 598,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43726f776420536861726573",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "933:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022",
                          "typeString": "literal_string \"Crowd Shares\""
                        },
                        "value": "Crowd Shares"
                      },
                      {
                        "hexValue": "4353",
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "949:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61",
                          "typeString": "literal_string \"CS\""
                        },
                        "value": "CS"
                      },
                      {
                        "id": 596,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "955:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022",
                          "typeString": "literal_string \"Crowd Shares\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61",
                          "typeString": "literal_string \"CS\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "920:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_DaoToken_$502_$",
                        "typeString": "function (string memory,string memory,uint256) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 592,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 591,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 502,
                          "src": "924:8:2"
                        },
                        "referencedDeclaration": 502,
                        "src": "924:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$502",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$502",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "901:69:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e616d65",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1027:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
                          "typeString": "literal_string \"name\""
                        },
                        "value": "name"
                      },
                      {
                        "id": 603,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1035:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
                          "typeString": "literal_string \"name\""
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1019:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1527_$returns$_t_contract$_Dao_$471_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 600,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 599,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 471,
                          "src": "1023:3:2"
                        },
                        "referencedDeclaration": 471,
                        "src": "1023:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$471",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$471",
                      "typeString": "contract Dao"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:26:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 611,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "1133:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$903",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$903",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1125:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1125:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 613,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "1140:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1527",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1458,
                          "src": "1140:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1140:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 606,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1106:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1476,
                      "src": "1106:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 621,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "1201:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 622,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1211:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 618,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1174:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$903",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "1174:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC20_$1527_$returns$__$",
                        "typeString": "function (uint256,contract IERC20) external"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:47:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 585,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "841:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "841:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "790:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "803:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "798:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "824:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "819:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:36:2"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:2"
            },
            "scope": 627,
            "src": "781:447:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 628,
        "src": "207:1024:2",
        "usedErrors": []
      }
    ],
    "src": "0:1232:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1708
      ],
      "Dao": [
        471
      ],
      "DaoToken": [
        502
      ],
      "ERC20": [
        1449
      ],
      "Factory": [
        627
      ],
      "IERC165": [
        1720
      ],
      "IERC20": [
        1527
      ],
      "IERC20Metadata": [
        1552
      ],
      "IERC721": [
        1668
      ],
      "IERC721Receiver": [
        1686
      ],
      "Pool": [
        903
      ]
    },
    "id": 628,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 504,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 505,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 1528,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 506,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 1669,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 507,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 904,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 508,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 503,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 509,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 472,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          471,
          502
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 627,
        "linearizedBaseContracts": [
          627
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 511,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 510,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 513,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 512,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 516,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$903",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 515,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 514,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 903,
                "src": "353:4:2"
              },
              "referencedDeclaration": 903,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$903",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 521,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 525,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 527,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 530,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 532,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 536,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 538,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "521:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 544,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "531:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 545,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "539:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "539:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "531:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "531:18:2"
                },
                {
                  "expression": {
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 549,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "559:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 550,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "571:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "571:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "559:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "559:22:2"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 554,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "591:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$903",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "598:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$903",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "591:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$903",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "591:12:2"
                }
              ]
            },
            "id": 559,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "514:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "509:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$903",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 539,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 903,
                      "src": "509:4:2"
                    },
                    "referencedDeclaration": 903,
                    "src": "509:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$903",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:12:2"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:2"
            },
            "scope": 627,
            "src": "497:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "672:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 566,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "686:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "712:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "704:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "704:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "704:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "686:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 577,
                  "nodeType": "IfStatement",
                  "src": "682:87:2",
                  "trueBody": {
                    "id": 576,
                    "nodeType": "Block",
                    "src": "718:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 572,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "732:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 573,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 561,
                            "src": "744:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "732:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "732:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 563,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 527,
                  "src": "662:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "662:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "625:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "639:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "631:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:24:2"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:2"
            },
            "scope": 627,
            "src": "616:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "855:373:2",
              "statements": [
                {
                  "assignments": [
                    590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 590,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "908:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "901:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1527",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 589,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 588,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1527,
                          "src": "901:6:2"
                        },
                        "referencedDeclaration": 1527,
                        "src": "901:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 598,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43726f776420536861726573",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "933:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022",
                          "typeString": "literal_string \"Crowd Shares\""
                        },
                        "value": "Crowd Shares"
                      },
                      {
                        "hexValue": "4353",
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "949:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61",
                          "typeString": "literal_string \"CS\""
                        },
                        "value": "CS"
                      },
                      {
                        "id": 596,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "955:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_719ef26d7cf4ae4abf6d71853bac0ec5e64758e98c5be542d50efeb3e016c022",
                          "typeString": "literal_string \"Crowd Shares\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5ea999077296caf134ec2c23d97400e30e312fa37c4ffd742b6ce5f1971af61",
                          "typeString": "literal_string \"CS\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "920:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_DaoToken_$502_$",
                        "typeString": "function (string memory,string memory,uint256) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 592,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 591,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 502,
                          "src": "924:8:2"
                        },
                        "referencedDeclaration": 502,
                        "src": "924:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$502",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$502",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "901:69:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e616d65",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1027:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
                          "typeString": "literal_string \"name\""
                        },
                        "value": "name"
                      },
                      {
                        "id": 603,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1035:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
                          "typeString": "literal_string \"name\""
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1019:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1527_$returns$_t_contract$_Dao_$471_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 600,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 599,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 471,
                          "src": "1023:3:2"
                        },
                        "referencedDeclaration": 471,
                        "src": "1023:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$471",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$471",
                      "typeString": "contract Dao"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:26:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 611,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "1133:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$903",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$903",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1125:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1125:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 613,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "1140:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1527",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1458,
                          "src": "1140:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1140:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 606,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1106:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1476,
                      "src": "1106:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 621,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "1201:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 622,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1211:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1527",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 618,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1174:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$903",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "1174:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC20_$1527_$returns$__$",
                        "typeString": "function (uint256,contract IERC20) external"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:47:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 585,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "841:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "841:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "790:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "803:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "798:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "824:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "819:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:36:2"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:2"
            },
            "scope": 627,
            "src": "781:447:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 628,
        "src": "207:1024:2",
        "usedErrors": []
      }
    ],
    "src": "0:1232:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-25T15:13:59.809Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}