{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Pool",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dao_token",
          "type": "address"
        }
      ],
      "name": "NewDao",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "initiator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_initiator",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pool_id",
          "type": "uint256"
        }
      ],
      "name": "new_dao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Pool\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao_token\",\"type\":\"address\"}],\"name\":\"NewDao\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"initiator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool_id\",\"type\":\"uint256\"}],\"name\":\"new_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_initiator\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol\":{\"keccak256\":\"0x43cee9f735b95eed25dcb2938b7aff6ac96b5f3afd5c4c308b0c4ca3411a17a3\",\"urls\":[\"bzz-raw://e218968c219b145ed19b1d3871d2c7328a9773ca84bc96a767071eca49e83629\",\"dweb:/ipfs/QmWpfD5VE7fQaihdUiru6kbCzk1cryhLkYVWttWt1pNJjX\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol\":{\"keccak256\":\"0x08e78c126225c0f24f976c2b19e690fdbf316ba30e03211fd271878c362d2ca1\",\"urls\":[\"bzz-raw://1acdf87f4d4fcf57a074b8714ada6beac3fd6a1311353017830aa2a6462d5f88\",\"dweb:/ipfs/QmR2TMPGrt6VeMTRrWFRbf2cw7Uwb8qfrMxkbD8QY8gc2z\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol\":{\"keccak256\":\"0x57bf45f663424f95a0de87ee99f9eed83558734f03b5862ea6dee716855018a8\",\"urls\":[\"bzz-raw://cbd900953e1ba06e1f5a79c69429a16f8c19a24316f080d0dc4ef392bdef1b62\",\"dweb:/ipfs/QmTnw5w7nFUYh9MZxBT48hfHczipMEZ6GNv5zju9arVgUq\"]},\"/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol\":{\"keccak256\":\"0x4a57ac3538cebcacd3be03be64e2e4302a07ce695bb28b6770f52b5397fadd86\",\"urls\":[\"bzz-raw://4652c9599b37ff4293bf2ea7a65b247dbb55d9818ee313c676ed0e073ac6a78b\",\"dweb:/ipfs/Qme4zdg3cB5HHRRTaWG14fwpG6NuHkD3Ng88dUdKZbDxBM\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806316f0115b14620000635780635c39fcc1146200008557806366d3820314620000a75780638da5cb5b14620000c7578063e31dff1314620000e9575b600080fd5b6200006d62000109565b6040516200007c919062000749565b60405180910390f35b6200008f6200012f565b6040516200009e91906200072c565b60405180910390f35b620000c56004803603810190620000bf9190620005c7565b62000153565b005b620000d162000227565b604051620000e091906200072c565b60405180910390f35b62000107600480360381019062000101919062000666565b6200024d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200022457806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002a857600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639215d96f846040518263ffffffff1660e01b815260040162000308919062000819565b60006040518083038186803b1580156200032157600080fd5b505afa15801562000336573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620003619190620005f3565b915091506000828286600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200039b906200050b565b620003aa9493929190620007be565b604051809103906000f080158015620003c7573d6000803e3d6000fd5b50905060008382604051620003dc9062000519565b620003e99291906200078a565b604051809103906000f08015801562000406573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87a2ae0205f28cf6777eb213e867569f69e687e4b090364233360729fb68392d8660405162000468919062000766565b60405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368bd440086846040518363ffffffff1660e01b8152600401620004cf92919062000836565b600060405180830381600087803b158015620004ea57600080fd5b505af1158015620004ff573d6000803e3d6000fd5b50505050505050505050565b611d048062000a4d83390190565b612a67806200275183390190565b60006200053e62000538846200088c565b62000863565b9050828152602081018484840111156200055757600080fd5b620005648482856200096c565b509392505050565b6000813590506200057d8162000a18565b92915050565b600082601f8301126200059557600080fd5b8151620005a784826020860162000527565b91505092915050565b600081359050620005c18162000a32565b92915050565b600060208284031215620005da57600080fd5b6000620005ea848285016200056c565b91505092915050565b600080604083850312156200060757600080fd5b600083015167ffffffffffffffff8111156200062257600080fd5b620006308582860162000583565b925050602083015167ffffffffffffffff8111156200064e57600080fd5b6200065c8582860162000583565b9150509250929050565b600080604083850312156200067a57600080fd5b60006200068a85828601620005b0565b92505060206200069d85828601620005b0565b9150509250929050565b620006b281620008de565b82525050565b620006c3816200091c565b82525050565b620006d48162000944565b82525050565b6000620006e782620008c2565b620006f38185620008cd565b9350620007058185602086016200096c565b620007108162000a07565b840191505092915050565b620007268162000912565b82525050565b6000602082019050620007436000830184620006a7565b92915050565b6000602082019050620007606000830184620006c9565b92915050565b60006020820190508181036000830152620007828184620006da565b905092915050565b60006040820190508181036000830152620007a68185620006da565b9050620007b76020830184620006b8565b9392505050565b60006080820190508181036000830152620007da8187620006da565b90508181036020830152620007f08186620006da565b90506200080160408301856200071b565b620008106060830184620006a7565b95945050505050565b60006020820190506200083060008301846200071b565b92915050565b60006040820190506200084d60008301856200071b565b6200085c6020830184620006b8565b9392505050565b60006200086f62000882565b90506200087d8282620009a2565b919050565b6000604051905090565b600067ffffffffffffffff821115620008aa57620008a9620009d8565b5b620008b58262000a07565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620008eb82620008f2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620009298262000930565b9050919050565b60006200093d82620008f2565b9050919050565b6000620009518262000958565b9050919050565b60006200096582620008f2565b9050919050565b60005b838110156200098c5780820151818401526020810190506200096f565b838111156200099c576000848401525b50505050565b620009ad8262000a07565b810181811067ffffffffffffffff82111715620009cf57620009ce620009d8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000a2381620008de565b811462000a2f57600080fd5b50565b62000a3d8162000912565b811462000a4957600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001d0438038062001d0483398181016040528101906200003791906200038f565b83838160039080519060200190620000519291906200023f565b5080600490805190602001906200006a9291906200023f565b505050620000a98162000082620000b360201b60201c565b600a620000909190620005cc565b846200009d919062000709565b620000bc60201b60201c565b505050506200095f565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001269062000465565b60405180910390fd5b62000143600083836200023560201b60201c565b806002600082825462000157919062000514565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001ae919062000514565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000215919062000487565b60405180910390a362000231600083836200023a60201b60201c565b5050565b505050565b505050565b8280546200024d90620007eb565b90600052602060002090601f016020900481019282620002715760008555620002bd565b82601f106200028c57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bc5782518255916020019190600101906200029f565b5b509050620002cc9190620002d0565b5090565b5b80821115620002eb576000816000905550600101620002d1565b5090565b6000620003066200030084620004cd565b620004a4565b9050828152602081018484840111156200031f57600080fd5b6200032c848285620007b5565b509392505050565b60008151905062000345816200092b565b92915050565b600082601f8301126200035d57600080fd5b81516200036f848260208601620002ef565b91505092915050565b600081519050620003898162000945565b92915050565b60008060008060808587031215620003a657600080fd5b600085015167ffffffffffffffff811115620003c157600080fd5b620003cf878288016200034b565b945050602085015167ffffffffffffffff811115620003ed57600080fd5b620003fb878288016200034b565b93505060406200040e8782880162000378565b9250506060620004218782880162000334565b91505092959194509250565b60006200043c601f8362000503565b9150620004498262000902565b602082019050919050565b6200045f816200079e565b82525050565b6000602082019050818103600083015262000480816200042d565b9050919050565b60006020820190506200049e600083018462000454565b92915050565b6000620004b0620004c3565b9050620004be828262000821565b919050565b6000604051905090565b600067ffffffffffffffff821115620004eb57620004ea620008b5565b5b620004f682620008e4565b9050602081019050919050565b600082825260208201905092915050565b600062000521826200079e565b91506200052e836200079e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000566576200056562000857565b5b828201905092915050565b6000808291508390505b6001851115620005c3578086048111156200059b576200059a62000857565b5b6001851615620005ab5780820291505b8081029050620005bb85620008f5565b94506200057b565b94509492505050565b6000620005d9826200079e565b9150620005e683620007a8565b9250620006157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200061d565b905092915050565b6000826200062f576001905062000702565b816200063f576000905062000702565b8160018114620006585760028114620006635762000699565b600191505062000702565b60ff84111562000678576200067762000857565b5b8360020a91508482111562000692576200069162000857565b5b5062000702565b5060208310610133831016604e8410600b8410161715620006d35782820a905083811115620006cd57620006cc62000857565b5b62000702565b620006e2848484600162000571565b92509050818404811115620006fc57620006fb62000857565b5b81810290505b9392505050565b600062000716826200079e565b915062000723836200079e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200075f576200075e62000857565b5b828202905092915050565b600062000777826200077e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620007d5578082015181840152602081019050620007b8565b83811115620007e5576000848401525b50505050565b600060028204905060018216806200080457607f821691505b602082108114156200081b576200081a62000886565b5b50919050565b6200082c82620008e4565b810181811067ffffffffffffffff821117156200084e576200084d620008b5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000936816200076a565b81146200094257600080fd5b50565b62000950816200079e565b81146200095c57600080fd5b50565b611395806200096f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea2646970667358221220803b65279b0b99b4cd4975d10e0ed53cdf622d5e45acf757e61245c7c8bec42a64736f6c6343000804003360806040523480156200001157600080fd5b5060405162002a6738038062002a678339818101604052810190620000379190620001d1565b81600190805190602001906200004f92919062000098565b50806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003fd565b828054620000a69062000308565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b60006200015f620001598462000254565b6200022b565b9050828152602081018484840111156200017857600080fd5b62000185848285620002d2565b509392505050565b6000815190506200019e81620003e3565b92915050565b600082601f830112620001b657600080fd5b8151620001c884826020860162000148565b91505092915050565b60008060408385031215620001e557600080fd5b600083015167ffffffffffffffff8111156200020057600080fd5b6200020e85828601620001a4565b925050602062000221858286016200018d565b9150509250929050565b6000620002376200024a565b90506200024582826200033e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002725762000271620003a3565b5b6200027d82620003d2565b9050602081019050919050565b60006200029782620002b2565b9050919050565b6000620002ab826200028a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002f2578082015181840152602081019050620002d5565b8381111562000302576000848401525b50505050565b600060028204905060018216806200032157607f821691505b6020821081141562000338576200033762000374565b5b50919050565b6200034982620003d2565b810181811067ffffffffffffffff821117156200036b576200036a620003a3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003ee816200029e565b8114620003fa57600080fd5b50565b61265a806200040d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063528f9d5511610071578063528f9d551461019f578063688e1d31146101bd578063a694fc3a146101db578063c9d27afe146101f7578063e4dd26cf14610213578063e9a4b6911461022f576100b4565b806306fdde03146100b95780630f9e4fb5146100d757806310b1939f146100f3578063150b7a021461012357806317eb2f0914610153578063379607f514610183575b600080fd5b6100c161024b565b6040516100ce9190612015565b60405180910390f35b6100f160048036038101906100ec9190611aae565b6102d9565b005b61010d60048036038101906101089190611c3d565b610652565b60405161011a9190611fa2565b60405180910390f35b61013d60048036038101906101389190611a2e565b6107f6565b60405161014a9190611fdf565b60405180910390f35b61016d60048036038101906101689190611c3d565b61080b565b60405161017a9190611fc4565b60405180910390f35b61019d60048036038101906101989190611c3d565b61085b565b005b6101a7610ac9565b6040516101b491906120b7565b60405180910390f35b6101c5610acf565b6040516101d29190611ffa565b60405180910390f35b6101f560048036038101906101f09190611c3d565b610af3565b005b610211600480360381019061020c9190611c8f565b610d5d565b005b61022d60048036038101906102289190611b13565b610f9d565b005b61024960048036038101906102449190611baa565b611344565b005b60018054610258906123a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610284906123a8565b80156102d15780601f106102a6576101008083540402835291602001916102d1565b820191906000526020600020905b8154815290600101906020018083116102b457829003601f168201915b505050505081565b60001515600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790612077565b60405180910390fd5b600081146105355760008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016103dd91906120b7565b60206040518083038186803b1580156103f557600080fd5b505afa158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d9190611a05565b73ffffffffffffffffffffffffffffffffffffffff1614610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90612097565b60405180910390fd5b600360010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050506105e2565b600360020160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505b6001600360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600082141561071f576003600101805480602002602001604051908101604052809291908181526020016000905b8282101561071457838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610682565b5050505090506107f1565b60018214156107ea576003600201805480602002602001604051908101604052809291908181526020016000905b828210156107df57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061074d565b5050505090506107f1565b6060809150505b919050565b600063150b7a0260e01b905095945050505050565b61081361170d565b60405180604001604052806006600085815260200190815260200160002060060154815260200160066000858152602001908152602001600020600701548152509050919050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561095a5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610902929190611f79565b602060405180830381600087803b15801561091c57600080fd5b505af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190611aea565b50610ac5565b81811015610a155760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109bd929190611f79565b602060405180830381600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190611aea565b50610ac4565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a70929190611f79565b602060405180830381600087803b158015610a8a57600080fd5b505af1158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac29190611aea565b505b5b5050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610b4f929190611f19565b60206040518083038186803b158015610b6757600080fd5b505afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611c66565b1015610c545760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610c00929190611f79565b602060405180830381600087803b158015610c1a57600080fd5b505af1158015610c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c529190611aea565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610cb193929190611f42565b602060405180830381600087803b158015610ccb57600080fd5b505af1158015610cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d039190611aea565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5391906121db565b9250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610db99190611efe565b60206040518083038186803b158015610dd157600080fd5b505afa158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190611c66565b1415610e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4190612037565b60405180910390fd5b600115158115151415610ec857600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600660008481526020019081526020016000206006016000828254610ebc91906121db565b92505081905550610f35565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600660008481526020019081526020016000206007016000828254610f2d91906121db565b925050819055505b600060066000848152602001908152602001600020600701546006600085815260200190815260200160002060060154610f6f91906121db565b905060066000848152602001908152602001600020600801548110610f9857610f9783611606565b5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ff99190611efe565b60206040518083038186803b15801561101157600080fd5b505afa158015611025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110499190611c66565b141561108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190612057565b60405180910390fd5b60016002600082825461109d91906121db565b925050819055506000604051806101000160405280600060028111156110ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018581526020018481526020018381526020016040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525081526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ab57600080fd5b505afa1580156111bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e39190611c66565b60036111ef9190612262565b6111f99190612231565b81525090508060066000600254815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611265577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101908051906020019061128692919061172f565b5060408201518160020190805190602001906112a392919061172f565b5060608201518160030190805190602001906112c09291906117b5565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050565b60016002600082825461135791906121db565b925050819055506060600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481525090506000604051806101000160405280600060028111156113d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018881526020018781526020018481526020018381526020016000815260200160008152602001600460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561146a57600080fd5b505afa15801561147e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a29190611c66565b60036114ae9190612262565b6114b89190612231565b81525090508060066000600254815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611524577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101908051906020019061154592919061172f565b50604082015181600201908051906020019061156292919061172f565b50606082015181600301908051906020019061157f9291906117b5565b5060808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a0820151816006015560c0820151816007015560e0820151816008015590505050505050505050565b6006600082815260200190815260200160002060070154600660008381526020019081526020016000206006015411156116a45760016006600083815260200190815260200160002060000160006101000a81548160ff0219169083600281111561169a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555061170a565b60026006600083815260200190815260200160002060000160006101000a81548160ff02191690836002811115611704577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6040518060400160405280600290602082028036833780820191505090505090565b82805461173b906123a8565b90600052602060002090601f01602090048101928261175d57600085556117a4565b82601f1061177657805160ff19168380011785556117a4565b828001600101855582156117a4579182015b828111156117a3578251825591602001919060010190611788565b5b5090506117b1919061183b565b5090565b8280546117c1906123a8565b90600052602060002090601f0160209004810192826117e3576000855561182a565b82601f106117fc57805160ff191683800117855561182a565b8280016001018555821561182a579182015b8281111561182957825182559160200191906001019061180e565b5b509050611837919061183b565b5090565b5b8082111561185457600081600090555060010161183c565b5090565b600061186b611866846120f7565b6120d2565b90508281526020810184848401111561188357600080fd5b61188e848285612366565b509392505050565b60006118a96118a484612128565b6120d2565b9050828152602081018484840111156118c157600080fd5b6118cc848285612366565b509392505050565b6000813590506118e3816125c8565b92915050565b6000815190506118f8816125c8565b92915050565b60008135905061190d816125df565b92915050565b600081519050611922816125df565b92915050565b60008083601f84011261193a57600080fd5b8235905067ffffffffffffffff81111561195357600080fd5b60208301915083600182028301111561196b57600080fd5b9250929050565b600082601f83011261198357600080fd5b8135611993848260208601611858565b91505092915050565b6000813590506119ab816125f6565b92915050565b600082601f8301126119c257600080fd5b81356119d2848260208601611896565b91505092915050565b6000813590506119ea8161260d565b92915050565b6000815190506119ff8161260d565b92915050565b600060208284031215611a1757600080fd5b6000611a25848285016118e9565b91505092915050565b600080600080600060808688031215611a4657600080fd5b6000611a54888289016118d4565b9550506020611a65888289016118d4565b9450506040611a76888289016119db565b935050606086013567ffffffffffffffff811115611a9357600080fd5b611a9f88828901611928565b92509250509295509295909350565b60008060408385031215611ac157600080fd5b6000611acf858286016118d4565b9250506020611ae0858286016119db565b9150509250929050565b600060208284031215611afc57600080fd5b6000611b0a84828501611913565b91505092915050565b600080600060608486031215611b2857600080fd5b600084013567ffffffffffffffff811115611b4257600080fd5b611b4e868287016119b1565b935050602084013567ffffffffffffffff811115611b6b57600080fd5b611b77868287016119b1565b925050604084013567ffffffffffffffff811115611b9457600080fd5b611ba086828701611972565b9150509250925092565b60008060008060808587031215611bc057600080fd5b600085013567ffffffffffffffff811115611bda57600080fd5b611be6878288016119b1565b945050602085013567ffffffffffffffff811115611c0357600080fd5b611c0f878288016119b1565b9350506040611c208782880161199c565b9250506060611c31878288016119db565b91505092959194509250565b600060208284031215611c4f57600080fd5b6000611c5d848285016119db565b91505092915050565b600060208284031215611c7857600080fd5b6000611c86848285016119f0565b91505092915050565b60008060408385031215611ca257600080fd5b6000611cb0858286016119db565b9250506020611cc1858286016118fe565b9150509250929050565b6000611cd78383611eb1565b60408301905092915050565b6000611cef8383611ee0565b60208301905092915050565b611d04816122bc565b82525050565b611d13816122bc565b82525050565b6000611d2482612173565b611d2e81856121ae565b9350611d3983612159565b8060005b83811015611d6a578151611d518882611ccb565b9750611d5c83612194565b925050600181019050611d3d565b5085935050505092915050565b611d808161217e565b611d8a81846121bf565b9250611d9582612169565b8060005b83811015611dc6578151611dad8782611ce3565b9650611db8836121a1565b925050600181019050611d99565b505050505050565b611dd7816122da565b82525050565b611de681612342565b82525050565b6000611df782612189565b611e0181856121ca565b9350611e11818560208601612375565b611e1a816124c7565b840191505092915050565b6000611e32602b836121ca565b9150611e3d826124d8565b604082019050919050565b6000611e55603c836121ca565b9150611e6082612527565b604082019050919050565b6000611e78601c836121ca565b9150611e8382612576565b602082019050919050565b6000611e9b6017836121ca565b9150611ea68261259f565b602082019050919050565b604082016000820151611ec76000850182611cfb565b506020820151611eda6020850182611ee0565b50505050565b611ee981612338565b82525050565b611ef881612338565b82525050565b6000602082019050611f136000830184611d0a565b92915050565b6000604082019050611f2e6000830185611d0a565b611f3b6020830184611d0a565b9392505050565b6000606082019050611f576000830186611d0a565b611f646020830185611d0a565b611f716040830184611eef565b949350505050565b6000604082019050611f8e6000830185611d0a565b611f9b6020830184611eef565b9392505050565b60006020820190508181036000830152611fbc8184611d19565b905092915050565b6000604082019050611fd96000830184611d77565b92915050565b6000602082019050611ff46000830184611dce565b92915050565b600060208201905061200f6000830184611ddd565b92915050565b6000602082019050818103600083015261202f8184611dec565b905092915050565b6000602082019050818103600083015261205081611e25565b9050919050565b6000602082019050818103600083015261207081611e48565b9050919050565b6000602082019050818103600083015261209081611e6b565b9050919050565b600060208201905081810360008301526120b081611e8e565b9050919050565b60006020820190506120cc6000830184611eef565b92915050565b60006120dc6120ed565b90506120e882826123da565b919050565b6000604051905090565b600067ffffffffffffffff82111561211257612111612498565b5b61211b826124c7565b9050602081019050919050565b600067ffffffffffffffff82111561214357612142612498565b5b61214c826124c7565b9050602081019050919050565b6000819050602082019050919050565b6000819050919050565b600081519050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006121e682612338565b91506121f183612338565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122265761222561240b565b5b828201905092915050565b600061223c82612338565b915061224783612338565b9250826122575761225661243a565b5b828204905092915050565b600061226d82612338565b915061227883612338565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122b1576122b061240b565b5b828202905092915050565b60006122c782612318565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000612311826122bc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061234d82612354565b9050919050565b600061235f82612318565b9050919050565b82818337600083830152505050565b60005b83811015612393578082015181840152602081019050612378565b838111156123a2576000848401525b50505050565b600060028204905060018216806123c057607f821691505b602082108114156123d4576123d3612469565b5b50919050565b6123e3826124c7565b810181811067ffffffffffffffff8211171561240257612401612498565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f20766f7465000000000000000000000000000000000000000000602082015250565b7f506c65617365207374616b6520796f757220676f7665726e616e636520746f6b60008201527f656e7320746f206372656174652061206e65772070726f706f73616c00000000602082015250565b7f5468697320617373657420697320616c7265616479206c6f636b656400000000600082015250565b7f546869732061737365742069736e2774206c6f636b6564000000000000000000600082015250565b6125d1816122bc565b81146125dc57600080fd5b50565b6125e8816122ce565b81146125f357600080fd5b50565b6125ff81612306565b811461260a57600080fd5b50565b61261681612338565b811461262157600080fd5b5056fea26469706673582212208fc5522d9caf3016f556481ae93df9d452ca139f3f2bec95472b64d66a8ca62664736f6c63430008040033a2646970667358221220065bcfc31492659702d1b2a3afa99047430bcc43f505accc386e1ac88934752164736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:998:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:93:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "93:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "108:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "164:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Pool_$1132",
                      "nodeType": "YulIdentifier",
                      "src": "124:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "124:46:11"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Pool_$1132_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "69:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "77:5:11",
                "type": ""
              }
            ],
            "src": "7:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "272:220:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "318:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "327:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "320:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "320:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "320:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "293:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "302:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "289:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "289:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "314:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "285:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "285:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "282:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "344:141:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "359:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "373:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "363:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "388:87:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "447:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "458:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "443:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "443:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "467:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Pool_$1132_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "398:44:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "398:77:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "388:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Pool_$1132_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:11",
                "type": ""
              }
            ],
            "src": "182:310:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "543:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "553:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "582:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "564:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "553:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "525:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "535:7:11",
                "type": ""
              }
            ],
            "src": "498:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "658:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "668:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "697:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "679:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "668:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Pool_$1132",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "640:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "650:7:11",
                "type": ""
              }
            ],
            "src": "600:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "760:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "770:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "785:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "792:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "770:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "752:7:11",
                "type": ""
              }
            ],
            "src": "715:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "903:92:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "926:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "964:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Pool_$1132",
                              "nodeType": "YulIdentifier",
                              "src": "933:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "933:37:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "923:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:48:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:56:11"
                  },
                  "nodeType": "YulIf",
                  "src": "913:2:11"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Pool_$1132",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "896:5:11",
                "type": ""
              }
            ],
            "src": "847:148:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Pool_$1132_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Pool_$1132(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Pool_$1132_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Pool_$1132_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Pool_$1132(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Pool_$1132(value) {\n        if iszero(eq(value, cleanup_t_contract$_Pool_$1132(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8709:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:259:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "137:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "121:15:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "203:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "210:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "196:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "248:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "230:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "303:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "272:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "268:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "286:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "265:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "338:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "343:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "348:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "316:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:39:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:11",
                "type": ""
              }
            ],
            "src": "7:354:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "451:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "438:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "429:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "494:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "467:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "467:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "397:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "405:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "413:5:11",
                "type": ""
              }
            ],
            "src": "367:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "599:215:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "648:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "657:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "660:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "650:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "650:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "650:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "627:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "635:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "623:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "623:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "642:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "619:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "609:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "673:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "687:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "687:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "677:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "709:99:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "789:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "796:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "804:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "718:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:90:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "709:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "577:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "585:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "593:5:11",
                "type": ""
              }
            ],
            "src": "526:288:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "872:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "882:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "904:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "891:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "882:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "947:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "920:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "920:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "850:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "858:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "866:5:11",
                "type": ""
              }
            ],
            "src": "820:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1031:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1077:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1052:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1061:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1048:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1073:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1041:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1103:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1118:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1122:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1147:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1182:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1193:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1178:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1178:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1157:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1147:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1012:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1024:6:11",
                "type": ""
              }
            ],
            "src": "965:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1347:538:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1393:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1402:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1395:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1395:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1368:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1364:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1364:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1389:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1357:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:224:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:38:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1458:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1469:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1454:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1454:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1448:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1448:24:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1519:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1528:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1531:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1521:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1521:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1521:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1488:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1488:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1485:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1549:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1605:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1616:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1601:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1601:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1559:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1559:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1549:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1653:225:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1668:39:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1692:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1703:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1688:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1688:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1682:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:25:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1672:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1754:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1763:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1766:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1756:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1756:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1756:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1726:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1734:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1720:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1784:84:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1840:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1851:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1836:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1836:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1860:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1794:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:74:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1784:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1309:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1320:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1332:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1340:6:11",
                "type": ""
              }
            ],
            "src": "1233:652:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1974:324:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2020:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2029:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2032:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2022:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2022:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2022:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1995:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2004:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1991:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1991:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2016:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1987:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1984:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2046:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2061:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2065:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2090:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2125:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2136:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2121:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2121:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2145:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2100:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2100:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2090:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2173:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2188:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2202:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2192:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2218:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2253:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2264:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2249:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2249:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2273:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2228:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2218:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1936:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1947:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1959:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1967:6:11",
                "type": ""
              }
            ],
            "src": "1891:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2369:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2386:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2409:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2391:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2391:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2379:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2379:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2379:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2357:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2364:3:11",
                "type": ""
              }
            ],
            "src": "2304:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:81:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2525:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2576:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1756_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2530:45:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:65:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1756_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2496:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2503:3:11",
                "type": ""
              }
            ],
            "src": "2428:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:79:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2690:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2739:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Pool_$1132_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2695:43:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:50:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2683:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2683:63:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Pool_$1132_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2661:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2668:3:11",
                "type": ""
              }
            ],
            "src": "2595:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:272:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2860:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2907:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2874:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2874:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2864:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:78:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2988:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2993:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2929:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:71:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3035:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3042:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3049:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3054:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3009:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3009:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3070:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3081:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3108:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3086:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3077:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3070:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2831:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2838:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2846:3:11",
                "type": ""
              }
            ],
            "src": "2758:364:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3193:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3210:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3233:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3215:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3203:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3203:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3203:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3181:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3188:3:11",
                "type": ""
              }
            ],
            "src": "3128:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3350:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3360:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3372:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3383:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3368:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3360:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3440:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3453:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3464:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3396:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3396:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3396:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3322:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3334:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3345:4:11",
                "type": ""
              }
            ],
            "src": "3252:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:137:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3601:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3613:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3624:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3609:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3601:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3694:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3707:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3718:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3703:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3703:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Pool_$1132_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3637:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:84:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:84:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Pool_$1132__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3563:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3575:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3586:4:11",
                "type": ""
              }
            ],
            "src": "3480:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3852:195:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3862:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3874:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3885:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3870:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3870:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3862:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3928:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3954:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4026:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4035:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3962:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3954:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3824:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3836:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3847:4:11",
                "type": ""
              }
            ],
            "src": "3734:313:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4214:292:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4224:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4236:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4247:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4232:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4232:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4224:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4271:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4282:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4267:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4267:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4290:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4296:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4286:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4286:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4260:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4260:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4316:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4388:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4397:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4324:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4324:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4316:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4471:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4484:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4495:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4480:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4480:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1756_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4412:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4412:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4412:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1756__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4178:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4190:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4198:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4209:4:11",
                "type": ""
              }
            ],
            "src": "4053:453:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4734:513:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4744:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4756:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4767:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4752:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4752:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4744:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4792:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4803:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4788:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4788:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4811:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4817:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4807:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4807:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4781:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4781:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4781:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4837:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4909:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4918:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4845:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4845:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4837:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4944:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4955:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4940:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4940:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4964:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4970:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4960:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4960:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4933:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4933:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4990:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5062:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5071:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4998:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4990:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5130:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5143:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5154:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5139:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5139:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5086:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5086:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5086:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5212:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5225:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5236:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5221:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5221:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5168:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5168:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5168:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4682:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4694:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4702:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4710:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4718:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4729:4:11",
                "type": ""
              }
            ],
            "src": "4512:735:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5351:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5361:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5373:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5369:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5361:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5441:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5454:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5465:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5450:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5450:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5397:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5323:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5335:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5346:4:11",
                "type": ""
              }
            ],
            "src": "5253:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5622:221:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5632:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5644:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5655:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5640:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5640:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5632:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5712:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5725:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5736:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5721:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5721:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5668:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5668:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5668:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5808:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5821:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5832:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5817:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5817:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1756_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5749:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5749:87:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5749:87:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_contract$_IERC20_$1756__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5586:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5598:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5606:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5617:4:11",
                "type": ""
              }
            ],
            "src": "5481:362:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5890:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5900:30:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "5910:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5910:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5900:6:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5959:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5967:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "5939:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5939:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5939:33:11"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5874:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5883:6:11",
                "type": ""
              }
            ],
            "src": "5849:129:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6024:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6034:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6050:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6044:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6044:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6034:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6017:6:11",
                "type": ""
              }
            ],
            "src": "5984:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6132:241:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6237:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6239:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6239:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6239:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6209:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6217:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6206:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6206:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6203:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6269:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6299:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6277:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6277:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6269:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6343:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6355:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6361:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6351:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6351:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6343:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6116:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6127:4:11",
                "type": ""
              }
            ],
            "src": "6065:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6438:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6449:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6465:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6459:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6459:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6449:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6421:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6431:6:11",
                "type": ""
              }
            ],
            "src": "6379:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6580:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6597:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6602:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6590:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6590:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6590:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6618:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6637:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6642:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6633:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6618:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6552:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6557:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6568:11:11",
                "type": ""
              }
            ],
            "src": "6484:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6704:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6714:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6743:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6725:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6725:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6714:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6686:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6696:7:11",
                "type": ""
              }
            ],
            "src": "6659:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6806:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6816:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6831:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6838:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6827:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6827:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6816:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6788:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6798:7:11",
                "type": ""
              }
            ],
            "src": "6761:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6938:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6948:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6959:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6948:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6920:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6930:7:11",
                "type": ""
              }
            ],
            "src": "6893:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7051:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7061:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7120:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1756_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7074:45:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7074:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7061:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1756_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7031:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7041:9:11",
                "type": ""
              }
            ],
            "src": "6976:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7213:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7223:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7254:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7236:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7236:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7223:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1756_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7193:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7203:9:11",
                "type": ""
              }
            ],
            "src": "7138:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7345:79:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7355:63:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7412:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Pool_$1132_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7368:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7368:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7355:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1132_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7325:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7335:9:11",
                "type": ""
              }
            ],
            "src": "7272:152:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7503:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7513:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7544:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7526:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7526:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7513:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Pool_$1132_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7483:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7493:9:11",
                "type": ""
              }
            ],
            "src": "7430:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7611:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7621:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7630:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7625:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7690:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7715:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7720:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7711:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7711:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7734:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7739:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7730:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7730:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7724:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7724:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7704:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7704:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7704:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7651:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7654:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7648:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7648:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7662:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7664:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7673:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7676:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7669:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7669:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7664:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7644:3:11",
                    "statements": []
                  },
                  "src": "7640:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7787:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7837:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7842:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7833:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7833:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7851:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7826:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7826:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7826:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7768:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7771:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7765:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7765:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7762:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7593:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7598:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7603:6:11",
                "type": ""
              }
            ],
            "src": "7562:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7918:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7928:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7950:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "7980:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7958:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7958:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7946:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7946:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7932:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8097:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8099:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8099:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8099:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8040:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8052:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8037:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8037:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8076:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8088:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8073:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8073:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8034:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8034:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8031:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8135:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8139:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8128:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8128:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8128:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7904:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7912:4:11",
                "type": ""
              }
            ],
            "src": "7875:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8190:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8207:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8210:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8200:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8200:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8200:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8304:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8307:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8297:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8297:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8297:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8328:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8331:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8321:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8321:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8321:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8162:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8396:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8406:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8424:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8431:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8420:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8420:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8440:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8436:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8436:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8416:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8416:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "8406:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8379:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "8389:6:11",
                "type": ""
              }
            ],
            "src": "8348:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8499:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8556:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8565:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8568:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8558:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8558:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8558:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8522:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8547:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8529:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8529:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8519:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8519:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8512:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8512:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8509:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8492:5:11",
                "type": ""
              }
            ],
            "src": "8456:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8627:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8684:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8693:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8696:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8686:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8686:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8686:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8650:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8675:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8657:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8657:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8647:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8647:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8640:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8640:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8637:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8620:5:11",
                "type": ""
              }
            ],
            "src": "8584:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1756_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1756_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Pool_$1132_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Pool_$1132_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Pool_$1132__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Pool_$1132_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_contract$_IERC20_$1756__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_IERC20_$1756_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC20_$1756__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$1756_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$1756_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1756_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1756_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1132_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Pool_$1132_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Pool_$1132_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "207:1227:2:-:0;;;577:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;619:10;611:5;;:18;;;;;;;;;;;;;;;;;;651:10;639:9;;:22;;;;;;;;;;;;;;;;;;678:5;671:4;;:12;;;;;;;;;;;;;;;;;;577:113;207:1227;;7:169:11;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:310::-;265:6;314:2;302:9;293:7;289:23;285:32;282:2;;;330:1;327;320:12;282:2;373:1;398:77;467:7;458:6;447:9;443:22;398:77;:::i;:::-;388:87;;344:141;272:220;;;;:::o;498:96::-;535:7;564:24;582:5;564:24;:::i;:::-;553:35;;543:51;;;:::o;600:109::-;650:7;679:24;697:5;679:24;:::i;:::-;668:35;;658:51;;;:::o;715:126::-;752:7;792:42;785:5;781:54;770:65;;760:81;;;:::o;847:148::-;933:37;964:5;933:37;:::i;:::-;926:5;923:48;913:2;;985:1;982;975:12;913:2;903:92;:::o;207:1227:2:-;;;;;;;",
  "deployedSourceMap": "207:1227:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;284:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;861:570;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;353:16;;;;;;;;;;;;;:::o;231:24::-;;;;;;;;;;;;:::o;696:159::-;418:5;;;;;;;;;;;404:19;;:10;:19;;;396:28;;;;;;792:3:::1;766:30;;:14;:30;;;762:87;;824:14;812:9;::::0;:26:::1;;;;;;;;;;;;;;;;;;762:87;696:159:::0;:::o;284:20::-;;;;;;;;;;;;;:::o;861:570::-;480:5;;;;;;;;;;;466:19;;:10;:19;;;458:28;;;;;;982:24:::1;1008:21:::0;1033:4:::1;;;;;;;;;;;:25;;;1059:8;1033:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:87;;;;1078:16;1110:10;1122:6;1130:14;1154:4;;;;;;;;;;;1097:63;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1078:82;;1209:7;1227:10;1239:9;1219:30;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1209:40;;1305:9;1264:52;;1291:3;1264:52;;;1271:10;1264:52;;;;;;:::i;:::-;;;;;;;;1377:4;;;;;;;;;;;:26;;;1404:8;1414:9;1377:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;488:1;;;;861:570:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:354:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:139::-;413:5;451:6;438:20;429:29;;467:33;494:5;467:33;:::i;:::-;419:87;;;;:::o;526:288::-;593:5;642:3;635:4;627:6;623:17;619:27;609:2;;660:1;657;650:12;609:2;693:6;687:13;718:90;804:3;796:6;789:4;781:6;777:17;718:90;:::i;:::-;709:99;;599:215;;;;;:::o;820:139::-;866:5;904:6;891:20;882:29;;920:33;947:5;920:33;:::i;:::-;872:87;;;;:::o;965:262::-;1024:6;1073:2;1061:9;1052:7;1048:23;1044:32;1041:2;;;1089:1;1086;1079:12;1041:2;1132:1;1157:53;1202:7;1193:6;1182:9;1178:22;1157:53;:::i;:::-;1147:63;;1103:117;1031:196;;;;:::o;1233:652::-;1332:6;1340;1389:2;1377:9;1368:7;1364:23;1360:32;1357:2;;;1405:1;1402;1395:12;1357:2;1469:1;1458:9;1454:17;1448:24;1499:18;1491:6;1488:30;1485:2;;;1531:1;1528;1521:12;1485:2;1559:74;1625:7;1616:6;1605:9;1601:22;1559:74;:::i;:::-;1549:84;;1419:224;1703:2;1692:9;1688:18;1682:25;1734:18;1726:6;1723:30;1720:2;;;1766:1;1763;1756:12;1720:2;1794:74;1860:7;1851:6;1840:9;1836:22;1794:74;:::i;:::-;1784:84;;1653:225;1347:538;;;;;:::o;1891:407::-;1959:6;1967;2016:2;2004:9;1995:7;1991:23;1987:32;1984:2;;;2032:1;2029;2022:12;1984:2;2075:1;2100:53;2145:7;2136:6;2125:9;2121:22;2100:53;:::i;:::-;2090:63;;2046:117;2202:2;2228:53;2273:7;2264:6;2253:9;2249:22;2228:53;:::i;:::-;2218:63;;2173:118;1974:324;;;;;:::o;2304:118::-;2391:24;2409:5;2391:24;:::i;:::-;2386:3;2379:37;2369:53;;:::o;2428:161::-;2530:52;2576:5;2530:52;:::i;:::-;2525:3;2518:65;2508:81;;:::o;2595:157::-;2695:50;2739:5;2695:50;:::i;:::-;2690:3;2683:63;2673:79;;:::o;2758:364::-;2846:3;2874:39;2907:5;2874:39;:::i;:::-;2929:71;2993:6;2988:3;2929:71;:::i;:::-;2922:78;;3009:52;3054:6;3049:3;3042:4;3035:5;3031:16;3009:52;:::i;:::-;3086:29;3108:6;3086:29;:::i;:::-;3081:3;3077:39;3070:46;;2850:272;;;;;:::o;3128:118::-;3215:24;3233:5;3215:24;:::i;:::-;3210:3;3203:37;3193:53;;:::o;3252:222::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3396:71;3464:1;3453:9;3449:17;3440:6;3396:71;:::i;:::-;3350:124;;;;:::o;3480:248::-;3586:4;3624:2;3613:9;3609:18;3601:26;;3637:84;3718:1;3707:9;3703:17;3694:6;3637:84;:::i;:::-;3591:137;;;;:::o;3734:313::-;3847:4;3885:2;3874:9;3870:18;3862:26;;3934:9;3928:4;3924:20;3920:1;3909:9;3905:17;3898:47;3962:78;4035:4;4026:6;3962:78;:::i;:::-;3954:86;;3852:195;;;;:::o;4053:453::-;4209:4;4247:2;4236:9;4232:18;4224:26;;4296:9;4290:4;4286:20;4282:1;4271:9;4267:17;4260:47;4324:78;4397:4;4388:6;4324:78;:::i;:::-;4316:86;;4412:87;4495:2;4484:9;4480:18;4471:6;4412:87;:::i;:::-;4214:292;;;;;:::o;4512:735::-;4729:4;4767:3;4756:9;4752:19;4744:27;;4817:9;4811:4;4807:20;4803:1;4792:9;4788:17;4781:47;4845:78;4918:4;4909:6;4845:78;:::i;:::-;4837:86;;4970:9;4964:4;4960:20;4955:2;4944:9;4940:18;4933:48;4998:78;5071:4;5062:6;4998:78;:::i;:::-;4990:86;;5086:72;5154:2;5143:9;5139:18;5130:6;5086:72;:::i;:::-;5168;5236:2;5225:9;5221:18;5212:6;5168:72;:::i;:::-;4734:513;;;;;;;:::o;5253:222::-;5346:4;5384:2;5373:9;5369:18;5361:26;;5397:71;5465:1;5454:9;5450:17;5441:6;5397:71;:::i;:::-;5351:124;;;;:::o;5481:362::-;5617:4;5655:2;5644:9;5640:18;5632:26;;5668:71;5736:1;5725:9;5721:17;5712:6;5668:71;:::i;:::-;5749:87;5832:2;5821:9;5817:18;5808:6;5749:87;:::i;:::-;5622:221;;;;;:::o;5849:129::-;5883:6;5910:20;;:::i;:::-;5900:30;;5939:33;5967:4;5959:6;5939:33;:::i;:::-;5890:88;;;:::o;5984:75::-;6017:6;6050:2;6044:9;6034:19;;6024:35;:::o;6065:308::-;6127:4;6217:18;6209:6;6206:30;6203:2;;;6239:18;;:::i;:::-;6203:2;6277:29;6299:6;6277:29;:::i;:::-;6269:37;;6361:4;6355;6351:15;6343:23;;6132:241;;;:::o;6379:99::-;6431:6;6465:5;6459:12;6449:22;;6438:40;;;:::o;6484:169::-;6568:11;6602:6;6597:3;6590:19;6642:4;6637:3;6633:14;6618:29;;6580:73;;;;:::o;6659:96::-;6696:7;6725:24;6743:5;6725:24;:::i;:::-;6714:35;;6704:51;;;:::o;6761:126::-;6798:7;6838:42;6831:5;6827:54;6816:65;;6806:81;;;:::o;6893:77::-;6930:7;6959:5;6948:16;;6938:32;;;:::o;6976:156::-;7041:9;7074:52;7120:5;7074:52;:::i;:::-;7061:65;;7051:81;;;:::o;7138:128::-;7203:9;7236:24;7254:5;7236:24;:::i;:::-;7223:37;;7213:53;;;:::o;7272:152::-;7335:9;7368:50;7412:5;7368:50;:::i;:::-;7355:63;;7345:79;;;:::o;7430:126::-;7493:9;7526:24;7544:5;7526:24;:::i;:::-;7513:37;;7503:53;;;:::o;7562:307::-;7630:1;7640:113;7654:6;7651:1;7648:13;7640:113;;;7739:1;7734:3;7730:11;7724:18;7720:1;7715:3;7711:11;7704:39;7676:2;7673:1;7669:10;7664:15;;7640:113;;;7771:6;7768:1;7765:13;7762:2;;;7851:1;7842:6;7837:3;7833:16;7826:27;7762:2;7611:258;;;;:::o;7875:281::-;7958:27;7980:4;7958:27;:::i;:::-;7950:6;7946:40;8088:6;8076:10;8073:22;8052:18;8040:10;8037:34;8034:62;8031:2;;;8099:18;;:::i;:::-;8031:2;8139:10;8135:2;8128:22;7918:238;;;:::o;8162:180::-;8210:77;8207:1;8200:88;8307:4;8304:1;8297:15;8331:4;8328:1;8321:15;8348:102;8389:6;8440:2;8436:7;8431:2;8424:5;8420:14;8416:28;8406:38;;8396:54;;;:::o;8456:122::-;8529:24;8547:5;8529:24;:::i;:::-;8522:5;8519:35;8509:2;;8568:1;8565;8558:12;8509:2;8499:79;:::o;8584:122::-;8657:24;8675:5;8657:24;:::i;:::-;8650:5;8647:35;8637:2;;8696:1;8693;8686:12;8637:2;8627:79;:::o",
  "source": "pragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./Pool.sol\";\nimport \"./DaoToken.sol\";\nimport \"./Dao.sol\";\n\ncontract Factory {\n\n    address public initiator;  // Offchain initiator\n    address public owner;  // Will allow to setup offchain initiator\n    Pool public pool;\n\n    modifier ownerOnly {require(msg.sender == owner); _;}\n    modifier initiatorOnly {require(msg.sender == owner); _;}\n\n    event NewDao(string name, address indexed dao, address indexed dao_token);\n\n    constructor(Pool _pool) {\n        owner = msg.sender;\n        initiator = msg.sender;\n        pool = _pool;\n    }\n\n    function setup(address _new_initiator) public ownerOnly {\n        if (_new_initiator != address(0x0)) {\n            initiator = _new_initiator;\n        }\n    }\n\n    function new_dao(uint _shares_amount, uint _pool_id) public initiatorOnly {\n        //  Setting up the emission\n        (string memory party_name, string memory  ticker) = pool.get_pool_description(_pool_id);\n        IERC20 dao_token = new DaoToken(party_name, ticker, _shares_amount, address(pool));\n        //  Building the brand new DAO\n        Dao dao = new Dao(party_name, dao_token);\n        emit NewDao(party_name, address(dao), address(dao_token));\n        //  Sending tokens to Dao for distribution\n        pool.distribute_dao_tokens(_pool_id, dao_token);\n    }\n\n}\n",
  "sourcePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1937
      ],
      "Dao": [
        556
      ],
      "DaoToken": [
        588
      ],
      "ERC20": [
        1678
      ],
      "Factory": [
        737
      ],
      "IERC165": [
        1949
      ],
      "IERC20": [
        1756
      ],
      "IERC20Metadata": [
        1781
      ],
      "IERC721": [
        1897
      ],
      "IERC721Receiver": [
        1915
      ],
      "Pool": [
        1132
      ]
    },
    "id": 738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 590,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 591,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 1757,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 592,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 1898,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 593,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 1133,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 594,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 589,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 595,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 557,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          556,
          588
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 737,
        "linearizedBaseContracts": [
          737
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 597,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 737,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 596,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 599,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 737,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 598,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 602,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 737,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1132",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 601,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 600,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1132,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1132,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1132",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 605,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 607,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 611,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 613,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 616,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 618,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 622,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 624,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 632,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 628,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 630,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 652,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 638,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 639,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 643,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 644,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 648,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1132",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 649,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1132",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1132",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 651,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 653,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1132",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 634,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 633,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1132,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1132,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1132",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 737,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 660,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 671,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 670,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 666,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 667,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 669,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 673,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 657,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 613,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 737,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "935:496:2",
              "statements": [
                {
                  "assignments": [
                    683,
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 685,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 684,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 688,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 686,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1132",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1756",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 692,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 691,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1756,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1756,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 705,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 697,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 698,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 699,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 702,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "1154:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1132",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1132",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1146:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 700,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1146:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$588_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 694,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 588,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 588,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$588",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$588",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:82:2"
                },
                {
                  "assignments": [
                    708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 708,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1213:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "1209:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$556",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 707,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 706,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 556,
                          "src": "1209:3:2"
                        },
                        "referencedDeclaration": 556,
                        "src": "1209:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$556",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 715,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 712,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1227:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 713,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "1239:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1219:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1756_$returns$_t_contract$_Dao_$556_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 710,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 709,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 556,
                          "src": "1223:3:2"
                        },
                        "referencedDeclaration": 556,
                        "src": "1223:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$556",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$556",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1209:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 717,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1271:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 720,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "1291:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$556",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$556",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1283:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1283:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 724,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "1305:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1756",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1756",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1297:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 722,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1297:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1297:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 716,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "1264:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "EmitStatement",
                  "src": "1259:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "1404:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 732,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "1414:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 728,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1377:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1132",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "1377:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC20_$1756_$returns$__$",
                        "typeString": "function (uint256,contract IERC20) external"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:47:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 736,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 680,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 679,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 624,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 737,
            "src": "861:570:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 738,
        "src": "207:1227:2",
        "usedErrors": []
      }
    ],
    "src": "0:1435:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        1937
      ],
      "Dao": [
        556
      ],
      "DaoToken": [
        588
      ],
      "ERC20": [
        1678
      ],
      "Factory": [
        737
      ],
      "IERC165": [
        1949
      ],
      "IERC20": [
        1756
      ],
      "IERC20Metadata": [
        1781
      ],
      "IERC721": [
        1897
      ],
      "IERC721Receiver": [
        1915
      ],
      "Pool": [
        1132
      ]
    },
    "id": 738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 590,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 591,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 1757,
        "src": "24:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 592,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 1898,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 593,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 1133,
        "src": "140:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/DaoToken.sol",
        "file": "./DaoToken.sol",
        "id": 594,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 589,
        "src": "161:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/y.sosunov/git/definition-hackathon/onchain/contracts/Dao.sol",
        "file": "./Dao.sol",
        "id": 595,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 557,
        "src": "186:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          556,
          588
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 737,
        "linearizedBaseContracts": [
          737
        ],
        "name": "Factory",
        "nameLocation": "216:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5c39fcc1",
            "id": 597,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "246:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 737,
            "src": "231:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 596,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 599,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "299:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 737,
            "src": "284:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 598,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 602,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "365:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 737,
            "src": "353:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$1132",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 601,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 600,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1132,
                "src": "353:4:2"
              },
              "referencedDeclaration": 1132,
              "src": "353:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$1132",
                "typeString": "contract Pool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "395:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 605,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "404:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 607,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "418:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "404:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "396:28:2"
                },
                {
                  "id": 611,
                  "nodeType": "PlaceholderStatement",
                  "src": "426:1:2"
                }
              ]
            },
            "id": 613,
            "name": "ownerOnly",
            "nameLocation": "385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "src": "376:53:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "457:34:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 616,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "466:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "466:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 618,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "480:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "466:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:2"
                },
                {
                  "id": 622,
                  "nodeType": "PlaceholderStatement",
                  "src": "488:1:2"
                }
              ]
            },
            "id": 624,
            "name": "initiatorOnly",
            "nameLocation": "443:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:2"
            },
            "src": "434:57:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 632,
            "name": "NewDao",
            "nameLocation": "503:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "517:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "510:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 628,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "539:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "523:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 630,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dao_token",
                  "nameLocation": "560:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "544:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:61:2"
            },
            "src": "497:74:2"
          },
          {
            "body": {
              "id": 652,
              "nodeType": "Block",
              "src": "601:89:2",
              "statements": [
                {
                  "expression": {
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 638,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "611:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 639,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:2"
                },
                {
                  "expression": {
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 643,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "639:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 644,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "651:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "639:22:2"
                },
                {
                  "expression": {
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 648,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "671:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1132",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 649,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "678:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$1132",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1132",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 651,
                  "nodeType": "ExpressionStatement",
                  "src": "671:12:2"
                }
              ]
            },
            "id": 653,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "589:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pool_$1132",
                    "typeString": "contract Pool"
                  },
                  "typeName": {
                    "id": 634,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 633,
                      "name": "Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1132,
                      "src": "589:4:2"
                    },
                    "referencedDeclaration": 1132,
                    "src": "589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$1132",
                      "typeString": "contract Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:12:2"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:2"
            },
            "scope": 737,
            "src": "577:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "752:103:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 660,
                      "name": "_new_initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "784:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 671,
                  "nodeType": "IfStatement",
                  "src": "762:87:2",
                  "trueBody": {
                    "id": 670,
                    "nodeType": "Block",
                    "src": "798:51:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 666,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "812:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 667,
                            "name": "_new_initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "824:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "812:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 669,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "66d38203",
            "id": 673,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 657,
                  "name": "ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 613,
                  "src": "742:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:9:2"
              }
            ],
            "name": "setup",
            "nameLocation": "705:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "_new_initiator",
                  "nameLocation": "719:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "711:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:24:2"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 737,
            "src": "696:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "935:496:2",
              "statements": [
                {
                  "assignments": [
                    683,
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "mutability": "mutable",
                      "name": "party_name",
                      "nameLocation": "996:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "982:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 685,
                      "mutability": "mutable",
                      "name": "ticker",
                      "nameLocation": "1023:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "1008:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 684,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 688,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "1059:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 686,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1033:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1132",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_pool_description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "1033:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory,string memory)"
                      }
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:87:2"
                },
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "mutability": "mutable",
                      "name": "dao_token",
                      "nameLocation": "1085:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "1078:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1756",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 692,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 691,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1756,
                          "src": "1078:6:2"
                        },
                        "referencedDeclaration": 1756,
                        "src": "1078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 705,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 697,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1110:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 698,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "1122:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 699,
                        "name": "_shares_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "1130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 702,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "1154:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$1132",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$1132",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1146:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 700,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1146:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1097:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_DaoToken_$588_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract DaoToken)"
                      },
                      "typeName": {
                        "id": 695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 694,
                          "name": "DaoToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 588,
                          "src": "1101:8:2"
                        },
                        "referencedDeclaration": 588,
                        "src": "1101:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoToken_$588",
                          "typeString": "contract DaoToken"
                        }
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoToken_$588",
                      "typeString": "contract DaoToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:82:2"
                },
                {
                  "assignments": [
                    708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 708,
                      "mutability": "mutable",
                      "name": "dao",
                      "nameLocation": "1213:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "1209:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dao_$556",
                        "typeString": "contract Dao"
                      },
                      "typeName": {
                        "id": 707,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 706,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 556,
                          "src": "1209:3:2"
                        },
                        "referencedDeclaration": 556,
                        "src": "1209:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$556",
                          "typeString": "contract Dao"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 715,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 712,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1227:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 713,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "1239:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1219:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_contract$_IERC20_$1756_$returns$_t_contract$_Dao_$556_$",
                        "typeString": "function (string memory,contract IERC20) returns (contract Dao)"
                      },
                      "typeName": {
                        "id": 710,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 709,
                          "name": "Dao",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 556,
                          "src": "1223:3:2"
                        },
                        "referencedDeclaration": 556,
                        "src": "1223:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dao_$556",
                          "typeString": "contract Dao"
                        }
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dao_$556",
                      "typeString": "contract Dao"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1209:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 717,
                        "name": "party_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "1271:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 720,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "1291:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dao_$556",
                              "typeString": "contract Dao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dao_$556",
                              "typeString": "contract Dao"
                            }
                          ],
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1283:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1283:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 724,
                            "name": "dao_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "1305:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1756",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1756",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1297:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 722,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1297:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1297:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 716,
                      "name": "NewDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "1264:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "EmitStatement",
                  "src": "1259:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "_pool_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "1404:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 732,
                        "name": "dao_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "1414:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1756",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 728,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1377:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$1132",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute_dao_tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "1377:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC20_$1756_$returns$__$",
                        "typeString": "function (uint256,contract IERC20) external"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:47:2"
                }
              ]
            },
            "functionSelector": "e31dff13",
            "id": 736,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 680,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 679,
                  "name": "initiatorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 624,
                  "src": "921:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "921:13:2"
              }
            ],
            "name": "new_dao",
            "nameLocation": "870:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "_shares_amount",
                  "nameLocation": "883:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "878:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_pool_id",
                  "nameLocation": "904:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "899:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:36:2"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:2"
            },
            "scope": 737,
            "src": "861:570:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 738,
        "src": "207:1227:2",
        "usedErrors": []
      }
    ],
    "src": "0:1435:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x0048693Ab40D65Ae24f66679FD707B9482495763",
      "transactionHash": "0x459e1c13238d4aeac9df5bb407209ccbbc56d71be123ffac57452321e0ba5d4b"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9F787Fb9d018f2419C1FD8D35236D8a29E343c49",
      "transactionHash": "0xe8443939789a907786edccec370e91a5767185a67f55fa84c1e708b1918961d8"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-26T05:51:07.311Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}